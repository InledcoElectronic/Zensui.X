

Microchip Technology PIC PRO Macro Assembler V1.41 build -162212810 
                                                                                               Fri Oct 27 16:38:26 2017

Microchip Technology Omniscient Code Generator v1.41 (PRO mode) build 201701250102
     1                           	processor	16F1508
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text22,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text36,local,class=CODE,merge=1,delta=2
    14                           	psect	text37,local,class=CODE,merge=1,delta=2
    15                           	psect	pa_nodes0,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.41
    19                           ; Generated 25/01/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F1508 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  008C                     	;# 
    80  008D                     	;# 
    81  008E                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0095                     	;# 
    86  0096                     	;# 
    87  0097                     	;# 
    88  0099                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009B                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  009F                     	;# 
    96  010C                     	;# 
    97  010D                     	;# 
    98  010E                     	;# 
    99  0111                     	;# 
   100  0112                     	;# 
   101  0113                     	;# 
   102  0114                     	;# 
   103  0115                     	;# 
   104  0116                     	;# 
   105  0117                     	;# 
   106  0118                     	;# 
   107  0119                     	;# 
   108  011D                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  018E                     	;# 
   112  0191                     	;# 
   113  0191                     	;# 
   114  0192                     	;# 
   115  0193                     	;# 
   116  0193                     	;# 
   117  0194                     	;# 
   118  0195                     	;# 
   119  0196                     	;# 
   120  0197                     	;# 
   121  0199                     	;# 
   122  019A                     	;# 
   123  019B                     	;# 
   124  019B                     	;# 
   125  019C                     	;# 
   126  019D                     	;# 
   127  019E                     	;# 
   128  019F                     	;# 
   129  020C                     	;# 
   130  020D                     	;# 
   131  0211                     	;# 
   132  0211                     	;# 
   133  0212                     	;# 
   134  0212                     	;# 
   135  0213                     	;# 
   136  0213                     	;# 
   137  0214                     	;# 
   138  0214                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0216                     	;# 
   143  0216                     	;# 
   144  0217                     	;# 
   145  0217                     	;# 
   146  0391                     	;# 
   147  0392                     	;# 
   148  0393                     	;# 
   149  0394                     	;# 
   150  0395                     	;# 
   151  0396                     	;# 
   152  0498                     	;# 
   153  0498                     	;# 
   154  0499                     	;# 
   155  049A                     	;# 
   156  049B                     	;# 
   157  049B                     	;# 
   158  049C                     	;# 
   159  049D                     	;# 
   160  049E                     	;# 
   161  049F                     	;# 
   162  0611                     	;# 
   163  0612                     	;# 
   164  0613                     	;# 
   165  0613                     	;# 
   166  0614                     	;# 
   167  0615                     	;# 
   168  0616                     	;# 
   169  0616                     	;# 
   170  0617                     	;# 
   171  0618                     	;# 
   172  0619                     	;# 
   173  0619                     	;# 
   174  061A                     	;# 
   175  061B                     	;# 
   176  061C                     	;# 
   177  061C                     	;# 
   178  0691                     	;# 
   179  0692                     	;# 
   180  0693                     	;# 
   181  0694                     	;# 
   182  0695                     	;# 
   183  0F0F                     	;# 
   184  0F10                     	;# 
   185  0F11                     	;# 
   186  0F12                     	;# 
   187  0F13                     	;# 
   188  0F14                     	;# 
   189  0F15                     	;# 
   190  0F16                     	;# 
   191  0F17                     	;# 
   192  0F18                     	;# 
   193  0F19                     	;# 
   194  0F1A                     	;# 
   195  0F1B                     	;# 
   196  0F1C                     	;# 
   197  0F1D                     	;# 
   198  0F1E                     	;# 
   199  0F1F                     	;# 
   200  0F20                     	;# 
   201  0F21                     	;# 
   202  0F22                     	;# 
   203  0F23                     	;# 
   204  0F24                     	;# 
   205  0F25                     	;# 
   206  0F26                     	;# 
   207  0F27                     	;# 
   208  0F28                     	;# 
   209  0F29                     	;# 
   210  0F2A                     	;# 
   211  0F2B                     	;# 
   212  0F2C                     	;# 
   213  0F2D                     	;# 
   214  0F2E                     	;# 
   215  0F2F                     	;# 
   216  0F8C                     	;# 
   217  0F8D                     	;# 
   218  0F91                     	;# 
   219  0F95                     	;# 
   220  0F96                     	;# 
   221  0F97                     	;# 
   222  0F9C                     	;# 
   223  0F9D                     	;# 
   224  0F9E                     	;# 
   225  0FE3                     	;# 
   226  0FE4                     	;# 
   227  0FE5                     	;# 
   228  0FE6                     	;# 
   229  0FE7                     	;# 
   230  0FE8                     	;# 
   231  0FE9                     	;# 
   232  0FEA                     	;# 
   233  0FEB                     	;# 
   234  0FED                     	;# 
   235  0FEE                     	;# 
   236  0FEF                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  0111                     	;# 
   285  0112                     	;# 
   286  0113                     	;# 
   287  0114                     	;# 
   288  0115                     	;# 
   289  0116                     	;# 
   290  0117                     	;# 
   291  0118                     	;# 
   292  0119                     	;# 
   293  011D                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  018E                     	;# 
   297  0191                     	;# 
   298  0191                     	;# 
   299  0192                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0194                     	;# 
   303  0195                     	;# 
   304  0196                     	;# 
   305  0197                     	;# 
   306  0199                     	;# 
   307  019A                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019C                     	;# 
   311  019D                     	;# 
   312  019E                     	;# 
   313  019F                     	;# 
   314  020C                     	;# 
   315  020D                     	;# 
   316  0211                     	;# 
   317  0211                     	;# 
   318  0212                     	;# 
   319  0212                     	;# 
   320  0213                     	;# 
   321  0213                     	;# 
   322  0214                     	;# 
   323  0214                     	;# 
   324  0215                     	;# 
   325  0215                     	;# 
   326  0215                     	;# 
   327  0216                     	;# 
   328  0216                     	;# 
   329  0217                     	;# 
   330  0217                     	;# 
   331  0391                     	;# 
   332  0392                     	;# 
   333  0393                     	;# 
   334  0394                     	;# 
   335  0395                     	;# 
   336  0396                     	;# 
   337  0498                     	;# 
   338  0498                     	;# 
   339  0499                     	;# 
   340  049A                     	;# 
   341  049B                     	;# 
   342  049B                     	;# 
   343  049C                     	;# 
   344  049D                     	;# 
   345  049E                     	;# 
   346  049F                     	;# 
   347  0611                     	;# 
   348  0612                     	;# 
   349  0613                     	;# 
   350  0613                     	;# 
   351  0614                     	;# 
   352  0615                     	;# 
   353  0616                     	;# 
   354  0616                     	;# 
   355  0617                     	;# 
   356  0618                     	;# 
   357  0619                     	;# 
   358  0619                     	;# 
   359  061A                     	;# 
   360  061B                     	;# 
   361  061C                     	;# 
   362  061C                     	;# 
   363  0691                     	;# 
   364  0692                     	;# 
   365  0693                     	;# 
   366  0694                     	;# 
   367  0695                     	;# 
   368  0F0F                     	;# 
   369  0F10                     	;# 
   370  0F11                     	;# 
   371  0F12                     	;# 
   372  0F13                     	;# 
   373  0F14                     	;# 
   374  0F15                     	;# 
   375  0F16                     	;# 
   376  0F17                     	;# 
   377  0F18                     	;# 
   378  0F19                     	;# 
   379  0F1A                     	;# 
   380  0F1B                     	;# 
   381  0F1C                     	;# 
   382  0F1D                     	;# 
   383  0F1E                     	;# 
   384  0F1F                     	;# 
   385  0F20                     	;# 
   386  0F21                     	;# 
   387  0F22                     	;# 
   388  0F23                     	;# 
   389  0F24                     	;# 
   390  0F25                     	;# 
   391  0F26                     	;# 
   392  0F27                     	;# 
   393  0F28                     	;# 
   394  0F29                     	;# 
   395  0F2A                     	;# 
   396  0F2B                     	;# 
   397  0F2C                     	;# 
   398  0F2D                     	;# 
   399  0F2E                     	;# 
   400  0F2F                     	;# 
   401  0F8C                     	;# 
   402  0F8D                     	;# 
   403  0F91                     	;# 
   404  0F95                     	;# 
   405  0F96                     	;# 
   406  0F97                     	;# 
   407  0F9C                     	;# 
   408  0F9D                     	;# 
   409  0F9E                     	;# 
   410  0FE3                     	;# 
   411  0FE4                     	;# 
   412  0FE5                     	;# 
   413  0FE6                     	;# 
   414  0FE7                     	;# 
   415  0FE8                     	;# 
   416  0FE9                     	;# 
   417  0FEA                     	;# 
   418  0FEB                     	;# 
   419  0FED                     	;# 
   420  0FEE                     	;# 
   421  0FEF                     	;# 
   422  0000                     	;# 
   423  0001                     	;# 
   424  0002                     	;# 
   425  0003                     	;# 
   426  0004                     	;# 
   427  0005                     	;# 
   428  0006                     	;# 
   429  0007                     	;# 
   430  0008                     	;# 
   431  0009                     	;# 
   432  000A                     	;# 
   433  000B                     	;# 
   434  000C                     	;# 
   435  000D                     	;# 
   436  000E                     	;# 
   437  0011                     	;# 
   438  0012                     	;# 
   439  0013                     	;# 
   440  0015                     	;# 
   441  0016                     	;# 
   442  0016                     	;# 
   443  0017                     	;# 
   444  0018                     	;# 
   445  0019                     	;# 
   446  001A                     	;# 
   447  001B                     	;# 
   448  001C                     	;# 
   449  008C                     	;# 
   450  008D                     	;# 
   451  008E                     	;# 
   452  0091                     	;# 
   453  0092                     	;# 
   454  0093                     	;# 
   455  0095                     	;# 
   456  0096                     	;# 
   457  0097                     	;# 
   458  0099                     	;# 
   459  009A                     	;# 
   460  009B                     	;# 
   461  009B                     	;# 
   462  009C                     	;# 
   463  009D                     	;# 
   464  009E                     	;# 
   465  009F                     	;# 
   466  010C                     	;# 
   467  010D                     	;# 
   468  010E                     	;# 
   469  0111                     	;# 
   470  0112                     	;# 
   471  0113                     	;# 
   472  0114                     	;# 
   473  0115                     	;# 
   474  0116                     	;# 
   475  0117                     	;# 
   476  0118                     	;# 
   477  0119                     	;# 
   478  011D                     	;# 
   479  018C                     	;# 
   480  018D                     	;# 
   481  018E                     	;# 
   482  0191                     	;# 
   483  0191                     	;# 
   484  0192                     	;# 
   485  0193                     	;# 
   486  0193                     	;# 
   487  0194                     	;# 
   488  0195                     	;# 
   489  0196                     	;# 
   490  0197                     	;# 
   491  0199                     	;# 
   492  019A                     	;# 
   493  019B                     	;# 
   494  019B                     	;# 
   495  019C                     	;# 
   496  019D                     	;# 
   497  019E                     	;# 
   498  019F                     	;# 
   499  020C                     	;# 
   500  020D                     	;# 
   501  0211                     	;# 
   502  0211                     	;# 
   503  0212                     	;# 
   504  0212                     	;# 
   505  0213                     	;# 
   506  0213                     	;# 
   507  0214                     	;# 
   508  0214                     	;# 
   509  0215                     	;# 
   510  0215                     	;# 
   511  0215                     	;# 
   512  0216                     	;# 
   513  0216                     	;# 
   514  0217                     	;# 
   515  0217                     	;# 
   516  0391                     	;# 
   517  0392                     	;# 
   518  0393                     	;# 
   519  0394                     	;# 
   520  0395                     	;# 
   521  0396                     	;# 
   522  0498                     	;# 
   523  0498                     	;# 
   524  0499                     	;# 
   525  049A                     	;# 
   526  049B                     	;# 
   527  049B                     	;# 
   528  049C                     	;# 
   529  049D                     	;# 
   530  049E                     	;# 
   531  049F                     	;# 
   532  0611                     	;# 
   533  0612                     	;# 
   534  0613                     	;# 
   535  0613                     	;# 
   536  0614                     	;# 
   537  0615                     	;# 
   538  0616                     	;# 
   539  0616                     	;# 
   540  0617                     	;# 
   541  0618                     	;# 
   542  0619                     	;# 
   543  0619                     	;# 
   544  061A                     	;# 
   545  061B                     	;# 
   546  061C                     	;# 
   547  061C                     	;# 
   548  0691                     	;# 
   549  0692                     	;# 
   550  0693                     	;# 
   551  0694                     	;# 
   552  0695                     	;# 
   553  0F0F                     	;# 
   554  0F10                     	;# 
   555  0F11                     	;# 
   556  0F12                     	;# 
   557  0F13                     	;# 
   558  0F14                     	;# 
   559  0F15                     	;# 
   560  0F16                     	;# 
   561  0F17                     	;# 
   562  0F18                     	;# 
   563  0F19                     	;# 
   564  0F1A                     	;# 
   565  0F1B                     	;# 
   566  0F1C                     	;# 
   567  0F1D                     	;# 
   568  0F1E                     	;# 
   569  0F1F                     	;# 
   570  0F20                     	;# 
   571  0F21                     	;# 
   572  0F22                     	;# 
   573  0F23                     	;# 
   574  0F24                     	;# 
   575  0F25                     	;# 
   576  0F26                     	;# 
   577  0F27                     	;# 
   578  0F28                     	;# 
   579  0F29                     	;# 
   580  0F2A                     	;# 
   581  0F2B                     	;# 
   582  0F2C                     	;# 
   583  0F2D                     	;# 
   584  0F2E                     	;# 
   585  0F2F                     	;# 
   586  0F8C                     	;# 
   587  0F8D                     	;# 
   588  0F91                     	;# 
   589  0F95                     	;# 
   590  0F96                     	;# 
   591  0F97                     	;# 
   592  0F9C                     	;# 
   593  0F9D                     	;# 
   594  0F9E                     	;# 
   595  0FE3                     	;# 
   596  0FE4                     	;# 
   597  0FE5                     	;# 
   598  0FE6                     	;# 
   599  0FE7                     	;# 
   600  0FE8                     	;# 
   601  0FE9                     	;# 
   602  0FEA                     	;# 
   603  0FEB                     	;# 
   604  0FED                     	;# 
   605  0FEE                     	;# 
   606  0FEF                     	;# 
   607  0000                     	;# 
   608  0001                     	;# 
   609  0002                     	;# 
   610  0003                     	;# 
   611  0004                     	;# 
   612  0005                     	;# 
   613  0006                     	;# 
   614  0007                     	;# 
   615  0008                     	;# 
   616  0009                     	;# 
   617  000A                     	;# 
   618  000B                     	;# 
   619  000C                     	;# 
   620  000D                     	;# 
   621  000E                     	;# 
   622  0011                     	;# 
   623  0012                     	;# 
   624  0013                     	;# 
   625  0015                     	;# 
   626  0016                     	;# 
   627  0016                     	;# 
   628  0017                     	;# 
   629  0018                     	;# 
   630  0019                     	;# 
   631  001A                     	;# 
   632  001B                     	;# 
   633  001C                     	;# 
   634  008C                     	;# 
   635  008D                     	;# 
   636  008E                     	;# 
   637  0091                     	;# 
   638  0092                     	;# 
   639  0093                     	;# 
   640  0095                     	;# 
   641  0096                     	;# 
   642  0097                     	;# 
   643  0099                     	;# 
   644  009A                     	;# 
   645  009B                     	;# 
   646  009B                     	;# 
   647  009C                     	;# 
   648  009D                     	;# 
   649  009E                     	;# 
   650  009F                     	;# 
   651  010C                     	;# 
   652  010D                     	;# 
   653  010E                     	;# 
   654  0111                     	;# 
   655  0112                     	;# 
   656  0113                     	;# 
   657  0114                     	;# 
   658  0115                     	;# 
   659  0116                     	;# 
   660  0117                     	;# 
   661  0118                     	;# 
   662  0119                     	;# 
   663  011D                     	;# 
   664  018C                     	;# 
   665  018D                     	;# 
   666  018E                     	;# 
   667  0191                     	;# 
   668  0191                     	;# 
   669  0192                     	;# 
   670  0193                     	;# 
   671  0193                     	;# 
   672  0194                     	;# 
   673  0195                     	;# 
   674  0196                     	;# 
   675  0197                     	;# 
   676  0199                     	;# 
   677  019A                     	;# 
   678  019B                     	;# 
   679  019B                     	;# 
   680  019C                     	;# 
   681  019D                     	;# 
   682  019E                     	;# 
   683  019F                     	;# 
   684  020C                     	;# 
   685  020D                     	;# 
   686  0211                     	;# 
   687  0211                     	;# 
   688  0212                     	;# 
   689  0212                     	;# 
   690  0213                     	;# 
   691  0213                     	;# 
   692  0214                     	;# 
   693  0214                     	;# 
   694  0215                     	;# 
   695  0215                     	;# 
   696  0215                     	;# 
   697  0216                     	;# 
   698  0216                     	;# 
   699  0217                     	;# 
   700  0217                     	;# 
   701  0391                     	;# 
   702  0392                     	;# 
   703  0393                     	;# 
   704  0394                     	;# 
   705  0395                     	;# 
   706  0396                     	;# 
   707  0498                     	;# 
   708  0498                     	;# 
   709  0499                     	;# 
   710  049A                     	;# 
   711  049B                     	;# 
   712  049B                     	;# 
   713  049C                     	;# 
   714  049D                     	;# 
   715  049E                     	;# 
   716  049F                     	;# 
   717  0611                     	;# 
   718  0612                     	;# 
   719  0613                     	;# 
   720  0613                     	;# 
   721  0614                     	;# 
   722  0615                     	;# 
   723  0616                     	;# 
   724  0616                     	;# 
   725  0617                     	;# 
   726  0618                     	;# 
   727  0619                     	;# 
   728  0619                     	;# 
   729  061A                     	;# 
   730  061B                     	;# 
   731  061C                     	;# 
   732  061C                     	;# 
   733  0691                     	;# 
   734  0692                     	;# 
   735  0693                     	;# 
   736  0694                     	;# 
   737  0695                     	;# 
   738  0F0F                     	;# 
   739  0F10                     	;# 
   740  0F11                     	;# 
   741  0F12                     	;# 
   742  0F13                     	;# 
   743  0F14                     	;# 
   744  0F15                     	;# 
   745  0F16                     	;# 
   746  0F17                     	;# 
   747  0F18                     	;# 
   748  0F19                     	;# 
   749  0F1A                     	;# 
   750  0F1B                     	;# 
   751  0F1C                     	;# 
   752  0F1D                     	;# 
   753  0F1E                     	;# 
   754  0F1F                     	;# 
   755  0F20                     	;# 
   756  0F21                     	;# 
   757  0F22                     	;# 
   758  0F23                     	;# 
   759  0F24                     	;# 
   760  0F25                     	;# 
   761  0F26                     	;# 
   762  0F27                     	;# 
   763  0F28                     	;# 
   764  0F29                     	;# 
   765  0F2A                     	;# 
   766  0F2B                     	;# 
   767  0F2C                     	;# 
   768  0F2D                     	;# 
   769  0F2E                     	;# 
   770  0F2F                     	;# 
   771  0F8C                     	;# 
   772  0F8D                     	;# 
   773  0F91                     	;# 
   774  0F95                     	;# 
   775  0F96                     	;# 
   776  0F97                     	;# 
   777  0F9C                     	;# 
   778  0F9D                     	;# 
   779  0F9E                     	;# 
   780  0FE3                     	;# 
   781  0FE4                     	;# 
   782  0FE5                     	;# 
   783  0FE6                     	;# 
   784  0FE7                     	;# 
   785  0FE8                     	;# 
   786  0FE9                     	;# 
   787  0FEA                     	;# 
   788  0FEB                     	;# 
   789  0FED                     	;# 
   790  0FEE                     	;# 
   791  0FEF                     	;# 
   792  0000                     	;# 
   793  0001                     	;# 
   794  0002                     	;# 
   795  0003                     	;# 
   796  0004                     	;# 
   797  0005                     	;# 
   798  0006                     	;# 
   799  0007                     	;# 
   800  0008                     	;# 
   801  0009                     	;# 
   802  000A                     	;# 
   803  000B                     	;# 
   804  000C                     	;# 
   805  000D                     	;# 
   806  000E                     	;# 
   807  0011                     	;# 
   808  0012                     	;# 
   809  0013                     	;# 
   810  0015                     	;# 
   811  0016                     	;# 
   812  0016                     	;# 
   813  0017                     	;# 
   814  0018                     	;# 
   815  0019                     	;# 
   816  001A                     	;# 
   817  001B                     	;# 
   818  001C                     	;# 
   819  008C                     	;# 
   820  008D                     	;# 
   821  008E                     	;# 
   822  0091                     	;# 
   823  0092                     	;# 
   824  0093                     	;# 
   825  0095                     	;# 
   826  0096                     	;# 
   827  0097                     	;# 
   828  0099                     	;# 
   829  009A                     	;# 
   830  009B                     	;# 
   831  009B                     	;# 
   832  009C                     	;# 
   833  009D                     	;# 
   834  009E                     	;# 
   835  009F                     	;# 
   836  010C                     	;# 
   837  010D                     	;# 
   838  010E                     	;# 
   839  0111                     	;# 
   840  0112                     	;# 
   841  0113                     	;# 
   842  0114                     	;# 
   843  0115                     	;# 
   844  0116                     	;# 
   845  0117                     	;# 
   846  0118                     	;# 
   847  0119                     	;# 
   848  011D                     	;# 
   849  018C                     	;# 
   850  018D                     	;# 
   851  018E                     	;# 
   852  0191                     	;# 
   853  0191                     	;# 
   854  0192                     	;# 
   855  0193                     	;# 
   856  0193                     	;# 
   857  0194                     	;# 
   858  0195                     	;# 
   859  0196                     	;# 
   860  0197                     	;# 
   861  0199                     	;# 
   862  019A                     	;# 
   863  019B                     	;# 
   864  019B                     	;# 
   865  019C                     	;# 
   866  019D                     	;# 
   867  019E                     	;# 
   868  019F                     	;# 
   869  020C                     	;# 
   870  020D                     	;# 
   871  0211                     	;# 
   872  0211                     	;# 
   873  0212                     	;# 
   874  0212                     	;# 
   875  0213                     	;# 
   876  0213                     	;# 
   877  0214                     	;# 
   878  0214                     	;# 
   879  0215                     	;# 
   880  0215                     	;# 
   881  0215                     	;# 
   882  0216                     	;# 
   883  0216                     	;# 
   884  0217                     	;# 
   885  0217                     	;# 
   886  0391                     	;# 
   887  0392                     	;# 
   888  0393                     	;# 
   889  0394                     	;# 
   890  0395                     	;# 
   891  0396                     	;# 
   892  0498                     	;# 
   893  0498                     	;# 
   894  0499                     	;# 
   895  049A                     	;# 
   896  049B                     	;# 
   897  049B                     	;# 
   898  049C                     	;# 
   899  049D                     	;# 
   900  049E                     	;# 
   901  049F                     	;# 
   902  0611                     	;# 
   903  0612                     	;# 
   904  0613                     	;# 
   905  0613                     	;# 
   906  0614                     	;# 
   907  0615                     	;# 
   908  0616                     	;# 
   909  0616                     	;# 
   910  0617                     	;# 
   911  0618                     	;# 
   912  0619                     	;# 
   913  0619                     	;# 
   914  061A                     	;# 
   915  061B                     	;# 
   916  061C                     	;# 
   917  061C                     	;# 
   918  0691                     	;# 
   919  0692                     	;# 
   920  0693                     	;# 
   921  0694                     	;# 
   922  0695                     	;# 
   923  0F0F                     	;# 
   924  0F10                     	;# 
   925  0F11                     	;# 
   926  0F12                     	;# 
   927  0F13                     	;# 
   928  0F14                     	;# 
   929  0F15                     	;# 
   930  0F16                     	;# 
   931  0F17                     	;# 
   932  0F18                     	;# 
   933  0F19                     	;# 
   934  0F1A                     	;# 
   935  0F1B                     	;# 
   936  0F1C                     	;# 
   937  0F1D                     	;# 
   938  0F1E                     	;# 
   939  0F1F                     	;# 
   940  0F20                     	;# 
   941  0F21                     	;# 
   942  0F22                     	;# 
   943  0F23                     	;# 
   944  0F24                     	;# 
   945  0F25                     	;# 
   946  0F26                     	;# 
   947  0F27                     	;# 
   948  0F28                     	;# 
   949  0F29                     	;# 
   950  0F2A                     	;# 
   951  0F2B                     	;# 
   952  0F2C                     	;# 
   953  0F2D                     	;# 
   954  0F2E                     	;# 
   955  0F2F                     	;# 
   956  0F8C                     	;# 
   957  0F8D                     	;# 
   958  0F91                     	;# 
   959  0F95                     	;# 
   960  0F96                     	;# 
   961  0F97                     	;# 
   962  0F9C                     	;# 
   963  0F9D                     	;# 
   964  0F9E                     	;# 
   965  0FE3                     	;# 
   966  0FE4                     	;# 
   967  0FE5                     	;# 
   968  0FE6                     	;# 
   969  0FE7                     	;# 
   970  0FE8                     	;# 
   971  0FE9                     	;# 
   972  0FEA                     	;# 
   973  0FEB                     	;# 
   974  0FED                     	;# 
   975  0FEE                     	;# 
   976  0FEF                     	;# 
   977  0000                     	;# 
   978  0001                     	;# 
   979  0002                     	;# 
   980  0003                     	;# 
   981  0004                     	;# 
   982  0005                     	;# 
   983  0006                     	;# 
   984  0007                     	;# 
   985  0008                     	;# 
   986  0009                     	;# 
   987  000A                     	;# 
   988  000B                     	;# 
   989  000C                     	;# 
   990  000D                     	;# 
   991  000E                     	;# 
   992  0011                     	;# 
   993  0012                     	;# 
   994  0013                     	;# 
   995  0015                     	;# 
   996  0016                     	;# 
   997  0016                     	;# 
   998  0017                     	;# 
   999  0018                     	;# 
  1000  0019                     	;# 
  1001  001A                     	;# 
  1002  001B                     	;# 
  1003  001C                     	;# 
  1004  008C                     	;# 
  1005  008D                     	;# 
  1006  008E                     	;# 
  1007  0091                     	;# 
  1008  0092                     	;# 
  1009  0093                     	;# 
  1010  0095                     	;# 
  1011  0096                     	;# 
  1012  0097                     	;# 
  1013  0099                     	;# 
  1014  009A                     	;# 
  1015  009B                     	;# 
  1016  009B                     	;# 
  1017  009C                     	;# 
  1018  009D                     	;# 
  1019  009E                     	;# 
  1020  009F                     	;# 
  1021  010C                     	;# 
  1022  010D                     	;# 
  1023  010E                     	;# 
  1024  0111                     	;# 
  1025  0112                     	;# 
  1026  0113                     	;# 
  1027  0114                     	;# 
  1028  0115                     	;# 
  1029  0116                     	;# 
  1030  0117                     	;# 
  1031  0118                     	;# 
  1032  0119                     	;# 
  1033  011D                     	;# 
  1034  018C                     	;# 
  1035  018D                     	;# 
  1036  018E                     	;# 
  1037  0191                     	;# 
  1038  0191                     	;# 
  1039  0192                     	;# 
  1040  0193                     	;# 
  1041  0193                     	;# 
  1042  0194                     	;# 
  1043  0195                     	;# 
  1044  0196                     	;# 
  1045  0197                     	;# 
  1046  0199                     	;# 
  1047  019A                     	;# 
  1048  019B                     	;# 
  1049  019B                     	;# 
  1050  019C                     	;# 
  1051  019D                     	;# 
  1052  019E                     	;# 
  1053  019F                     	;# 
  1054  020C                     	;# 
  1055  020D                     	;# 
  1056  0211                     	;# 
  1057  0211                     	;# 
  1058  0212                     	;# 
  1059  0212                     	;# 
  1060  0213                     	;# 
  1061  0213                     	;# 
  1062  0214                     	;# 
  1063  0214                     	;# 
  1064  0215                     	;# 
  1065  0215                     	;# 
  1066  0215                     	;# 
  1067  0216                     	;# 
  1068  0216                     	;# 
  1069  0217                     	;# 
  1070  0217                     	;# 
  1071  0391                     	;# 
  1072  0392                     	;# 
  1073  0393                     	;# 
  1074  0394                     	;# 
  1075  0395                     	;# 
  1076  0396                     	;# 
  1077  0498                     	;# 
  1078  0498                     	;# 
  1079  0499                     	;# 
  1080  049A                     	;# 
  1081  049B                     	;# 
  1082  049B                     	;# 
  1083  049C                     	;# 
  1084  049D                     	;# 
  1085  049E                     	;# 
  1086  049F                     	;# 
  1087  0611                     	;# 
  1088  0612                     	;# 
  1089  0613                     	;# 
  1090  0613                     	;# 
  1091  0614                     	;# 
  1092  0615                     	;# 
  1093  0616                     	;# 
  1094  0616                     	;# 
  1095  0617                     	;# 
  1096  0618                     	;# 
  1097  0619                     	;# 
  1098  0619                     	;# 
  1099  061A                     	;# 
  1100  061B                     	;# 
  1101  061C                     	;# 
  1102  061C                     	;# 
  1103  0691                     	;# 
  1104  0692                     	;# 
  1105  0693                     	;# 
  1106  0694                     	;# 
  1107  0695                     	;# 
  1108  0F0F                     	;# 
  1109  0F10                     	;# 
  1110  0F11                     	;# 
  1111  0F12                     	;# 
  1112  0F13                     	;# 
  1113  0F14                     	;# 
  1114  0F15                     	;# 
  1115  0F16                     	;# 
  1116  0F17                     	;# 
  1117  0F18                     	;# 
  1118  0F19                     	;# 
  1119  0F1A                     	;# 
  1120  0F1B                     	;# 
  1121  0F1C                     	;# 
  1122  0F1D                     	;# 
  1123  0F1E                     	;# 
  1124  0F1F                     	;# 
  1125  0F20                     	;# 
  1126  0F21                     	;# 
  1127  0F22                     	;# 
  1128  0F23                     	;# 
  1129  0F24                     	;# 
  1130  0F25                     	;# 
  1131  0F26                     	;# 
  1132  0F27                     	;# 
  1133  0F28                     	;# 
  1134  0F29                     	;# 
  1135  0F2A                     	;# 
  1136  0F2B                     	;# 
  1137  0F2C                     	;# 
  1138  0F2D                     	;# 
  1139  0F2E                     	;# 
  1140  0F2F                     	;# 
  1141  0F8C                     	;# 
  1142  0F8D                     	;# 
  1143  0F91                     	;# 
  1144  0F95                     	;# 
  1145  0F96                     	;# 
  1146  0F97                     	;# 
  1147  0F9C                     	;# 
  1148  0F9D                     	;# 
  1149  0F9E                     	;# 
  1150  0FE3                     	;# 
  1151  0FE4                     	;# 
  1152  0FE5                     	;# 
  1153  0FE6                     	;# 
  1154  0FE7                     	;# 
  1155  0FE8                     	;# 
  1156  0FE9                     	;# 
  1157  0FEA                     	;# 
  1158  0FEB                     	;# 
  1159  0FED                     	;# 
  1160  0FEE                     	;# 
  1161  0FEF                     	;# 
  1162  0000                     	;# 
  1163  0001                     	;# 
  1164  0002                     	;# 
  1165  0003                     	;# 
  1166  0004                     	;# 
  1167  0005                     	;# 
  1168  0006                     	;# 
  1169  0007                     	;# 
  1170  0008                     	;# 
  1171  0009                     	;# 
  1172  000A                     	;# 
  1173  000B                     	;# 
  1174  000C                     	;# 
  1175  000D                     	;# 
  1176  000E                     	;# 
  1177  0011                     	;# 
  1178  0012                     	;# 
  1179  0013                     	;# 
  1180  0015                     	;# 
  1181  0016                     	;# 
  1182  0016                     	;# 
  1183  0017                     	;# 
  1184  0018                     	;# 
  1185  0019                     	;# 
  1186  001A                     	;# 
  1187  001B                     	;# 
  1188  001C                     	;# 
  1189  008C                     	;# 
  1190  008D                     	;# 
  1191  008E                     	;# 
  1192  0091                     	;# 
  1193  0092                     	;# 
  1194  0093                     	;# 
  1195  0095                     	;# 
  1196  0096                     	;# 
  1197  0097                     	;# 
  1198  0099                     	;# 
  1199  009A                     	;# 
  1200  009B                     	;# 
  1201  009B                     	;# 
  1202  009C                     	;# 
  1203  009D                     	;# 
  1204  009E                     	;# 
  1205  009F                     	;# 
  1206  010C                     	;# 
  1207  010D                     	;# 
  1208  010E                     	;# 
  1209  0111                     	;# 
  1210  0112                     	;# 
  1211  0113                     	;# 
  1212  0114                     	;# 
  1213  0115                     	;# 
  1214  0116                     	;# 
  1215  0117                     	;# 
  1216  0118                     	;# 
  1217  0119                     	;# 
  1218  011D                     	;# 
  1219  018C                     	;# 
  1220  018D                     	;# 
  1221  018E                     	;# 
  1222  0191                     	;# 
  1223  0191                     	;# 
  1224  0192                     	;# 
  1225  0193                     	;# 
  1226  0193                     	;# 
  1227  0194                     	;# 
  1228  0195                     	;# 
  1229  0196                     	;# 
  1230  0197                     	;# 
  1231  0199                     	;# 
  1232  019A                     	;# 
  1233  019B                     	;# 
  1234  019B                     	;# 
  1235  019C                     	;# 
  1236  019D                     	;# 
  1237  019E                     	;# 
  1238  019F                     	;# 
  1239  020C                     	;# 
  1240  020D                     	;# 
  1241  0211                     	;# 
  1242  0211                     	;# 
  1243  0212                     	;# 
  1244  0212                     	;# 
  1245  0213                     	;# 
  1246  0213                     	;# 
  1247  0214                     	;# 
  1248  0214                     	;# 
  1249  0215                     	;# 
  1250  0215                     	;# 
  1251  0215                     	;# 
  1252  0216                     	;# 
  1253  0216                     	;# 
  1254  0217                     	;# 
  1255  0217                     	;# 
  1256  0391                     	;# 
  1257  0392                     	;# 
  1258  0393                     	;# 
  1259  0394                     	;# 
  1260  0395                     	;# 
  1261  0396                     	;# 
  1262  0498                     	;# 
  1263  0498                     	;# 
  1264  0499                     	;# 
  1265  049A                     	;# 
  1266  049B                     	;# 
  1267  049B                     	;# 
  1268  049C                     	;# 
  1269  049D                     	;# 
  1270  049E                     	;# 
  1271  049F                     	;# 
  1272  0611                     	;# 
  1273  0612                     	;# 
  1274  0613                     	;# 
  1275  0613                     	;# 
  1276  0614                     	;# 
  1277  0615                     	;# 
  1278  0616                     	;# 
  1279  0616                     	;# 
  1280  0617                     	;# 
  1281  0618                     	;# 
  1282  0619                     	;# 
  1283  0619                     	;# 
  1284  061A                     	;# 
  1285  061B                     	;# 
  1286  061C                     	;# 
  1287  061C                     	;# 
  1288  0691                     	;# 
  1289  0692                     	;# 
  1290  0693                     	;# 
  1291  0694                     	;# 
  1292  0695                     	;# 
  1293  0F0F                     	;# 
  1294  0F10                     	;# 
  1295  0F11                     	;# 
  1296  0F12                     	;# 
  1297  0F13                     	;# 
  1298  0F14                     	;# 
  1299  0F15                     	;# 
  1300  0F16                     	;# 
  1301  0F17                     	;# 
  1302  0F18                     	;# 
  1303  0F19                     	;# 
  1304  0F1A                     	;# 
  1305  0F1B                     	;# 
  1306  0F1C                     	;# 
  1307  0F1D                     	;# 
  1308  0F1E                     	;# 
  1309  0F1F                     	;# 
  1310  0F20                     	;# 
  1311  0F21                     	;# 
  1312  0F22                     	;# 
  1313  0F23                     	;# 
  1314  0F24                     	;# 
  1315  0F25                     	;# 
  1316  0F26                     	;# 
  1317  0F27                     	;# 
  1318  0F28                     	;# 
  1319  0F29                     	;# 
  1320  0F2A                     	;# 
  1321  0F2B                     	;# 
  1322  0F2C                     	;# 
  1323  0F2D                     	;# 
  1324  0F2E                     	;# 
  1325  0F2F                     	;# 
  1326  0F8C                     	;# 
  1327  0F8D                     	;# 
  1328  0F91                     	;# 
  1329  0F95                     	;# 
  1330  0F96                     	;# 
  1331  0F97                     	;# 
  1332  0F9C                     	;# 
  1333  0F9D                     	;# 
  1334  0F9E                     	;# 
  1335  0FE3                     	;# 
  1336  0FE4                     	;# 
  1337  0FE5                     	;# 
  1338  0FE6                     	;# 
  1339  0FE7                     	;# 
  1340  0FE8                     	;# 
  1341  0FE9                     	;# 
  1342  0FEA                     	;# 
  1343  0FEB                     	;# 
  1344  0FED                     	;# 
  1345  0FEE                     	;# 
  1346  0FEF                     	;# 
  1347  0000                     	;# 
  1348  0001                     	;# 
  1349  0002                     	;# 
  1350  0003                     	;# 
  1351  0004                     	;# 
  1352  0005                     	;# 
  1353  0006                     	;# 
  1354  0007                     	;# 
  1355  0008                     	;# 
  1356  0009                     	;# 
  1357  000A                     	;# 
  1358  000B                     	;# 
  1359  000C                     	;# 
  1360  000D                     	;# 
  1361  000E                     	;# 
  1362  0011                     	;# 
  1363  0012                     	;# 
  1364  0013                     	;# 
  1365  0015                     	;# 
  1366  0016                     	;# 
  1367  0016                     	;# 
  1368  0017                     	;# 
  1369  0018                     	;# 
  1370  0019                     	;# 
  1371  001A                     	;# 
  1372  001B                     	;# 
  1373  001C                     	;# 
  1374  008C                     	;# 
  1375  008D                     	;# 
  1376  008E                     	;# 
  1377  0091                     	;# 
  1378  0092                     	;# 
  1379  0093                     	;# 
  1380  0095                     	;# 
  1381  0096                     	;# 
  1382  0097                     	;# 
  1383  0099                     	;# 
  1384  009A                     	;# 
  1385  009B                     	;# 
  1386  009B                     	;# 
  1387  009C                     	;# 
  1388  009D                     	;# 
  1389  009E                     	;# 
  1390  009F                     	;# 
  1391  010C                     	;# 
  1392  010D                     	;# 
  1393  010E                     	;# 
  1394  0111                     	;# 
  1395  0112                     	;# 
  1396  0113                     	;# 
  1397  0114                     	;# 
  1398  0115                     	;# 
  1399  0116                     	;# 
  1400  0117                     	;# 
  1401  0118                     	;# 
  1402  0119                     	;# 
  1403  011D                     	;# 
  1404  018C                     	;# 
  1405  018D                     	;# 
  1406  018E                     	;# 
  1407  0191                     	;# 
  1408  0191                     	;# 
  1409  0192                     	;# 
  1410  0193                     	;# 
  1411  0193                     	;# 
  1412  0194                     	;# 
  1413  0195                     	;# 
  1414  0196                     	;# 
  1415  0197                     	;# 
  1416  0199                     	;# 
  1417  019A                     	;# 
  1418  019B                     	;# 
  1419  019B                     	;# 
  1420  019C                     	;# 
  1421  019D                     	;# 
  1422  019E                     	;# 
  1423  019F                     	;# 
  1424  020C                     	;# 
  1425  020D                     	;# 
  1426  0211                     	;# 
  1427  0211                     	;# 
  1428  0212                     	;# 
  1429  0212                     	;# 
  1430  0213                     	;# 
  1431  0213                     	;# 
  1432  0214                     	;# 
  1433  0214                     	;# 
  1434  0215                     	;# 
  1435  0215                     	;# 
  1436  0215                     	;# 
  1437  0216                     	;# 
  1438  0216                     	;# 
  1439  0217                     	;# 
  1440  0217                     	;# 
  1441  0391                     	;# 
  1442  0392                     	;# 
  1443  0393                     	;# 
  1444  0394                     	;# 
  1445  0395                     	;# 
  1446  0396                     	;# 
  1447  0498                     	;# 
  1448  0498                     	;# 
  1449  0499                     	;# 
  1450  049A                     	;# 
  1451  049B                     	;# 
  1452  049B                     	;# 
  1453  049C                     	;# 
  1454  049D                     	;# 
  1455  049E                     	;# 
  1456  049F                     	;# 
  1457  0611                     	;# 
  1458  0612                     	;# 
  1459  0613                     	;# 
  1460  0613                     	;# 
  1461  0614                     	;# 
  1462  0615                     	;# 
  1463  0616                     	;# 
  1464  0616                     	;# 
  1465  0617                     	;# 
  1466  0618                     	;# 
  1467  0619                     	;# 
  1468  0619                     	;# 
  1469  061A                     	;# 
  1470  061B                     	;# 
  1471  061C                     	;# 
  1472  061C                     	;# 
  1473  0691                     	;# 
  1474  0692                     	;# 
  1475  0693                     	;# 
  1476  0694                     	;# 
  1477  0695                     	;# 
  1478  0F0F                     	;# 
  1479  0F10                     	;# 
  1480  0F11                     	;# 
  1481  0F12                     	;# 
  1482  0F13                     	;# 
  1483  0F14                     	;# 
  1484  0F15                     	;# 
  1485  0F16                     	;# 
  1486  0F17                     	;# 
  1487  0F18                     	;# 
  1488  0F19                     	;# 
  1489  0F1A                     	;# 
  1490  0F1B                     	;# 
  1491  0F1C                     	;# 
  1492  0F1D                     	;# 
  1493  0F1E                     	;# 
  1494  0F1F                     	;# 
  1495  0F20                     	;# 
  1496  0F21                     	;# 
  1497  0F22                     	;# 
  1498  0F23                     	;# 
  1499  0F24                     	;# 
  1500  0F25                     	;# 
  1501  0F26                     	;# 
  1502  0F27                     	;# 
  1503  0F28                     	;# 
  1504  0F29                     	;# 
  1505  0F2A                     	;# 
  1506  0F2B                     	;# 
  1507  0F2C                     	;# 
  1508  0F2D                     	;# 
  1509  0F2E                     	;# 
  1510  0F2F                     	;# 
  1511  0F8C                     	;# 
  1512  0F8D                     	;# 
  1513  0F91                     	;# 
  1514  0F95                     	;# 
  1515  0F96                     	;# 
  1516  0F97                     	;# 
  1517  0F9C                     	;# 
  1518  0F9D                     	;# 
  1519  0F9E                     	;# 
  1520  0FE3                     	;# 
  1521  0FE4                     	;# 
  1522  0FE5                     	;# 
  1523  0FE6                     	;# 
  1524  0FE7                     	;# 
  1525  0FE8                     	;# 
  1526  0FE9                     	;# 
  1527  0FEA                     	;# 
  1528  0FEB                     	;# 
  1529  0FED                     	;# 
  1530  0FEE                     	;# 
  1531  0FEF                     	;# 
  1532  0000                     	;# 
  1533  0001                     	;# 
  1534  0002                     	;# 
  1535  0003                     	;# 
  1536  0004                     	;# 
  1537  0005                     	;# 
  1538  0006                     	;# 
  1539  0007                     	;# 
  1540  0008                     	;# 
  1541  0009                     	;# 
  1542  000A                     	;# 
  1543  000B                     	;# 
  1544  000C                     	;# 
  1545  000D                     	;# 
  1546  000E                     	;# 
  1547  0011                     	;# 
  1548  0012                     	;# 
  1549  0013                     	;# 
  1550  0015                     	;# 
  1551  0016                     	;# 
  1552  0016                     	;# 
  1553  0017                     	;# 
  1554  0018                     	;# 
  1555  0019                     	;# 
  1556  001A                     	;# 
  1557  001B                     	;# 
  1558  001C                     	;# 
  1559  008C                     	;# 
  1560  008D                     	;# 
  1561  008E                     	;# 
  1562  0091                     	;# 
  1563  0092                     	;# 
  1564  0093                     	;# 
  1565  0095                     	;# 
  1566  0096                     	;# 
  1567  0097                     	;# 
  1568  0099                     	;# 
  1569  009A                     	;# 
  1570  009B                     	;# 
  1571  009B                     	;# 
  1572  009C                     	;# 
  1573  009D                     	;# 
  1574  009E                     	;# 
  1575  009F                     	;# 
  1576  010C                     	;# 
  1577  010D                     	;# 
  1578  010E                     	;# 
  1579  0111                     	;# 
  1580  0112                     	;# 
  1581  0113                     	;# 
  1582  0114                     	;# 
  1583  0115                     	;# 
  1584  0116                     	;# 
  1585  0117                     	;# 
  1586  0118                     	;# 
  1587  0119                     	;# 
  1588  011D                     	;# 
  1589  018C                     	;# 
  1590  018D                     	;# 
  1591  018E                     	;# 
  1592  0191                     	;# 
  1593  0191                     	;# 
  1594  0192                     	;# 
  1595  0193                     	;# 
  1596  0193                     	;# 
  1597  0194                     	;# 
  1598  0195                     	;# 
  1599  0196                     	;# 
  1600  0197                     	;# 
  1601  0199                     	;# 
  1602  019A                     	;# 
  1603  019B                     	;# 
  1604  019B                     	;# 
  1605  019C                     	;# 
  1606  019D                     	;# 
  1607  019E                     	;# 
  1608  019F                     	;# 
  1609  020C                     	;# 
  1610  020D                     	;# 
  1611  0211                     	;# 
  1612  0211                     	;# 
  1613  0212                     	;# 
  1614  0212                     	;# 
  1615  0213                     	;# 
  1616  0213                     	;# 
  1617  0214                     	;# 
  1618  0214                     	;# 
  1619  0215                     	;# 
  1620  0215                     	;# 
  1621  0215                     	;# 
  1622  0216                     	;# 
  1623  0216                     	;# 
  1624  0217                     	;# 
  1625  0217                     	;# 
  1626  0391                     	;# 
  1627  0392                     	;# 
  1628  0393                     	;# 
  1629  0394                     	;# 
  1630  0395                     	;# 
  1631  0396                     	;# 
  1632  0498                     	;# 
  1633  0498                     	;# 
  1634  0499                     	;# 
  1635  049A                     	;# 
  1636  049B                     	;# 
  1637  049B                     	;# 
  1638  049C                     	;# 
  1639  049D                     	;# 
  1640  049E                     	;# 
  1641  049F                     	;# 
  1642  0611                     	;# 
  1643  0612                     	;# 
  1644  0613                     	;# 
  1645  0613                     	;# 
  1646  0614                     	;# 
  1647  0615                     	;# 
  1648  0616                     	;# 
  1649  0616                     	;# 
  1650  0617                     	;# 
  1651  0618                     	;# 
  1652  0619                     	;# 
  1653  0619                     	;# 
  1654  061A                     	;# 
  1655  061B                     	;# 
  1656  061C                     	;# 
  1657  061C                     	;# 
  1658  0691                     	;# 
  1659  0692                     	;# 
  1660  0693                     	;# 
  1661  0694                     	;# 
  1662  0695                     	;# 
  1663  0F0F                     	;# 
  1664  0F10                     	;# 
  1665  0F11                     	;# 
  1666  0F12                     	;# 
  1667  0F13                     	;# 
  1668  0F14                     	;# 
  1669  0F15                     	;# 
  1670  0F16                     	;# 
  1671  0F17                     	;# 
  1672  0F18                     	;# 
  1673  0F19                     	;# 
  1674  0F1A                     	;# 
  1675  0F1B                     	;# 
  1676  0F1C                     	;# 
  1677  0F1D                     	;# 
  1678  0F1E                     	;# 
  1679  0F1F                     	;# 
  1680  0F20                     	;# 
  1681  0F21                     	;# 
  1682  0F22                     	;# 
  1683  0F23                     	;# 
  1684  0F24                     	;# 
  1685  0F25                     	;# 
  1686  0F26                     	;# 
  1687  0F27                     	;# 
  1688  0F28                     	;# 
  1689  0F29                     	;# 
  1690  0F2A                     	;# 
  1691  0F2B                     	;# 
  1692  0F2C                     	;# 
  1693  0F2D                     	;# 
  1694  0F2E                     	;# 
  1695  0F2F                     	;# 
  1696  0F8C                     	;# 
  1697  0F8D                     	;# 
  1698  0F91                     	;# 
  1699  0F95                     	;# 
  1700  0F96                     	;# 
  1701  0F97                     	;# 
  1702  0F9C                     	;# 
  1703  0F9D                     	;# 
  1704  0F9E                     	;# 
  1705  0FE3                     	;# 
  1706  0FE4                     	;# 
  1707  0FE5                     	;# 
  1708  0FE6                     	;# 
  1709  0FE7                     	;# 
  1710  0FE8                     	;# 
  1711  0FE9                     	;# 
  1712  0FEA                     	;# 
  1713  0FEB                     	;# 
  1714  0FED                     	;# 
  1715  0FEE                     	;# 
  1716  0FEF                     	;# 
  1717  0000                     	;# 
  1718  0001                     	;# 
  1719  0002                     	;# 
  1720  0003                     	;# 
  1721  0004                     	;# 
  1722  0005                     	;# 
  1723  0006                     	;# 
  1724  0007                     	;# 
  1725  0008                     	;# 
  1726  0009                     	;# 
  1727  000A                     	;# 
  1728  000B                     	;# 
  1729  000C                     	;# 
  1730  000D                     	;# 
  1731  000E                     	;# 
  1732  0011                     	;# 
  1733  0012                     	;# 
  1734  0013                     	;# 
  1735  0015                     	;# 
  1736  0016                     	;# 
  1737  0016                     	;# 
  1738  0017                     	;# 
  1739  0018                     	;# 
  1740  0019                     	;# 
  1741  001A                     	;# 
  1742  001B                     	;# 
  1743  001C                     	;# 
  1744  008C                     	;# 
  1745  008D                     	;# 
  1746  008E                     	;# 
  1747  0091                     	;# 
  1748  0092                     	;# 
  1749  0093                     	;# 
  1750  0095                     	;# 
  1751  0096                     	;# 
  1752  0097                     	;# 
  1753  0099                     	;# 
  1754  009A                     	;# 
  1755  009B                     	;# 
  1756  009B                     	;# 
  1757  009C                     	;# 
  1758  009D                     	;# 
  1759  009E                     	;# 
  1760  009F                     	;# 
  1761  010C                     	;# 
  1762  010D                     	;# 
  1763  010E                     	;# 
  1764  0111                     	;# 
  1765  0112                     	;# 
  1766  0113                     	;# 
  1767  0114                     	;# 
  1768  0115                     	;# 
  1769  0116                     	;# 
  1770  0117                     	;# 
  1771  0118                     	;# 
  1772  0119                     	;# 
  1773  011D                     	;# 
  1774  018C                     	;# 
  1775  018D                     	;# 
  1776  018E                     	;# 
  1777  0191                     	;# 
  1778  0191                     	;# 
  1779  0192                     	;# 
  1780  0193                     	;# 
  1781  0193                     	;# 
  1782  0194                     	;# 
  1783  0195                     	;# 
  1784  0196                     	;# 
  1785  0197                     	;# 
  1786  0199                     	;# 
  1787  019A                     	;# 
  1788  019B                     	;# 
  1789  019B                     	;# 
  1790  019C                     	;# 
  1791  019D                     	;# 
  1792  019E                     	;# 
  1793  019F                     	;# 
  1794  020C                     	;# 
  1795  020D                     	;# 
  1796  0211                     	;# 
  1797  0211                     	;# 
  1798  0212                     	;# 
  1799  0212                     	;# 
  1800  0213                     	;# 
  1801  0213                     	;# 
  1802  0214                     	;# 
  1803  0214                     	;# 
  1804  0215                     	;# 
  1805  0215                     	;# 
  1806  0215                     	;# 
  1807  0216                     	;# 
  1808  0216                     	;# 
  1809  0217                     	;# 
  1810  0217                     	;# 
  1811  0391                     	;# 
  1812  0392                     	;# 
  1813  0393                     	;# 
  1814  0394                     	;# 
  1815  0395                     	;# 
  1816  0396                     	;# 
  1817  0498                     	;# 
  1818  0498                     	;# 
  1819  0499                     	;# 
  1820  049A                     	;# 
  1821  049B                     	;# 
  1822  049B                     	;# 
  1823  049C                     	;# 
  1824  049D                     	;# 
  1825  049E                     	;# 
  1826  049F                     	;# 
  1827  0611                     	;# 
  1828  0612                     	;# 
  1829  0613                     	;# 
  1830  0613                     	;# 
  1831  0614                     	;# 
  1832  0615                     	;# 
  1833  0616                     	;# 
  1834  0616                     	;# 
  1835  0617                     	;# 
  1836  0618                     	;# 
  1837  0619                     	;# 
  1838  0619                     	;# 
  1839  061A                     	;# 
  1840  061B                     	;# 
  1841  061C                     	;# 
  1842  061C                     	;# 
  1843  0691                     	;# 
  1844  0692                     	;# 
  1845  0693                     	;# 
  1846  0694                     	;# 
  1847  0695                     	;# 
  1848  0F0F                     	;# 
  1849  0F10                     	;# 
  1850  0F11                     	;# 
  1851  0F12                     	;# 
  1852  0F13                     	;# 
  1853  0F14                     	;# 
  1854  0F15                     	;# 
  1855  0F16                     	;# 
  1856  0F17                     	;# 
  1857  0F18                     	;# 
  1858  0F19                     	;# 
  1859  0F1A                     	;# 
  1860  0F1B                     	;# 
  1861  0F1C                     	;# 
  1862  0F1D                     	;# 
  1863  0F1E                     	;# 
  1864  0F1F                     	;# 
  1865  0F20                     	;# 
  1866  0F21                     	;# 
  1867  0F22                     	;# 
  1868  0F23                     	;# 
  1869  0F24                     	;# 
  1870  0F25                     	;# 
  1871  0F26                     	;# 
  1872  0F27                     	;# 
  1873  0F28                     	;# 
  1874  0F29                     	;# 
  1875  0F2A                     	;# 
  1876  0F2B                     	;# 
  1877  0F2C                     	;# 
  1878  0F2D                     	;# 
  1879  0F2E                     	;# 
  1880  0F2F                     	;# 
  1881  0F8C                     	;# 
  1882  0F8D                     	;# 
  1883  0F91                     	;# 
  1884  0F95                     	;# 
  1885  0F96                     	;# 
  1886  0F97                     	;# 
  1887  0F9C                     	;# 
  1888  0F9D                     	;# 
  1889  0F9E                     	;# 
  1890  0FE3                     	;# 
  1891  0FE4                     	;# 
  1892  0FE5                     	;# 
  1893  0FE6                     	;# 
  1894  0FE7                     	;# 
  1895  0FE8                     	;# 
  1896  0FE9                     	;# 
  1897  0FEA                     	;# 
  1898  0FEB                     	;# 
  1899  0FED                     	;# 
  1900  0FEE                     	;# 
  1901  0FEF                     	;# 
  1902  0000                     	;# 
  1903  0001                     	;# 
  1904  0002                     	;# 
  1905  0003                     	;# 
  1906  0004                     	;# 
  1907  0005                     	;# 
  1908  0006                     	;# 
  1909  0007                     	;# 
  1910  0008                     	;# 
  1911  0009                     	;# 
  1912  000A                     	;# 
  1913  000B                     	;# 
  1914  000C                     	;# 
  1915  000D                     	;# 
  1916  000E                     	;# 
  1917  0011                     	;# 
  1918  0012                     	;# 
  1919  0013                     	;# 
  1920  0015                     	;# 
  1921  0016                     	;# 
  1922  0016                     	;# 
  1923  0017                     	;# 
  1924  0018                     	;# 
  1925  0019                     	;# 
  1926  001A                     	;# 
  1927  001B                     	;# 
  1928  001C                     	;# 
  1929  008C                     	;# 
  1930  008D                     	;# 
  1931  008E                     	;# 
  1932  0091                     	;# 
  1933  0092                     	;# 
  1934  0093                     	;# 
  1935  0095                     	;# 
  1936  0096                     	;# 
  1937  0097                     	;# 
  1938  0099                     	;# 
  1939  009A                     	;# 
  1940  009B                     	;# 
  1941  009B                     	;# 
  1942  009C                     	;# 
  1943  009D                     	;# 
  1944  009E                     	;# 
  1945  009F                     	;# 
  1946  010C                     	;# 
  1947  010D                     	;# 
  1948  010E                     	;# 
  1949  0111                     	;# 
  1950  0112                     	;# 
  1951  0113                     	;# 
  1952  0114                     	;# 
  1953  0115                     	;# 
  1954  0116                     	;# 
  1955  0117                     	;# 
  1956  0118                     	;# 
  1957  0119                     	;# 
  1958  011D                     	;# 
  1959  018C                     	;# 
  1960  018D                     	;# 
  1961  018E                     	;# 
  1962  0191                     	;# 
  1963  0191                     	;# 
  1964  0192                     	;# 
  1965  0193                     	;# 
  1966  0193                     	;# 
  1967  0194                     	;# 
  1968  0195                     	;# 
  1969  0196                     	;# 
  1970  0197                     	;# 
  1971  0199                     	;# 
  1972  019A                     	;# 
  1973  019B                     	;# 
  1974  019B                     	;# 
  1975  019C                     	;# 
  1976  019D                     	;# 
  1977  019E                     	;# 
  1978  019F                     	;# 
  1979  020C                     	;# 
  1980  020D                     	;# 
  1981  0211                     	;# 
  1982  0211                     	;# 
  1983  0212                     	;# 
  1984  0212                     	;# 
  1985  0213                     	;# 
  1986  0213                     	;# 
  1987  0214                     	;# 
  1988  0214                     	;# 
  1989  0215                     	;# 
  1990  0215                     	;# 
  1991  0215                     	;# 
  1992  0216                     	;# 
  1993  0216                     	;# 
  1994  0217                     	;# 
  1995  0217                     	;# 
  1996  0391                     	;# 
  1997  0392                     	;# 
  1998  0393                     	;# 
  1999  0394                     	;# 
  2000  0395                     	;# 
  2001  0396                     	;# 
  2002  0498                     	;# 
  2003  0498                     	;# 
  2004  0499                     	;# 
  2005  049A                     	;# 
  2006  049B                     	;# 
  2007  049B                     	;# 
  2008  049C                     	;# 
  2009  049D                     	;# 
  2010  049E                     	;# 
  2011  049F                     	;# 
  2012  0611                     	;# 
  2013  0612                     	;# 
  2014  0613                     	;# 
  2015  0613                     	;# 
  2016  0614                     	;# 
  2017  0615                     	;# 
  2018  0616                     	;# 
  2019  0616                     	;# 
  2020  0617                     	;# 
  2021  0618                     	;# 
  2022  0619                     	;# 
  2023  0619                     	;# 
  2024  061A                     	;# 
  2025  061B                     	;# 
  2026  061C                     	;# 
  2027  061C                     	;# 
  2028  0691                     	;# 
  2029  0692                     	;# 
  2030  0693                     	;# 
  2031  0694                     	;# 
  2032  0695                     	;# 
  2033  0F0F                     	;# 
  2034  0F10                     	;# 
  2035  0F11                     	;# 
  2036  0F12                     	;# 
  2037  0F13                     	;# 
  2038  0F14                     	;# 
  2039  0F15                     	;# 
  2040  0F16                     	;# 
  2041  0F17                     	;# 
  2042  0F18                     	;# 
  2043  0F19                     	;# 
  2044  0F1A                     	;# 
  2045  0F1B                     	;# 
  2046  0F1C                     	;# 
  2047  0F1D                     	;# 
  2048  0F1E                     	;# 
  2049  0F1F                     	;# 
  2050  0F20                     	;# 
  2051  0F21                     	;# 
  2052  0F22                     	;# 
  2053  0F23                     	;# 
  2054  0F24                     	;# 
  2055  0F25                     	;# 
  2056  0F26                     	;# 
  2057  0F27                     	;# 
  2058  0F28                     	;# 
  2059  0F29                     	;# 
  2060  0F2A                     	;# 
  2061  0F2B                     	;# 
  2062  0F2C                     	;# 
  2063  0F2D                     	;# 
  2064  0F2E                     	;# 
  2065  0F2F                     	;# 
  2066  0F8C                     	;# 
  2067  0F8D                     	;# 
  2068  0F91                     	;# 
  2069  0F95                     	;# 
  2070  0F96                     	;# 
  2071  0F97                     	;# 
  2072  0F9C                     	;# 
  2073  0F9D                     	;# 
  2074  0F9E                     	;# 
  2075  0FE3                     	;# 
  2076  0FE4                     	;# 
  2077  0FE5                     	;# 
  2078  0FE6                     	;# 
  2079  0FE7                     	;# 
  2080  0FE8                     	;# 
  2081  0FE9                     	;# 
  2082  0FEA                     	;# 
  2083  0FEB                     	;# 
  2084  0FED                     	;# 
  2085  0FEE                     	;# 
  2086  0FEF                     	;# 
  2087  0000                     	;# 
  2088  0001                     	;# 
  2089  0002                     	;# 
  2090  0003                     	;# 
  2091  0004                     	;# 
  2092  0005                     	;# 
  2093  0006                     	;# 
  2094  0007                     	;# 
  2095  0008                     	;# 
  2096  0009                     	;# 
  2097  000A                     	;# 
  2098  000B                     	;# 
  2099  000C                     	;# 
  2100  000D                     	;# 
  2101  000E                     	;# 
  2102  0011                     	;# 
  2103  0012                     	;# 
  2104  0013                     	;# 
  2105  0015                     	;# 
  2106  0016                     	;# 
  2107  0016                     	;# 
  2108  0017                     	;# 
  2109  0018                     	;# 
  2110  0019                     	;# 
  2111  001A                     	;# 
  2112  001B                     	;# 
  2113  001C                     	;# 
  2114  008C                     	;# 
  2115  008D                     	;# 
  2116  008E                     	;# 
  2117  0091                     	;# 
  2118  0092                     	;# 
  2119  0093                     	;# 
  2120  0095                     	;# 
  2121  0096                     	;# 
  2122  0097                     	;# 
  2123  0099                     	;# 
  2124  009A                     	;# 
  2125  009B                     	;# 
  2126  009B                     	;# 
  2127  009C                     	;# 
  2128  009D                     	;# 
  2129  009E                     	;# 
  2130  009F                     	;# 
  2131  010C                     	;# 
  2132  010D                     	;# 
  2133  010E                     	;# 
  2134  0111                     	;# 
  2135  0112                     	;# 
  2136  0113                     	;# 
  2137  0114                     	;# 
  2138  0115                     	;# 
  2139  0116                     	;# 
  2140  0117                     	;# 
  2141  0118                     	;# 
  2142  0119                     	;# 
  2143  011D                     	;# 
  2144  018C                     	;# 
  2145  018D                     	;# 
  2146  018E                     	;# 
  2147  0191                     	;# 
  2148  0191                     	;# 
  2149  0192                     	;# 
  2150  0193                     	;# 
  2151  0193                     	;# 
  2152  0194                     	;# 
  2153  0195                     	;# 
  2154  0196                     	;# 
  2155  0197                     	;# 
  2156  0199                     	;# 
  2157  019A                     	;# 
  2158  019B                     	;# 
  2159  019B                     	;# 
  2160  019C                     	;# 
  2161  019D                     	;# 
  2162  019E                     	;# 
  2163  019F                     	;# 
  2164  020C                     	;# 
  2165  020D                     	;# 
  2166  0211                     	;# 
  2167  0211                     	;# 
  2168  0212                     	;# 
  2169  0212                     	;# 
  2170  0213                     	;# 
  2171  0213                     	;# 
  2172  0214                     	;# 
  2173  0214                     	;# 
  2174  0215                     	;# 
  2175  0215                     	;# 
  2176  0215                     	;# 
  2177  0216                     	;# 
  2178  0216                     	;# 
  2179  0217                     	;# 
  2180  0217                     	;# 
  2181  0391                     	;# 
  2182  0392                     	;# 
  2183  0393                     	;# 
  2184  0394                     	;# 
  2185  0395                     	;# 
  2186  0396                     	;# 
  2187  0498                     	;# 
  2188  0498                     	;# 
  2189  0499                     	;# 
  2190  049A                     	;# 
  2191  049B                     	;# 
  2192  049B                     	;# 
  2193  049C                     	;# 
  2194  049D                     	;# 
  2195  049E                     	;# 
  2196  049F                     	;# 
  2197  0611                     	;# 
  2198  0612                     	;# 
  2199  0613                     	;# 
  2200  0613                     	;# 
  2201  0614                     	;# 
  2202  0615                     	;# 
  2203  0616                     	;# 
  2204  0616                     	;# 
  2205  0617                     	;# 
  2206  0618                     	;# 
  2207  0619                     	;# 
  2208  0619                     	;# 
  2209  061A                     	;# 
  2210  061B                     	;# 
  2211  061C                     	;# 
  2212  061C                     	;# 
  2213  0691                     	;# 
  2214  0692                     	;# 
  2215  0693                     	;# 
  2216  0694                     	;# 
  2217  0695                     	;# 
  2218  0F0F                     	;# 
  2219  0F10                     	;# 
  2220  0F11                     	;# 
  2221  0F12                     	;# 
  2222  0F13                     	;# 
  2223  0F14                     	;# 
  2224  0F15                     	;# 
  2225  0F16                     	;# 
  2226  0F17                     	;# 
  2227  0F18                     	;# 
  2228  0F19                     	;# 
  2229  0F1A                     	;# 
  2230  0F1B                     	;# 
  2231  0F1C                     	;# 
  2232  0F1D                     	;# 
  2233  0F1E                     	;# 
  2234  0F1F                     	;# 
  2235  0F20                     	;# 
  2236  0F21                     	;# 
  2237  0F22                     	;# 
  2238  0F23                     	;# 
  2239  0F24                     	;# 
  2240  0F25                     	;# 
  2241  0F26                     	;# 
  2242  0F27                     	;# 
  2243  0F28                     	;# 
  2244  0F29                     	;# 
  2245  0F2A                     	;# 
  2246  0F2B                     	;# 
  2247  0F2C                     	;# 
  2248  0F2D                     	;# 
  2249  0F2E                     	;# 
  2250  0F2F                     	;# 
  2251  0F8C                     	;# 
  2252  0F8D                     	;# 
  2253  0F91                     	;# 
  2254  0F95                     	;# 
  2255  0F96                     	;# 
  2256  0F97                     	;# 
  2257  0F9C                     	;# 
  2258  0F9D                     	;# 
  2259  0F9E                     	;# 
  2260  0FE3                     	;# 
  2261  0FE4                     	;# 
  2262  0FE5                     	;# 
  2263  0FE6                     	;# 
  2264  0FE7                     	;# 
  2265  0FE8                     	;# 
  2266  0FE9                     	;# 
  2267  0FEA                     	;# 
  2268  0FEB                     	;# 
  2269  0FED                     	;# 
  2270  0FEE                     	;# 
  2271  0FEF                     	;# 
  2272  0015                     _TMR0	set	21
  2273  001B                     _PR2	set	27
  2274  001A                     _TMR2	set	26
  2275  001C                     _T2CONbits	set	28
  2276  0019                     _T1GCONbits	set	25
  2277  0018                     _T1CONbits	set	24
  2278  0011                     _PIR1bits	set	17
  2279  000B                     _INTCONbits	set	11
  2280  005A                     _TMR0IF	set	90
  2281  006F                     _RB7	set	111
  2282  008B                     _SSP1IF	set	139
  2283  009A                     _OSCSTATbits	set	154
  2284  0099                     _OSCCONbits	set	153
  2285  0091                     _PIE1bits	set	145
  2286  0095                     _OPTION_REG	set	149
  2287  008E                     _TRISCbits	set	142
  2288  008D                     _TRISBbits	set	141
  2289  008C                     _TRISAbits	set	140
  2290  010E                     _LATCbits	set	270
  2291  010C                     _LATAbits	set	268
  2292  018E                     _ANSELC	set	398
  2293  018D                     _ANSELB	set	397
  2294  018C                     _ANSELA	set	396
  2295  0211                     _SSP1BUF	set	529
  2296  0216                     _SSP1CON2bits	set	534
  2297  0212                     _SSP1ADD	set	530
  2298  0217                     _SSP1CON3bits	set	535
  2299  0215                     _SSP1CON1bits	set	533
  2300  0214                     _SSP1STATbits	set	532
  2301  020D                     _WPUBbits	set	525
  2302  0396                     _IOCBFbits	set	918
  2303  0396                     _IOCBF	set	918
  2304  0393                     _IOCAF	set	915
  2305  0394                     _IOCBPbits	set	916
  2306  0395                     _IOCBNbits	set	917
  2307  061A                     _PWM4DCL	set	1562
  2308  061B                     _PWM4DCH	set	1563
  2309  061C                     _PWM4CONbits	set	1564
  2310  0617                     _PWM3DCL	set	1559
  2311  0618                     _PWM3DCH	set	1560
  2312  0619                     _PWM3CONbits	set	1561
  2313  0614                     _PWM2DCL	set	1556
  2314  0615                     _PWM2DCH	set	1557
  2315  0616                     _PWM2CONbits	set	1558
  2316  0611                     _PWM1DCL	set	1553
  2317  0612                     _PWM1DCH	set	1554
  2318  0613                     _PWM1CONbits	set	1555
  2319                           
  2320                           ; #config settings
  2321  0000                     
  2322                           	psect	cinit
  2323  0019                     start_initialization:	
  2324  0019                     __initialization:	
  2325  0019  3020               	movlw	low __pbssBANK0
  2326                           
  2327                           ; Clear objects allocated to COMMON
  2328  001A  01F0               	clrf	__pbssCOMMON& (0+127)
  2329  001B  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  2330  001C  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  2331  001D  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  2332  001E  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  2333  001F  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  2334                           
  2335                           ; Clear objects allocated to BANK0
  2336  0020  0084               	movwf	4
  2337  0021  3000               	movlw	high __pbssBANK0
  2338  0022  0085               	movwf	5
  2339  0023  302C               	movlw	44
  2340  0024  3185  2502         	fcall	clear_ram0
  2341  0026                     end_of_initialization:	
  2342                           ;End of C runtime variable initialization code
  2343                           
  2344  0026                     __end_of__initialization:	
  2345  0026  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2346  0027  0020               	movlb	0
  2347  0028  3180  284D         	ljmp	_main	;jump to C main() function
  2348                           
  2349                           	psect	bssCOMMON
  2350  0070                     __pbssCOMMON:	
  2351  0070                     _gRunPara:	
  2352  0070                     	ds	3
  2353  0073                     _index:	
  2354  0073                     	ds	1
  2355  0074                     _rcv:	
  2356  0074                     	ds	1
  2357  0075                     _state:	
  2358  0075                     	ds	1
  2359                           
  2360                           	psect	bssBANK0
  2361  0020                     __pbssBANK0:	
  2362  0020                     _gLedRunPara:	
  2363  0020                     	ds	14
  2364  002E                     _gCurrentTime:	
  2365  002E                     	ds	4
  2366  0032                     _gRunState:	
  2367  0032                     	ds	1
  2368  0033                     _IR_ReveiveDataStructure:	
  2369  0033                     	ds	14
  2370  0041                     _gLedPara:	
  2371  0041                     	ds	11
  2372                           
  2373                           	psect	clrtext
  2374  0502                     clear_ram0:	
  2375                           ;	Called with FSR0 containing the base address, and
  2376                           ;	WREG with the size to clear
  2377                           
  2378  0502  0064               	clrwdt	;clear the watchdog before getting into this loop
  2379  0503                     clrloop0:	
  2380  0503  0180               	clrf	0	;clear RAM location pointed to by FSR
  2381  0504  3101               	addfsr 0,1
  2382  0505  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2383  0506  2D03               	goto	clrloop0	;have we reached the end yet?
  2384  0507  3400               	retlw	0	;all done for this memory range, return
  2385                           
  2386                           	psect	cstackCOMMON
  2387  0076                     __pcstackCOMMON:	
  2388  0076                     ?_SYSTEM_Initialize:	
  2389  0076                     ?_LedParaInit:	
  2390                           ; 1 bytes @ 0x0
  2391                           
  2392  0076                     ?_TMR1_StartTimer:	
  2393                           ; 1 bytes @ 0x0
  2394                           
  2395  0076                     ?_TMR2_StartTimer:	
  2396                           ; 1 bytes @ 0x0
  2397                           
  2398  0076                     ?_ResetState:	
  2399                           ; 1 bytes @ 0x0
  2400                           
  2401  0076                     ?_LedUpdate:	
  2402                           ; 1 bytes @ 0x0
  2403                           
  2404  0076                     ?_UpdateRTC:	
  2405                           ; 1 bytes @ 0x0
  2406                           
  2407  0076                     ?_manualMode:	
  2408                           ; 1 bytes @ 0x0
  2409                           
  2410  0076                     ?_AutoMode:	
  2411                           ; 1 bytes @ 0x0
  2412                           
  2413  0076                     ?_Decode:	
  2414                           ; 1 bytes @ 0x0
  2415                           
  2416  0076                     ?_RunRTC:	
  2417                           ; 1 bytes @ 0x0
  2418                           
  2419  0076                     ??_RunRTC:	
  2420                           ; 1 bytes @ 0x0
  2421                           
  2422  0076                     ?_main:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425  0076                     ?_PIN_Initialize:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428  0076                     ?_PWM1_Initialize:	
  2429                           ; 1 bytes @ 0x0
  2430                           
  2431  0076                     ?_PWM1_Enable:	
  2432                           ; 1 bytes @ 0x0
  2433                           
  2434  0076                     ?_PWM1_Disable:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437  0076                     ?_PWM2_Initialize:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  0076                     ?_PWM2_Enable:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443  0076                     ?_PWM2_Disable:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446  0076                     ?_PWM3_Initialize:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449  0076                     ?_PWM4_Initialize:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452  0076                     ?_TMR0_Initialize:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455  0076                     ?_TMR1_Initialize:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458  0076                     ?_TMR2_Initialize:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461  0076                     ?_I2C_Initialize:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464  0076                     ?_CheckSSPIF:	
  2465                           ; 1 bytes @ 0x0
  2466                           
  2467  0076                     ?_InterruptOnChange_Initialize:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470  0076                     ?_OSCCON_Initialize:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473  0076                     ?_INTERRUPT_interruptManager:	
  2474                           ; 1 bytes @ 0x0
  2475                           
  2476  0076                     ?_CheckSum:	
  2477                           ; 1 bytes @ 0x0
  2478                           
  2479  0076                     ?_UpdatePWM:	
  2480                           ; 1 bytes @ 0x0
  2481                           
  2482  0076                     ?_SaveLedPara:	
  2483                           ; 1 bytes @ 0x0
  2484                           
  2485  0076                     ?_LedUpdatePara:	
  2486                           ; 1 bytes @ 0x0
  2487                           
  2488  0076                     ?_TimeChangeSec:	
  2489                           ; 1 bytes @ 0x0
  2490                           
  2491  0076                     CheckSum@len:	
  2492                           ; 1 bytes @ 0x0
  2493                           
  2494                           
  2495                           ; 1 bytes @ 0x0
  2496  0076                     	ds	1
  2497  0077                     ??_CheckSum:	
  2498                           
  2499                           ; 1 bytes @ 0x1
  2500  0077                     	ds	1
  2501  0078                     CheckSum@pbuf:	
  2502                           
  2503                           ; 1 bytes @ 0x2
  2504  0078                     	ds	1
  2505  0079                     CheckSum@result:	
  2506                           
  2507                           ; 1 bytes @ 0x3
  2508  0079                     	ds	1
  2509  007A                     CheckSum@i:	
  2510                           
  2511                           ; 1 bytes @ 0x4
  2512  007A                     	ds	1
  2513  007B                     ??_Decode:	
  2514                           
  2515                           ; 1 bytes @ 0x5
  2516  007B                     	ds	1
  2517  007C                     ??_INTERRUPT_interruptManager:	
  2518                           
  2519                           	psect	cstackBANK0
  2520  004C                     __pcstackBANK0:	
  2521                           ; 1 bytes @ 0x6
  2522                           
  2523  004C                     ??_SYSTEM_Initialize:	
  2524  004C                     ??_TMR1_StartTimer:	
  2525                           ; 1 bytes @ 0x0
  2526                           
  2527  004C                     ??_TMR2_StartTimer:	
  2528                           ; 1 bytes @ 0x0
  2529                           
  2530  004C                     ??_ResetState:	
  2531                           ; 1 bytes @ 0x0
  2532                           
  2533  004C                     ??_UpdateRTC:	
  2534                           ; 1 bytes @ 0x0
  2535                           
  2536  004C                     ??_PIN_Initialize:	
  2537                           ; 1 bytes @ 0x0
  2538                           
  2539  004C                     ??_PWM1_Initialize:	
  2540                           ; 1 bytes @ 0x0
  2541                           
  2542  004C                     ??_PWM1_Enable:	
  2543                           ; 1 bytes @ 0x0
  2544                           
  2545  004C                     ??_PWM1_Disable:	
  2546                           ; 1 bytes @ 0x0
  2547                           
  2548  004C                     ?_PWM1_LoadDutyValue:	
  2549                           ; 1 bytes @ 0x0
  2550                           
  2551  004C                     ??_PWM2_Initialize:	
  2552                           ; 1 bytes @ 0x0
  2553                           
  2554  004C                     ??_PWM2_Enable:	
  2555                           ; 1 bytes @ 0x0
  2556                           
  2557  004C                     ??_PWM2_Disable:	
  2558                           ; 1 bytes @ 0x0
  2559                           
  2560  004C                     ?_PWM2_LoadDutyValue:	
  2561                           ; 1 bytes @ 0x0
  2562                           
  2563  004C                     ??_PWM3_Initialize:	
  2564                           ; 1 bytes @ 0x0
  2565                           
  2566  004C                     ??_PWM4_Initialize:	
  2567                           ; 1 bytes @ 0x0
  2568                           
  2569  004C                     ??_TMR0_Initialize:	
  2570                           ; 1 bytes @ 0x0
  2571                           
  2572  004C                     ??_TMR1_Initialize:	
  2573                           ; 1 bytes @ 0x0
  2574                           
  2575  004C                     ??_TMR2_Initialize:	
  2576                           ; 1 bytes @ 0x0
  2577                           
  2578  004C                     ??_I2C_Initialize:	
  2579                           ; 1 bytes @ 0x0
  2580                           
  2581  004C                     ??_CheckSSPIF:	
  2582                           ; 1 bytes @ 0x0
  2583                           
  2584  004C                     ?_I2C_WriteBuffer:	
  2585                           ; 1 bytes @ 0x0
  2586                           
  2587  004C                     ?_I2C_ReadBuffer:	
  2588                           ; 1 bytes @ 0x0
  2589                           
  2590  004C                     ??_InterruptOnChange_Initialize:	
  2591                           ; 1 bytes @ 0x0
  2592                           
  2593  004C                     ??_OSCCON_Initialize:	
  2594                           ; 1 bytes @ 0x0
  2595                           
  2596  004C                     ?___wmul:	
  2597                           ; 1 bytes @ 0x0
  2598                           
  2599  004C                     I2C_WriteBuffer@pbuf:	
  2600                           ; 2 bytes @ 0x0
  2601                           
  2602  004C                     I2C_ReadBuffer@pbuf:	
  2603                           ; 1 bytes @ 0x0
  2604                           
  2605  004C                     PWM1_LoadDutyValue@dutyValue:	
  2606                           ; 1 bytes @ 0x0
  2607                           
  2608  004C                     PWM2_LoadDutyValue@dutyValue:	
  2609                           ; 2 bytes @ 0x0
  2610                           
  2611  004C                     ___wmul@multiplier:	
  2612                           ; 2 bytes @ 0x0
  2613                           
  2614                           
  2615                           ; 2 bytes @ 0x0
  2616  004C                     	ds	1
  2617  004D                     I2C_WriteBuffer@len:	
  2618  004D                     I2C_ReadBuffer@len:	
  2619                           ; 1 bytes @ 0x1
  2620                           
  2621                           
  2622                           ; 1 bytes @ 0x1
  2623  004D                     	ds	1
  2624  004E                     ??_PWM1_LoadDutyValue:	
  2625  004E                     ??_PWM2_LoadDutyValue:	
  2626                           ; 1 bytes @ 0x2
  2627                           
  2628  004E                     ??_I2C_WriteBuffer:	
  2629                           ; 1 bytes @ 0x2
  2630                           
  2631  004E                     ??_I2C_ReadBuffer:	
  2632                           ; 1 bytes @ 0x2
  2633                           
  2634  004E                     ___wmul@multiplicand:	
  2635                           ; 1 bytes @ 0x2
  2636                           
  2637                           
  2638                           ; 2 bytes @ 0x2
  2639  004E                     	ds	1
  2640  004F                     I2C_WriteBuffer@suba:	
  2641                           
  2642                           ; 1 bytes @ 0x3
  2643  004F                     	ds	1
  2644  0050                     ??_UpdatePWM:	
  2645  0050                     ??_LedUpdatePara:	
  2646                           ; 1 bytes @ 0x4
  2647                           
  2648  0050                     ??___wmul:	
  2649                           ; 1 bytes @ 0x4
  2650                           
  2651  0050                     I2C_WriteBuffer@n:	
  2652                           ; 1 bytes @ 0x4
  2653                           
  2654  0050                     I2C_ReadBuffer@suba:	
  2655                           ; 1 bytes @ 0x4
  2656                           
  2657  0050                     ___wmul@product:	
  2658                           ; 1 bytes @ 0x4
  2659                           
  2660                           
  2661                           ; 2 bytes @ 0x4
  2662  0050                     	ds	1
  2663  0051                     I2C_WriteBuffer@i:	
  2664  0051                     I2C_ReadBuffer@n:	
  2665                           ; 1 bytes @ 0x5
  2666                           
  2667                           
  2668                           ; 1 bytes @ 0x5
  2669  0051                     	ds	1
  2670  0052                     ??_SaveLedPara:	
  2671  0052                     ??_TimeChangeSec:	
  2672                           ; 1 bytes @ 0x6
  2673                           
  2674  0052                     I2C_ReadBuffer@i:	
  2675                           ; 1 bytes @ 0x6
  2676                           
  2677  0052                     SaveLedPara@pbuf:	
  2678                           ; 1 bytes @ 0x6
  2679                           
  2680                           
  2681                           ; 1 bytes @ 0x6
  2682  0052                     	ds	1
  2683  0053                     ??_LedParaInit:	
  2684  0053                     LedParaInit@i:	
  2685                           ; 1 bytes @ 0x7
  2686                           
  2687  0053                     _SaveLedPara$1192:	
  2688                           ; 1 bytes @ 0x7
  2689                           
  2690                           
  2691                           ; 2 bytes @ 0x7
  2692  0053                     	ds	1
  2693  0054                     _TimeChangeSec$1716:	
  2694                           
  2695                           ; 2 bytes @ 0x8
  2696  0054                     	ds	1
  2697  0055                     SaveLedPara@offset:	
  2698                           
  2699                           ; 1 bytes @ 0x9
  2700  0055                     	ds	1
  2701  0056                     ??_AutoMode:	
  2702  0056                     SaveLedPara@cnt:	
  2703                           ; 1 bytes @ 0xA
  2704                           
  2705  0056                     LedUpdatePara@i:	
  2706                           ; 1 bytes @ 0xA
  2707                           
  2708                           
  2709                           ; 1 bytes @ 0xA
  2710  0056                     	ds	1
  2711  0057                     ??_manualMode:	
  2712  0057                     SaveLedPara@len:	
  2713                           ; 1 bytes @ 0xB
  2714                           
  2715                           
  2716                           ; 1 bytes @ 0xB
  2717  0057                     	ds	1
  2718  0058                     ??_LedUpdate:	
  2719  0058                     LedUpdate@i:	
  2720                           ; 1 bytes @ 0xC
  2721                           
  2722                           
  2723                           ; 1 bytes @ 0xC
  2724  0058                     	ds	5
  2725  005D                     AutoMode@dTime:	
  2726                           
  2727                           ; 4 bytes @ 0x11
  2728  005D                     	ds	4
  2729  0061                     AutoMode@pstartBright:	
  2730                           
  2731                           ; 1 bytes @ 0x15
  2732  0061                     	ds	1
  2733  0062                     AutoMode@pendBright:	
  2734                           
  2735                           ; 1 bytes @ 0x16
  2736  0062                     	ds	1
  2737  0063                     AutoMode@i:	
  2738                           
  2739                           ; 1 bytes @ 0x17
  2740  0063                     	ds	1
  2741  0064                     ??_main:	
  2742                           
  2743                           	psect	text4
  2744  049B                     __ptext4:	
  2745 ;; *************** function _LedUpdatePara *****************
  2746 ;; Defined at:
  2747 ;;		line 61 in file "led.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  i               1   10[BANK0 ] unsigned char 
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      void 
  2754 ;; Registers used:
  2755 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 1F/0
  2758 ;;		On exit  : 1F/C
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2761 ;;      Params:         0       0       0       0
  2762 ;;      Locals:         0       1       0       0
  2763 ;;      Temps:          0       6       0       0
  2764 ;;      Totals:         0       7       0       0
  2765 ;;Total ram usage:        7 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:    5
  2768 ;; This function calls:
  2769 ;;		_UpdatePWM
  2770 ;; This function is called by:
  2771 ;;		_manualMode
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           
  2776                           ;psect for function _LedUpdatePara
  2777  049B                     _LedUpdatePara:	
  2778  049B                     l2356:	
  2779                           ;incstack = 0
  2780                           ; Regs used in _LedUpdatePara: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2781                           
  2782                           
  2783                           ;led.c: 63: unsigned char i;
  2784                           ;led.c: 65: for (i = 0; i < 2; i++)
  2785  049B  01D6               	clrf	LedUpdatePara@i
  2786  049C                     l2362:	
  2787                           
  2788                           ;led.c: 66: {
  2789                           ;led.c: 67: if (gLedRunPara.nCurrentLum[i] + 1 < gLedRunPara.nTargetLum[i])
  2790  049C  3556               	lslf	LedUpdatePara@i,w
  2791  049D  3E26               	addlw	(low ((_gLedRunPara| 0+6)))& (0+255)
  2792  049E  24E2  3184         	fcall	PL20	;call to abstracted procedure
  2793  04A0  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  2794  04A1  24D0  3184         	fcall	PL4	;call to abstracted procedure
  2795  04A3  1803               	skipnc
  2796  04A4  2CAC               	goto	l2366
  2797                           
  2798                           ;led.c: 68: {
  2799                           ;led.c: 69: gLedRunPara.nCurrentLum[i] += 1;
  2800  04A5  24EA  3184         	fcall	PL22	;call to abstracted procedure
  2801  04A7  0781               	addwf	1,f
  2802  04A8  3141               	addfsr 1,1
  2803  04A9  1803               	skipnc
  2804  04AA  0A81               	incf	1,f
  2805                           
  2806                           ;led.c: 70: }
  2807  04AB  2CC9               	goto	l2372
  2808  04AC                     l2366:	
  2809                           
  2810                           ;led.c: 71: else if (gLedRunPara.nCurrentLum[i] > gLedRunPara.nTargetLum[i] + 1)
  2811  04AC  3556               	lslf	LedUpdatePara@i,w
  2812  04AD  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  2813  04AE  24E2  3184         	fcall	PL20	;call to abstracted procedure
  2814  04B0  3E26               	addlw	(low ((_gLedRunPara| 0+6)))& (0+255)
  2815  04B1  24D0  3184         	fcall	PL4	;call to abstracted procedure
  2816  04B3  1803               	skipnc
  2817  04B4  2CBD               	goto	l2370
  2818                           
  2819                           ;led.c: 72: {
  2820                           ;led.c: 73: gLedRunPara.nCurrentLum[i] -= 1;
  2821  04B5  24EA  3184         	fcall	PL22	;call to abstracted procedure
  2822  04B7  0281               	subwf	1,f
  2823  04B8  3000               	movlw	0
  2824  04B9  3141               	addfsr 1,1
  2825  04BA  3B81               	subwfb	1,f
  2826  04BB  317F               	addfsr 1,-1
  2827                           
  2828                           ;led.c: 74: }
  2829  04BC  2CC9               	goto	l2372
  2830  04BD                     l2370:	
  2831                           
  2832                           ;led.c: 75: else
  2833                           ;led.c: 76: {
  2834                           ;led.c: 77: gLedRunPara.nCurrentLum[i] = gLedRunPara.nTargetLum[i];
  2835  04BD  3556               	lslf	LedUpdatePara@i,w
  2836  04BE  3E26               	addlw	(low ((_gLedRunPara| 0+6)))& (0+255)
  2837  04BF  0086               	movwf	6
  2838  04C0  0187               	clrf	7
  2839  04C1  3556               	lslf	LedUpdatePara@i,w
  2840  04C2  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  2841  04C3  0084               	movwf	4
  2842  04C4  0185               	clrf	5
  2843  04C5  3F40               	moviw [0]fsr1
  2844  04C6  3F80               	movwi [0]fsr0
  2845  04C7  3F41               	moviw [1]fsr1
  2846  04C8  3F81               	movwi [1]fsr0
  2847  04C9                     l2372:	
  2848  04C9  3002               	movlw	2
  2849  04CA  0AD6               	incf	LedUpdatePara@i,f
  2850  04CB  0256               	subwf	LedUpdatePara@i,w
  2851  04CC  1C03               	skipc
  2852  04CD  2C9C               	goto	l2362
  2853                           
  2854                           ;led.c: 78: }
  2855                           ;led.c: 79: }
  2856                           ;led.c: 80: UpdatePWM();
  2857  04CE  3183  2B70         	ljmp	l2160
  2858  04D0                     __end_of_LedUpdatePara:	
  2859  04D0                     PL4:	
  2860  04D0  0086               	movwf	6
  2861  04D1  3F40               	moviw [0]fsr1
  2862  04D2  00D2               	movwf	??_LedUpdatePara+2
  2863  04D3  3F41               	moviw [1]fsr1
  2864  04D4  00D3               	movwf	??_LedUpdatePara+3
  2865  04D5  0852               	movf	??_LedUpdatePara+2,w
  2866  04D6  3E01               	addlw	1
  2867  04D7  00D4               	movwf	??_LedUpdatePara+4
  2868  04D8  3000               	movlw	0
  2869  04D9  3D53               	addwfc	??_LedUpdatePara+3,w
  2870  04DA  00D5               	movwf	??_LedUpdatePara+5
  2871  04DB  0851               	movf	??_LedUpdatePara+1,w
  2872  04DC  0255               	subwf	??_LedUpdatePara+5,w
  2873  04DD  1D03               	skipz
  2874  04DE  0008               	return
  2875  04DF  0850               	movf	??_LedUpdatePara,w
  2876  04E0  0254               	subwf	??_LedUpdatePara+4,w
  2877  04E1  0008               	return
  2878  04E2                     __end_ofPL4:	
  2879  04E2                     PL20:	
  2880  04E2  0086               	movwf	6
  2881  04E3  0187               	clrf	7
  2882  04E4  3F40               	moviw [0]fsr1
  2883  04E5  00D0               	movwf	??_LedUpdatePara
  2884  04E6  3F41               	moviw [1]fsr1
  2885  04E7  00D1               	movwf	??_LedUpdatePara+1
  2886  04E8  3556               	lslf	LedUpdatePara@i,w
  2887  04E9  0008               	return
  2888  04EA                     __end_ofPL20:	
  2889  04EA                     PL22:	
  2890  04EA  3556               	lslf	LedUpdatePara@i,w
  2891  04EB  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  2892  04EC  0086               	movwf	6
  2893  04ED  3001               	movlw	1
  2894  04EE  0187               	clrf	7
  2895  04EF  0008               	return
  2896  04F0                     __end_ofPL22:	
  2897                           
  2898                           	psect	text22
  2899  002A                     __ptext22:	
  2900 ;; *************** function _SaveLedPara *****************
  2901 ;; Defined at:
  2902 ;;		line 25 in file "led.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;		None
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  len             1   11[BANK0 ] unsigned char 
  2907 ;;  cnt             1   10[BANK0 ] unsigned char 
  2908 ;;  offset          1    9[BANK0 ] unsigned char 
  2909 ;;  pbuf            1    6[BANK0 ] PTR unsigned char 
  2910 ;;		 -> gLedPara(11), 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 1F/0
  2917 ;;		On exit  : 1F/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2920 ;;      Params:         0       0       0       0
  2921 ;;      Locals:         0       6       0       0
  2922 ;;      Temps:          0       0       0       0
  2923 ;;      Totals:         0       6       0       0
  2924 ;;Total ram usage:        6 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    5
  2927 ;; This function calls:
  2928 ;;		_I2C_WriteBuffer
  2929 ;; This function is called by:
  2930 ;;		_LedUpdate
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           
  2935                           ;psect for function _SaveLedPara
  2936  002A                     _SaveLedPara:	
  2937  002A                     l2334:	
  2938                           ;incstack = 0
  2939                           ; Regs used in _SaveLedPara: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2940                           
  2941                           
  2942                           ;led.c: 27: unsigned char len = sizeof( gLedPara );
  2943  002A  300B               	movlw	11
  2944  002B  00D7               	movwf	SaveLedPara@len
  2945  002C  3041               	movlw	(low (_gLedPara| 0))& (0+255)
  2946                           
  2947                           ;led.c: 28: unsigned char offset = 0;
  2948  002D  01D5               	clrf	SaveLedPara@offset
  2949                           
  2950                           ;led.c: 29: unsigned char cnt;
  2951                           ;led.c: 30: unsigned char *pbuf = (unsigned char *) &gLedPara;
  2952  002E  00D2               	movwf	SaveLedPara@pbuf
  2953                           
  2954                           ;led.c: 31: (INTCONbits.GIE = 0);
  2955  002F  138B               	bcf	11,7	;volatile
  2956  0030                     l2354:	
  2957                           ;led.c: 32: while ( len > 0 )
  2958                           
  2959  0030  0857               	movf	SaveLedPara@len,w
  2960  0031  1903               	btfsc	3,2
  2961  0032  284B               	goto	l398
  2962                           
  2963                           ;led.c: 33: {
  2964                           ;led.c: 34: cnt = len >= 8 ? 8 : len;
  2965  0033  3008               	movlw	8
  2966  0034  0257               	subwf	SaveLedPara@len,w
  2967  0035  1803               	skipnc
  2968  0036  2839               	goto	l2346
  2969  0037  0857               	movf	SaveLedPara@len,w
  2970  0038  283A               	goto	L1
  2971  0039                     l2346:	
  2972  0039  3008               	movlw	8
  2973  003A                     L1:	
  2974  003A  00D3               	movwf	_SaveLedPara$1192
  2975  003B  01D4               	clrf	_SaveLedPara$1192+1
  2976  003C  00D6               	movwf	SaveLedPara@cnt
  2977                           
  2978                           ;led.c: 35: I2C_WriteBuffer( 0x20 + offset , pbuf + offset, cnt);
  2979  003D  0852               	movf	SaveLedPara@pbuf,w
  2980  003E  0755               	addwf	SaveLedPara@offset,w
  2981  003F  00CC               	movwf	I2C_WriteBuffer@pbuf
  2982  0040  0856               	movf	SaveLedPara@cnt,w
  2983  0041  00CD               	movwf	I2C_WriteBuffer@len
  2984  0042  0855               	movf	SaveLedPara@offset,w
  2985  0043  3E20               	addlw	32
  2986  0044  2213  3180         	fcall	_I2C_WriteBuffer
  2987                           
  2988                           ;led.c: 36: offset += cnt;
  2989  0046  0020               	movlb	0	; select bank0
  2990  0047  0856               	movf	SaveLedPara@cnt,w
  2991  0048  07D5               	addwf	SaveLedPara@offset,f
  2992                           
  2993                           ;led.c: 37: len -= cnt;
  2994  0049  02D7               	subwf	SaveLedPara@len,f
  2995  004A  2830               	goto	l2354
  2996  004B                     l398:	
  2997                           
  2998                           ;led.c: 38: }
  2999                           ;led.c: 39: (INTCONbits.GIE = 1);
  3000  004B  178B               	bsf	11,7	;volatile
  3001  004C  0008               	return
  3002  004D                     __end_of_SaveLedPara:	
  3003  004D                     __pmaintext:	
  3004                           ; 1 bytes @ 0x18
  3005 ;;
  3006 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3007 ;;
  3008 ;; *************** function _main *****************
  3009 ;; Defined at:
  3010 ;;		line 35 in file "main.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;		None
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;		None
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : B1F/0
  3021 ;;		On exit  : 13/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3024 ;;      Params:         0       0       0       0
  3025 ;;      Locals:         0       0       0       0
  3026 ;;      Temps:          0       0       0       0
  3027 ;;      Totals:         0       0       0       0
  3028 ;;Total ram usage:        0 bytes
  3029 ;; Hardware stack levels required when called:    7
  3030 ;; This function calls:
  3031 ;;		_AutoMode
  3032 ;;		_LedParaInit
  3033 ;;		_LedUpdate
  3034 ;;		_ResetState
  3035 ;;		_SYSTEM_Initialize
  3036 ;;		_TMR1_StartTimer
  3037 ;;		_TMR2_StartTimer
  3038 ;;		_UpdateRTC
  3039 ;;		_manualMode
  3040 ;; This function is called by:
  3041 ;;		Startup code after reset
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           
  3046                           ;psect for function _main
  3047  004D                     _main:	
  3048                           
  3049                           ;main.c: 37: SYSTEM_Initialize();
  3050                           
  3051                           ;incstack = 0
  3052                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3053  004D  22F7  3180         	fcall	_SYSTEM_Initialize
  3054                           
  3055                           ;main.c: 38: LedParaInit();
  3056  004F  21D6  3180         	fcall	_LedParaInit
  3057                           
  3058                           ;main.c: 40: TMR1_StartTimer();
  3059  0051  2361  3180         	fcall	_TMR1_StartTimer
  3060                           
  3061                           ;main.c: 41: TMR2_StartTimer();
  3062  0053  2363  3180         	fcall	_TMR2_StartTimer
  3063                           
  3064                           ;main.c: 43: (INTCONbits.GIE = 1);
  3065  0055  178B               	bsf	11,7	;volatile
  3066                           
  3067                           ;main.c: 44: (INTCONbits.PEIE = 1);
  3068  0056  170B               	bsf	11,6	;volatile
  3069  0057                     l29:	
  3070                           ;main.c: 46: while(1)
  3071                           
  3072  0057  0064               	clrwdt	;# 
  3073                           
  3074                           ;main.c: 49: if(INTCONbits.TMR0IF)
  3075  0058  1D0B               	btfss	11,2	;volatile
  3076  0059  285D               	goto	l2588
  3077                           
  3078                           ;main.c: 50: {
  3079                           ;main.c: 51: INTCONbits.TMR0IF = 0;
  3080  005A  110B               	bcf	11,2	;volatile
  3081                           
  3082                           ;main.c: 52: ResetState();
  3083  005B  22F0  3180         	fcall	_ResetState
  3084  005D                     l2588:	
  3085                           
  3086                           ;main.c: 53: }
  3087                           ;main.c: 54: if(gRunState.fRecKey)
  3088  005D  0020               	movlb	0	; select bank0
  3089  005E  1C32               	btfss	_gRunState,0
  3090  005F  2865               	goto	l2596
  3091                           
  3092                           ;main.c: 55: {
  3093                           ;main.c: 56: gRunState.fRecKey = 0;
  3094  0060  1032               	bcf	_gRunState,0
  3095                           
  3096                           ;main.c: 57: LedUpdate();
  3097  0061  22BB  3180         	fcall	_LedUpdate
  3098                           
  3099                           ;main.c: 58: UpdateRTC();
  3100  0063  2365  3180         	fcall	_UpdateRTC
  3101  0065                     l2596:	
  3102                           
  3103                           ;main.c: 59: }
  3104                           ;main.c: 60: if(PIR1bits.TMR2IF)
  3105  0065  1C91               	btfss	17,1	;volatile
  3106  0066  286A               	goto	l2602
  3107                           
  3108                           ;main.c: 61: {
  3109                           ;main.c: 62: PIR1bits.TMR2IF = 0;
  3110  0067  1091               	bcf	17,1	;volatile
  3111                           
  3112                           ;main.c: 63: manualMode();
  3113  0068  2071  3180         	fcall	_manualMode
  3114  006A                     l2602:	
  3115                           
  3116                           ;main.c: 64: }
  3117                           ;main.c: 65: if(gCurrentTime.datatime.fSec)
  3118  006A  0020               	movlb	0	; select bank0
  3119  006B  1C2E               	btfss	_gCurrentTime,0	;volatile
  3120  006C  2857               	goto	l29
  3121                           
  3122                           ;main.c: 66: {
  3123                           ;main.c: 67: gCurrentTime.datatime.fSec = 0;
  3124  006D  102E               	bcf	_gCurrentTime,0	;volatile
  3125                           
  3126                           ;main.c: 68: AutoMode();
  3127  006E  20E0  3180         	fcall	_AutoMode
  3128  0070  2857               	goto	l29
  3129  0071                     __end_of_main:	
  3130  0071                     __ptext1:	
  3131 ;; *************** function _manualMode *****************
  3132 ;; Defined at:
  3133 ;;		line 82 in file "led.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;		None
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;		None
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  1    wreg      void 
  3140 ;; Registers used:
  3141 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3142 ;; Tracked objects:
  3143 ;;		On entry : 1F/0
  3144 ;;		On exit  : 13/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3147 ;;      Params:         0       0       0       0
  3148 ;;      Locals:         0       0       0       0
  3149 ;;      Temps:          0       0       0       0
  3150 ;;      Totals:         0       0       0       0
  3151 ;;Total ram usage:        0 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; Hardware stack levels required when called:    6
  3154 ;; This function calls:
  3155 ;;		_LedUpdatePara
  3156 ;;		_PWM1_Disable
  3157 ;;		_PWM1_Enable
  3158 ;;		_PWM2_Disable
  3159 ;;		_PWM2_Enable
  3160 ;;		___wmul
  3161 ;; This function is called by:
  3162 ;;		_main
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           
  3167                           ;psect for function _manualMode
  3168  0071                     _manualMode:	
  3169                           
  3170                           ;led.c: 84: if(gLedPara.fAuto)
  3171                           
  3172                           ;incstack = 0
  3173                           ; Regs used in _manualMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3174  0071  1C41               	btfss	_gLedPara,0
  3175  0072  0008               	return
  3176                           
  3177                           ;led.c: 85: {
  3178                           ;led.c: 86: if (gLedPara.fWhiteOn)
  3179  0073  1CC1               	btfss	_gLedPara,1
  3180  0074  2882               	goto	l2482
  3181                           
  3182                           ;led.c: 87: {
  3183                           ;led.c: 88: PWM1_Enable();
  3184  0075  21D0  3180         	fcall	_PWM1_Enable
  3185                           
  3186                           ;led.c: 89: gLedRunPara.nTargetLum[0] = (unsigned int)gLedPara.bright[0] * 10;
  3187  0077  0020               	movlb	0	; select bank0
  3188  0078  0842               	movf	_gLedPara+1,w
  3189  0079  23AF  3180         	fcall	PL8	;call to abstracted procedure
  3190  007B  21BB  3180         	fcall	___wmul
  3191  007D  084D               	movf	?___wmul+1,w
  3192  007E  00A7               	movwf	_gLedRunPara+7
  3193  007F  084C               	movf	?___wmul,w
  3194  0080  00A6               	movwf	_gLedRunPara+6
  3195                           
  3196                           ;led.c: 90: }
  3197  0081  2887               	goto	l2486
  3198  0082                     l2482:	
  3199                           
  3200                           ;led.c: 91: else
  3201                           ;led.c: 92: {
  3202                           ;led.c: 93: PWM1_Disable();
  3203  0082  236A  3180         	fcall	_PWM1_Disable
  3204                           
  3205                           ;led.c: 94: gLedRunPara.nTargetLum[0] = 0;
  3206  0084  0020               	movlb	0	; select bank0
  3207  0085  01A6               	clrf	_gLedRunPara+6
  3208  0086  01A7               	clrf	_gLedRunPara+7
  3209  0087                     l2486:	
  3210                           
  3211                           ;led.c: 95: }
  3212                           ;led.c: 96: if (gLedPara.fBlueOn)
  3213  0087  1D41               	btfss	_gLedPara,2
  3214  0088  2896               	goto	l2492
  3215                           
  3216                           ;led.c: 97: {
  3217                           ;led.c: 98: PWM2_Enable();
  3218  0089  21D3  3180         	fcall	_PWM2_Enable
  3219                           
  3220                           ;led.c: 99: gLedRunPara.nTargetLum[1] = (unsigned int)gLedPara.bright[1] * 10;
  3221  008B  0020               	movlb	0	; select bank0
  3222  008C  0843               	movf	_gLedPara+2,w
  3223  008D  23AF  3180         	fcall	PL8	;call to abstracted procedure
  3224  008F  21BB  3180         	fcall	___wmul
  3225  0091  084D               	movf	?___wmul+1,w
  3226  0092  00A9               	movwf	_gLedRunPara+9
  3227  0093  084C               	movf	?___wmul,w
  3228  0094  00A8               	movwf	_gLedRunPara+8
  3229                           
  3230                           ;led.c: 100: }
  3231  0095  289A               	goto	l2496
  3232  0096                     l2492:	
  3233                           
  3234                           ;led.c: 101: else
  3235                           ;led.c: 102: {
  3236                           ;led.c: 103: PWM2_Disable();
  3237  0096  236D               	fcall	_PWM2_Disable
  3238                           
  3239                           ;led.c: 104: gLedRunPara.nTargetLum[1] = 0;
  3240  0097  0020               	movlb	0	; select bank0
  3241  0098  01A8               	clrf	_gLedRunPara+8
  3242  0099  01A9               	clrf	_gLedRunPara+9
  3243  009A                     l2496:	
  3244                           
  3245                           ;led.c: 105: }
  3246                           ;led.c: 106: LedUpdatePara();
  3247  009A  3184  2C9B         	ljmp	l2356
  3248  009C                     __end_of_manualMode:	
  3249  009C                     __ptext31:	
  3250 ;; *************** function _TimeChangeSec *****************
  3251 ;; Defined at:
  3252 ;;		line 109 in file "led.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;		None
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;		None
  3257 ;; Return value:  Size  Location     Type
  3258 ;;                  1    wreg      void 
  3259 ;; Registers used:
  3260 ;;		wreg, status,2, status,0, pclath, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 1F/C
  3263 ;;		On exit  : 1F/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3266 ;;      Params:         0       0       0       0
  3267 ;;      Locals:         0       2       0       0
  3268 ;;      Temps:          0       2       0       0
  3269 ;;      Totals:         0       4       0       0
  3270 ;;Total ram usage:        4 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:    4
  3273 ;; This function calls:
  3274 ;;		___wmul
  3275 ;; This function is called by:
  3276 ;;		_AutoMode
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           
  3281                           ;psect for function _TimeChangeSec
  3282  009C                     _TimeChangeSec:	
  3283                           
  3284                           ;led.c: 111: gLedRunPara.nCurrentTime = (gCurrentTime.datatime.hour * 60 + gCurrentTime.
      +                          datatime.minute) * 30 + gCurrentTime.datatime.second;
  3285                           
  3286                           ;incstack = 0
  3287                           ; Regs used in _TimeChangeSec: [wreg+status,2+status,0+pclath+cstack]
  3288  009C  0020               	movlb	0	; select bank0
  3289  009D  0831               	movf	_gCurrentTime+3,w	;volatile
  3290  009E  00CC               	movwf	___wmul@multiplier
  3291  009F  3008               	movlw	8
  3292  00A0  01CD               	clrf	___wmul@multiplier+1
  3293  00A1  00CE               	movwf	___wmul@multiplicand
  3294  00A2  3007               	movlw	7
  3295  00A3  00CF               	movwf	___wmul@multiplicand+1
  3296  00A4  21BB  3180         	fcall	___wmul
  3297  00A6  084C               	movf	?___wmul,w
  3298  00A7  00D2               	movwf	??_TimeChangeSec
  3299  00A8  084D               	movf	?___wmul+1,w
  3300  00A9  00D3               	movwf	??_TimeChangeSec+1
  3301  00AA  0830               	movf	_gCurrentTime+2,w	;volatile
  3302  00AB  00CC               	movwf	___wmul@multiplier
  3303  00AC  301E               	movlw	30
  3304  00AD  01CD               	clrf	___wmul@multiplier+1
  3305  00AE  00CE               	movwf	___wmul@multiplicand
  3306  00AF  01CF               	clrf	___wmul@multiplicand+1
  3307  00B0  21BB  3180         	fcall	___wmul
  3308  00B2  084C               	movf	?___wmul,w
  3309  00B3  0752               	addwf	??_TimeChangeSec,w
  3310  00B4  00A0               	movwf	_gLedRunPara
  3311  00B5  084D               	movf	?___wmul+1,w
  3312  00B6  3D53               	addwfc	??_TimeChangeSec+1,w
  3313  00B7  00A1               	movwf	_gLedRunPara+1
  3314  00B8  082F               	movf	_gCurrentTime+1,w	;volatile
  3315  00B9  07A0               	addwf	_gLedRunPara,f
  3316  00BA  1803               	skipnc
  3317  00BB  0AA1               	incf	_gLedRunPara+1,f
  3318                           
  3319                           ;led.c: 112: gLedRunPara.sunrisetime = (gLedPara.sunriseHour * 60 + gLedPara.sunriseMin)
      +                           * 30;
  3320  00BC  0844               	movf	_gLedPara+3,w
  3321  00BD  23F2  3180         	fcall	PL28	;call to abstracted procedure
  3322  00BF  21BB  3180         	fcall	___wmul
  3323  00C1  084D               	movf	?___wmul+1,w
  3324  00C2  00D5               	movwf	_TimeChangeSec$1716+1
  3325  00C3  084C               	movf	?___wmul,w
  3326  00C4  00D4               	movwf	_TimeChangeSec$1716
  3327  00C5  0845               	movf	_gLedPara+4,w
  3328                           
  3329                           ;led.c: 112: gLedRunPara.sunrisetime = (gLedPara.sunriseHour * 60 + gLedPara.sunriseMin)
      +                           * 30;
  3330  00C6  23B5  3180         	fcall	PL10	;call to abstracted procedure
  3331  00C8  21BB  3180         	fcall	___wmul
  3332  00CA  084D               	movf	?___wmul+1,w
  3333  00CB  00A3               	movwf	_gLedRunPara+3
  3334  00CC  084C               	movf	?___wmul,w
  3335  00CD  00A2               	movwf	_gLedRunPara+2
  3336                           
  3337                           ;led.c: 113: gLedRunPara.sunsettime = (gLedPara.sunsetHour * 60 + gLedPara.sunsetMin) * 
      +                          30;
  3338  00CE  0848               	movf	_gLedPara+7,w
  3339  00CF  23F2  3180         	fcall	PL28	;call to abstracted procedure
  3340  00D1  21BB  3180         	fcall	___wmul
  3341  00D3  084D               	movf	?___wmul+1,w
  3342  00D4  00D5               	movwf	_TimeChangeSec$1716+1
  3343  00D5  084C               	movf	?___wmul,w
  3344  00D6  00D4               	movwf	_TimeChangeSec$1716
  3345  00D7  0849               	movf	_gLedPara+8,w
  3346                           
  3347                           ;led.c: 113: gLedRunPara.sunsettime = (gLedPara.sunsetHour * 60 + gLedPara.sunsetMin) * 
      +                          30;
  3348  00D8  23B5  3180         	fcall	PL10	;call to abstracted procedure
  3349  00DA  21BB               	fcall	___wmul
  3350  00DB  084D               	movf	?___wmul+1,w
  3351  00DC  00A5               	movwf	_gLedRunPara+5
  3352  00DD  084C               	movf	?___wmul,w
  3353  00DE  00A4               	movwf	_gLedRunPara+4
  3354  00DF  0008               	return
  3355  00E0                     __end_of_TimeChangeSec:	
  3356  00E0                     __ptext27:	
  3357 ;; *************** function _AutoMode *****************
  3358 ;; Defined at:
  3359 ;;		line 115 in file "led.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;		None
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  dTime           4   17[BANK0 ] long 
  3364 ;;  i               1   23[BANK0 ] unsigned char 
  3365 ;;  pendBright      1   22[BANK0 ] PTR unsigned char 
  3366 ;;		 -> gLedPara.nightBright(2), gLedPara.dayBright(2), gLedPara(11), 
  3367 ;;  pstartBright    1   21[BANK0 ] PTR unsigned char 
  3368 ;;		 -> gLedPara.nightBright(2), gLedPara.dayBright(2), gLedPara(11), 
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 1F/0
  3375 ;;		On exit  : 13/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3378 ;;      Params:         0       0       0       0
  3379 ;;      Locals:         0       7       0       0
  3380 ;;      Temps:          0       7       0       0
  3381 ;;      Totals:         0      14       0       0
  3382 ;;Total ram usage:       14 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    5
  3385 ;; This function calls:
  3386 ;;		_PWM1_Enable
  3387 ;;		_PWM2_Enable
  3388 ;;		_TimeChangeSec
  3389 ;;		_UpdatePWM
  3390 ;;		___wmul
  3391 ;; This function is called by:
  3392 ;;		_main
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           
  3397                           ;psect for function _AutoMode
  3398  00E0                     _AutoMode:	
  3399                           
  3400                           ;led.c: 117: unsigned char i;
  3401                           ;led.c: 118: unsigned char *pstartBright;
  3402                           ;led.c: 119: unsigned char *pendBright;
  3403                           ;led.c: 120: long signed int dTime;
  3404                           ;led.c: 121: static unsigned char flag = 1;
  3405                           ;led.c: 123: if(!gLedPara.fAuto)
  3406                           
  3407                           ;incstack = 0
  3408                           ; Regs used in _AutoMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3409  00E0  1841               	btfsc	_gLedPara,0
  3410  00E1  0008               	return
  3411                           
  3412                           ;led.c: 124: {
  3413                           ;led.c: 125: PWM1_Enable();
  3414  00E2  21D0  3180         	fcall	_PWM1_Enable
  3415                           
  3416                           ;led.c: 126: PWM2_Enable();
  3417  00E4  21D3  3180         	fcall	_PWM2_Enable
  3418                           
  3419                           ;led.c: 127: TimeChangeSec();
  3420  00E6  209C  3180         	fcall	_TimeChangeSec
  3421                           
  3422                           ;led.c: 129: if(gLedRunPara.sunrisetime == gLedRunPara.sunsettime)
  3423  00E8  0825               	movf	_gLedRunPara+5,w
  3424  00E9  0623               	xorwf	_gLedRunPara+3,w
  3425  00EA  1D03               	skipz
  3426  00EB  28EE               	goto	u1765
  3427  00EC  0824               	movf	_gLedRunPara+4,w
  3428  00ED  0622               	xorwf	_gLedRunPara+2,w
  3429  00EE                     u1765:	
  3430  00EE  1D03               	skipz
  3431  00EF  28FE               	goto	l2516
  3432                           
  3433                           ;led.c: 130: {
  3434                           ;led.c: 131: for(i = 0;i < 2;i++)
  3435  00F0  01E3               	clrf	AutoMode@i
  3436  00F1                     l2510:	
  3437                           
  3438                           ;led.c: 132: {
  3439                           ;led.c: 133: gLedRunPara.nCurrentLum[i] = (unsigned int)gLedPara.nightBright[i] * 10;
  3440  00F1  0863               	movf	AutoMode@i,w
  3441  00F2  3E4A               	addlw	(low ((_gLedPara| 0+9)))& (0+255)
  3442  00F3  2399  3180         	fcall	PL2	;call to abstracted procedure
  3443  00F5  21BB  3180         	fcall	___wmul
  3444  00F7  23DD  3180         	fcall	PL18	;call to abstracted procedure
  3445  00F9  3002               	movlw	2
  3446  00FA  0AE3               	incf	AutoMode@i,f
  3447  00FB  0263               	subwf	AutoMode@i,w
  3448  00FC  1C03               	skipc
  3449  00FD  28F1               	goto	l2510
  3450  00FE                     l2516:	
  3451                           
  3452                           ;led.c: 134: }
  3453                           ;led.c: 135: }
  3454                           ;led.c: 136: if(((gLedRunPara.sunrisetime < gLedRunPara.sunsettime) && (gLedRunPara.sunr
      +                          isetime <= gLedRunPara.nCurrentTime) && (gLedRunPara.nCurrentTime < gLedRunPara.sunsetti
      +                          me))
  3455                           ;led.c: 137: || ((gLedRunPara.sunrisetime > gLedRunPara.sunsettime) && ((gLedRunPara.nCu
      +                          rrentTime >= gLedRunPara.sunrisetime) || (gLedRunPara.nCurrentTime < gLedRunPara.sunsett
      +                          ime))))
  3456  00FE  0825               	movf	_gLedRunPara+5,w
  3457  00FF  0223               	subwf	_gLedRunPara+3,w
  3458  0100  1D03               	skipz
  3459  0101  2904               	goto	u1785
  3460  0102  0824               	movf	_gLedRunPara+4,w
  3461  0103  0222               	subwf	_gLedRunPara+2,w
  3462  0104                     u1785:	
  3463  0104  0823               	movf	_gLedRunPara+3,w
  3464  0105  1803               	skipnc
  3465  0106  2917               	goto	L7
  3466  0107  0221               	subwf	_gLedRunPara+1,w
  3467  0108  1D03               	skipz
  3468  0109  290C               	goto	u1795
  3469  010A  0822               	movf	_gLedRunPara+2,w
  3470  010B  0220               	subwf	_gLedRunPara,w
  3471  010C                     u1795:	
  3472  010C  1C03               	skipc
  3473  010D  2916               	goto	l2522
  3474  010E  0825               	movf	_gLedRunPara+5,w
  3475  010F  0221               	subwf	_gLedRunPara+1,w
  3476  0110  1D03               	skipz
  3477  0111  2914               	goto	u1805
  3478  0112  0824               	movf	_gLedRunPara+4,w
  3479  0113  0220               	subwf	_gLedRunPara,w
  3480  0114                     u1805:	
  3481  0114  1C03               	skipc
  3482  0115  292E               	goto	l2528
  3483  0116                     l2522:	
  3484  0116  0823               	movf	_gLedRunPara+3,w
  3485  0117                     L7:	
  3486  0117  0225               	subwf	_gLedRunPara+5,w
  3487  0118  1D03               	skipz
  3488  0119  291C               	goto	u1815
  3489  011A  0822               	movf	_gLedRunPara+2,w
  3490  011B  0224               	subwf	_gLedRunPara+4,w
  3491  011C                     u1815:	
  3492  011C  1803               	skipnc
  3493  011D  2937               	goto	l2534
  3494  011E  0823               	movf	_gLedRunPara+3,w
  3495  011F  0221               	subwf	_gLedRunPara+1,w
  3496  0120  1D03               	skipz
  3497  0121  2924               	goto	u1825
  3498  0122  0822               	movf	_gLedRunPara+2,w
  3499  0123  0220               	subwf	_gLedRunPara,w
  3500  0124                     u1825:	
  3501  0124  1803               	skipnc
  3502  0125  292E               	goto	l2528
  3503  0126  0825               	movf	_gLedRunPara+5,w
  3504  0127  0221               	subwf	_gLedRunPara+1,w
  3505  0128  1D03               	skipz
  3506  0129  292C               	goto	u1835
  3507  012A  0824               	movf	_gLedRunPara+4,w
  3508  012B  0220               	subwf	_gLedRunPara,w
  3509  012C                     u1835:	
  3510  012C  1803               	skipnc
  3511  012D  2937               	goto	l2534
  3512  012E                     l2528:	
  3513                           
  3514                           ;led.c: 138: {
  3515                           ;led.c: 139: dTime = gLedRunPara.nCurrentTime - gLedRunPara.sunrisetime;
  3516  012E  3022               	movlw	((low (_gLedRunPara| 0))& (0+255)+2)
  3517  012F  23D4  3180         	fcall	PL16	;call to abstracted procedure
  3518  0131  304A               	movlw	(low ((_gLedPara| 0+9)))& (0+255)
  3519  0132  01DF               	clrf	AutoMode@dTime+2
  3520  0133  01E0               	clrf	AutoMode@dTime+3
  3521                           
  3522                           ;led.c: 140: pstartBright = (unsigned char*)gLedPara.nightBright;
  3523  0134  00E1               	movwf	AutoMode@pstartBright
  3524                           
  3525                           ;led.c: 141: pendBright = (unsigned char*)gLedPara.dayBright;
  3526  0135  3046               	movlw	(low ((_gLedPara| 0+5)))& (0+255)
  3527  0136  2948               	goto	L6
  3528  0137                     l2534:	
  3529                           ;led.c: 142: }
  3530                           
  3531                           
  3532                           ;led.c: 143: else
  3533                           ;led.c: 144: {
  3534                           ;led.c: 145: dTime = gLedRunPara.nCurrentTime - gLedRunPara.sunsettime;
  3535  0137  3024               	movlw	((low (_gLedRunPara| 0))& (0+255)+4)
  3536  0138  23D4  3180         	fcall	PL16	;call to abstracted procedure
  3537  013A  01DF               	clrf	AutoMode@dTime+2
  3538  013B  01E0               	clrf	AutoMode@dTime+3
  3539                           
  3540                           ;led.c: 146: if(dTime < 0)
  3541  013C  1FE0               	btfss	AutoMode@dTime+3,7
  3542  013D  2945               	goto	l2540
  3543                           
  3544                           ;led.c: 147: {
  3545                           ;led.c: 148: dTime += 43200;
  3546  013E  30C0               	movlw	192
  3547  013F  07DD               	addwf	AutoMode@dTime,f
  3548  0140  30A8               	movlw	168
  3549  0141  3DDE               	addwfc	AutoMode@dTime+1,f
  3550  0142  3000               	movlw	0
  3551  0143  3DDF               	addwfc	AutoMode@dTime+2,f
  3552  0144  3DE0               	addwfc	AutoMode@dTime+3,f
  3553  0145                     l2540:	
  3554                           
  3555                           ;led.c: 149: }
  3556                           ;led.c: 150: pstartBright = (unsigned char*)gLedPara.dayBright;
  3557  0145  3046               	movlw	(low ((_gLedPara| 0+5)))& (0+255)
  3558  0146  00E1               	movwf	AutoMode@pstartBright
  3559                           
  3560                           ;led.c: 151: pendBright = (unsigned char*)gLedPara.nightBright;
  3561  0147  304A               	movlw	(low ((_gLedPara| 0+9)))& (0+255)
  3562  0148                     L6:	
  3563  0148  00E2               	movwf	AutoMode@pendBright
  3564                           
  3565                           ;led.c: 152: }
  3566                           ;led.c: 153: for(i = 0;i < 2;i++)
  3567  0149  01E3               	clrf	AutoMode@i
  3568  014A                     l2550:	
  3569                           
  3570                           ;led.c: 154: {
  3571                           ;led.c: 155: if(pstartBright[i] <= pendBright[i])
  3572  014A  0863               	movf	AutoMode@i,w
  3573  014B  0762               	addwf	AutoMode@pendBright,w
  3574  014C  00D6               	movwf	??_AutoMode
  3575  014D  0086               	movwf	6
  3576  014E  0187               	clrf	7
  3577  014F  0863               	movf	AutoMode@i,w
  3578  0150  0761               	addwf	AutoMode@pstartBright,w
  3579  0151  00D7               	movwf	??_AutoMode+1
  3580  0152  0084               	movwf	4
  3581  0153  0185               	clrf	5
  3582  0154  0800               	movf	0,w
  3583  0155  0201               	subwf	1,w
  3584                           
  3585                           ;led.c: 156: {
  3586                           ;led.c: 157: if(dTime < (unsigned int)(pendBright[i] - pstartBright[i]) * 10)
  3587  0156  0863               	movf	AutoMode@i,w
  3588  0157  1C03               	skipc
  3589  0158  298A               	goto	L8
  3590  0159  0762               	addwf	AutoMode@pendBright,w
  3591  015A  00D6               	movwf	??_AutoMode
  3592  015B  0086               	movwf	6
  3593  015C  0863               	movf	AutoMode@i,w
  3594  015D  0761               	addwf	AutoMode@pstartBright,w
  3595  015E  00D7               	movwf	??_AutoMode+1
  3596  015F  0084               	movwf	4
  3597  0160  23CA  3180         	fcall	PL14	;call to abstracted procedure
  3598  0162  21BB  3180         	fcall	___wmul
  3599  0164  23A2  3180         	fcall	PL6	;call to abstracted procedure
  3600  0166  1D03               	skipz
  3601  0167  2972               	goto	u1863
  3602  0168  085A               	movf	??_AutoMode+4,w
  3603  0169  025F               	subwf	AutoMode@dTime+2,w
  3604  016A  1D03               	skipz
  3605  016B  2972               	goto	u1863
  3606  016C  0859               	movf	??_AutoMode+3,w
  3607  016D  025E               	subwf	AutoMode@dTime+1,w
  3608  016E  1D03               	skipz
  3609  016F  2972               	goto	u1863
  3610  0170  0858               	movf	??_AutoMode+2,w
  3611  0171  025D               	subwf	AutoMode@dTime,w
  3612  0172                     u1863:	
  3613                           
  3614                           ;led.c: 158: {
  3615                           ;led.c: 159: gLedRunPara.nCurrentLum[i] = ((unsigned int)pstartBright[i] * 10) + dTime;
  3616  0172  0863               	movf	AutoMode@i,w
  3617  0173  1803               	skipnc
  3618  0174  2981               	goto	L9
  3619  0175  0761               	addwf	AutoMode@pstartBright,w
  3620  0176  00D6               	movwf	??_AutoMode
  3621  0177  2399  3180         	fcall	PL2	;call to abstracted procedure
  3622  0179  21BB  3180         	fcall	___wmul
  3623  017B  085D               	movf	AutoMode@dTime,w
  3624  017C  074C               	addwf	?___wmul,w
  3625  017D  00D7               	movwf	??_AutoMode+1
  3626  017E  085E               	movf	AutoMode@dTime+1,w
  3627  017F  3D4D               	addwfc	?___wmul+1,w
  3628  0180  29B3               	goto	L10
  3629  0181                     L9:	
  3630                           ;led.c: 161: else
  3631                           ;led.c: 162: {
  3632                           ;led.c: 163: gLedRunPara.nCurrentLum[i] = (unsigned int)pendBright[i] * 10;
  3633                           
  3634                           ;led.c: 160: }
  3635                           
  3636  0181  0762               	addwf	AutoMode@pendBright,w
  3637  0182  00D6               	movwf	??_AutoMode
  3638  0183  2399  3180         	fcall	PL2	;call to abstracted procedure
  3639  0185  21BB  3180         	fcall	___wmul
  3640  0187  23DD  3180         	fcall	PL18	;call to abstracted procedure
  3641  0189  29B5               	goto	l2564
  3642  018A                     L8:	
  3643                           ;led.c: 166: else
  3644                           ;led.c: 167: {
  3645                           ;led.c: 168: if(dTime < (unsigned int)(pstartBright[i] - pendBright[i]) * 10)
  3646                           
  3647  018A  0761               	addwf	AutoMode@pstartBright,w
  3648  018B  00D6               	movwf	??_AutoMode
  3649  018C  0086               	movwf	6
  3650  018D  0187               	clrf	7
  3651  018E  0863               	movf	AutoMode@i,w
  3652  018F  0762               	addwf	AutoMode@pendBright,w
  3653  0190  00D7               	movwf	??_AutoMode+1
  3654  0191  0084               	movwf	4
  3655  0192  0185               	clrf	5
  3656  0193  23CA  3180         	fcall	PL14	;call to abstracted procedure
  3657  0195  21BB  3180         	fcall	___wmul
  3658  0197  23A2  3180         	fcall	PL6	;call to abstracted procedure
  3659  0199  1D03               	skipz
  3660  019A  29A5               	goto	u1873
  3661  019B  085A               	movf	??_AutoMode+4,w
  3662  019C  025F               	subwf	AutoMode@dTime+2,w
  3663  019D  1D03               	skipz
  3664  019E  29A5               	goto	u1873
  3665  019F  0859               	movf	??_AutoMode+3,w
  3666  01A0  025E               	subwf	AutoMode@dTime+1,w
  3667  01A1  1D03               	skipz
  3668  01A2  29A5               	goto	u1873
  3669  01A3  0858               	movf	??_AutoMode+2,w
  3670  01A4  025D               	subwf	AutoMode@dTime,w
  3671  01A5                     u1873:	
  3672                           
  3673                           ;led.c: 169: {
  3674                           ;led.c: 170: gLedRunPara.nCurrentLum[i] = ((unsigned int)pstartBright[i] * 10) - dTime;
  3675  01A5  0863               	movf	AutoMode@i,w
  3676  01A6  1803               	skipnc
  3677  01A7  2981               	goto	L9
  3678  01A8  0761               	addwf	AutoMode@pstartBright,w
  3679  01A9  00D6               	movwf	??_AutoMode
  3680  01AA  2399  3180         	fcall	PL2	;call to abstracted procedure
  3681  01AC  21BB  3180         	fcall	___wmul
  3682  01AE  085D               	movf	AutoMode@dTime,w
  3683  01AF  024C               	subwf	?___wmul,w
  3684  01B0  00D7               	movwf	??_AutoMode+1
  3685  01B1  085E               	movf	AutoMode@dTime+1,w
  3686  01B2  3B4D               	subwfb	?___wmul+1,w
  3687  01B3                     L10:	
  3688  01B3  23C0  3180         	fcall	PL12	;call to abstracted procedure
  3689  01B5                     l2564:	
  3690                           ;led.c: 171: }
  3691                           
  3692  01B5  3002               	movlw	2
  3693  01B6  0AE3               	incf	AutoMode@i,f
  3694  01B7  0263               	subwf	AutoMode@i,w
  3695  01B8  1C03               	skipc
  3696  01B9  294A               	goto	l2550
  3697                           
  3698                           ;led.c: 175: }
  3699                           ;led.c: 176: }
  3700                           ;led.c: 177: }
  3701                           ;led.c: 178: UpdatePWM();
  3702  01BA  2B70               	ljmp	l2160
  3703  01BB                     __end_of_AutoMode:	
  3704  01BB                     __ptext32:	
  3705 ;; *************** function ___wmul *****************
  3706 ;; Defined at:
  3707 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.41\sources\common\Umul16.c"
  3708 ;; Parameters:    Size  Location     Type
  3709 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3710 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;  product         2    4[BANK0 ] unsigned int 
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  2    0[BANK0 ] unsigned int 
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, status,0
  3717 ;; Tracked objects:
  3718 ;;		On entry : 1F/0
  3719 ;;		On exit  : 1F/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3722 ;;      Params:         0       4       0       0
  3723 ;;      Locals:         0       2       0       0
  3724 ;;      Temps:          0       0       0       0
  3725 ;;      Totals:         0       6       0       0
  3726 ;;Total ram usage:        6 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; Hardware stack levels required when called:    3
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		_manualMode
  3733 ;;		_TimeChangeSec
  3734 ;;		_AutoMode
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           
  3739                           ;psect for function ___wmul
  3740  01BB                     ___wmul:	
  3741                           
  3742                           ;incstack = 0
  3743                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3744  01BB  01D0               	clrf	___wmul@product
  3745  01BC  01D1               	clrf	___wmul@product+1
  3746  01BD                     l2164:	
  3747  01BD  1C4C               	btfss	___wmul@multiplier,0
  3748  01BE  29C3               	goto	l2168
  3749  01BF  084E               	movf	___wmul@multiplicand,w
  3750  01C0  07D0               	addwf	___wmul@product,f
  3751  01C1  084F               	movf	___wmul@multiplicand+1,w
  3752  01C2  3DD1               	addwfc	___wmul@product+1,f
  3753  01C3                     l2168:	
  3754  01C3  35CE               	lslf	___wmul@multiplicand,f
  3755  01C4  0DCF               	rlf	___wmul@multiplicand+1,f
  3756  01C5  36CD               	lsrf	___wmul@multiplier+1,f
  3757  01C6  0CCC               	rrf	___wmul@multiplier,f
  3758  01C7  084C               	movf	___wmul@multiplier,w
  3759  01C8  044D               	iorwf	___wmul@multiplier+1,w
  3760  01C9  1D03               	btfss	3,2
  3761  01CA  29BD               	goto	l2164
  3762  01CB  0851               	movf	___wmul@product+1,w
  3763  01CC  00CD               	movwf	?___wmul+1
  3764  01CD  0850               	movf	___wmul@product,w
  3765  01CE  00CC               	movwf	?___wmul
  3766  01CF  0008               	return
  3767  01D0                     __end_of___wmul:	
  3768  01D0                     __ptext34:	
  3769 ;; *************** function _PWM1_Enable *****************
  3770 ;; Defined at:
  3771 ;;		line 12 in file "pwm.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;		None
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;		None
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		None
  3780 ;; Tracked objects:
  3781 ;;		On entry : 1F/0
  3782 ;;		On exit  : 1F/C
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3785 ;;      Params:         0       0       0       0
  3786 ;;      Locals:         0       0       0       0
  3787 ;;      Temps:          0       0       0       0
  3788 ;;      Totals:         0       0       0       0
  3789 ;;Total ram usage:        0 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; Hardware stack levels required when called:    3
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_manualMode
  3796 ;;		_AutoMode
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           
  3801                           ;psect for function _PWM1_Enable
  3802  01D0                     _PWM1_Enable:	
  3803                           
  3804                           ;pwm.c: 14: PWM1CONbits.PWM1EN = 1;
  3805                           
  3806                           ;incstack = 0
  3807                           ; Regs used in _PWM1_Enable: []
  3808  01D0  002C               	movlb	12	; select bank12
  3809  01D1  1793               	bsf	19,7	;volatile
  3810  01D2  0008               	return
  3811  01D3                     __end_of_PWM1_Enable:	
  3812  01D3                     __ptext33:	
  3813 ;; *************** function _PWM2_Enable *****************
  3814 ;; Defined at:
  3815 ;;		line 34 in file "pwm.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;		None
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;		None
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		None
  3824 ;; Tracked objects:
  3825 ;;		On entry : 13/0
  3826 ;;		On exit  : 1F/C
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3829 ;;      Params:         0       0       0       0
  3830 ;;      Locals:         0       0       0       0
  3831 ;;      Temps:          0       0       0       0
  3832 ;;      Totals:         0       0       0       0
  3833 ;;Total ram usage:        0 bytes
  3834 ;; Hardware stack levels used:    1
  3835 ;; Hardware stack levels required when called:    3
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_manualMode
  3840 ;;		_AutoMode
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844                           
  3845                           ;psect for function _PWM2_Enable
  3846  01D3                     _PWM2_Enable:	
  3847                           
  3848                           ;pwm.c: 36: PWM2CONbits.PWM2EN = 1;
  3849                           
  3850                           ;incstack = 0
  3851                           ; Regs used in _PWM2_Enable: []
  3852  01D3  002C               	movlb	12	; select bank12
  3853  01D4  1796               	bsf	22,7	;volatile
  3854  01D5  0008               	return
  3855  01D6                     __end_of_PWM2_Enable:	
  3856  01D6                     __ptext24:	
  3857 ;; *************** function _LedParaInit *****************
  3858 ;; Defined at:
  3859 ;;		line 181 in file "led.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;  i               1    7[BANK0 ] unsigned char 
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : 1F/7
  3870 ;;		On exit  : 1F/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3873 ;;      Params:         0       0       0       0
  3874 ;;      Locals:         0       1       0       0
  3875 ;;      Temps:          0       0       0       0
  3876 ;;      Totals:         0       1       0       0
  3877 ;;Total ram usage:        1 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    5
  3880 ;; This function calls:
  3881 ;;		_I2C_ReadBuffer
  3882 ;; This function is called by:
  3883 ;;		_main
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           
  3888                           ;psect for function _LedParaInit
  3889  01D6                     _LedParaInit:	
  3890                           
  3891                           ;led.c: 183: unsigned char i;
  3892                           ;led.c: 185: I2C_ReadBuffer(0x20, (unsigned char *) &gLedPara, sizeof (gLedPara));
  3893                           
  3894                           ;incstack = 0
  3895                           ; Regs used in _LedParaInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3896  01D6  3041               	movlw	(low (_gLedPara| 0))& (0+255)
  3897  01D7  0020               	movlb	0	; select bank0
  3898  01D8  00CC               	movwf	I2C_ReadBuffer@pbuf
  3899  01D9  300B               	movlw	11
  3900  01DA  00CD               	movwf	I2C_ReadBuffer@len
  3901  01DB  3020               	movlw	32
  3902  01DC  2253  3180         	fcall	_I2C_ReadBuffer
  3903                           
  3904                           ;led.c: 187: for (i = 0; i < 2; i++)
  3905  01DE  0020               	movlb	0	; select bank0
  3906  01DF  01D3               	clrf	LedParaInit@i
  3907  01E0                     l2420:	
  3908                           
  3909                           ;led.c: 188: {
  3910                           ;led.c: 189: if (gLedPara.bright[i] > 100)
  3911  01E0  0853               	movf	LedParaInit@i,w
  3912  01E1  3E42               	addlw	(low ((_gLedPara| 0+1)))& (0+255)
  3913                           
  3914                           ;led.c: 190: {
  3915                           ;led.c: 191: gLedPara.bright[i] = 100;
  3916  01E2  23E6  3180         	fcall	PL24	;call to abstracted procedure
  3917  01E4  1C03               	skipc
  3918  01E5  29E9               	goto	L3
  3919  01E6  3E42               	addlw	(low ((_gLedPara| 0+1)))& (0+255)
  3920                           
  3921                           ;led.c: 192: }
  3922                           ;led.c: 193: if (gLedPara.dayBright[i] > 100)
  3923  01E7  23F8  3180         	fcall	PL30	;call to abstracted procedure
  3924  01E9                     L3:	
  3925  01E9  3E46               	addlw	(low ((_gLedPara| 0+5)))& (0+255)
  3926                           
  3927                           ;led.c: 194: {
  3928                           ;led.c: 195: gLedPara.dayBright[i] = 100;
  3929  01EA  23E6  3180         	fcall	PL24	;call to abstracted procedure
  3930  01EC  1C03               	skipc
  3931  01ED  29F1               	goto	L4
  3932  01EE  3E46               	addlw	(low ((_gLedPara| 0+5)))& (0+255)
  3933                           
  3934                           ;led.c: 196: }
  3935                           ;led.c: 197: if (gLedPara.nightBright[i] > 100)
  3936  01EF  23F8  3180         	fcall	PL30	;call to abstracted procedure
  3937  01F1                     L4:	
  3938  01F1  3E4A               	addlw	(low ((_gLedPara| 0+9)))& (0+255)
  3939  01F2  0086               	movwf	6
  3940  01F3  3065               	movlw	101
  3941  01F4  0187               	clrf	7
  3942  01F5  0201               	subwf	1,w
  3943  01F6  1C03               	skipc
  3944  01F7  29FD               	goto	l2428
  3945                           
  3946                           ;led.c: 198: {
  3947                           ;led.c: 199: gLedPara.nightBright[i] = 100;
  3948  01F8  0853               	movf	LedParaInit@i,w
  3949  01F9  3E4A               	addlw	(low ((_gLedPara| 0+9)))& (0+255)
  3950  01FA  0086               	movwf	6
  3951  01FB  3064               	movlw	100
  3952  01FC  0081               	movwf	1
  3953  01FD                     l2428:	
  3954  01FD  3002               	movlw	2
  3955  01FE  0AD3               	incf	LedParaInit@i,f
  3956  01FF  0253               	subwf	LedParaInit@i,w
  3957  0200  1C03               	skipc
  3958  0201  29E0               	goto	l2420
  3959                           
  3960                           ;led.c: 200: }
  3961                           ;led.c: 201: }
  3962                           ;led.c: 202: if(gLedPara.sunriseHour > 23)
  3963  0202  3018               	movlw	24
  3964  0203  0244               	subwf	_gLedPara+3,w
  3965  0204  1803               	btfsc	3,0
  3966                           
  3967                           ;led.c: 203: {
  3968                           ;led.c: 204: gLedPara.sunriseHour = 0;
  3969  0205  01C4               	clrf	_gLedPara+3
  3970                           
  3971                           ;led.c: 205: }
  3972                           ;led.c: 206: if(gLedPara.sunriseMin > 59)
  3973  0206  303C               	movlw	60
  3974  0207  0245               	subwf	_gLedPara+4,w
  3975  0208  1803               	btfsc	3,0
  3976                           
  3977                           ;led.c: 207: {
  3978                           ;led.c: 208: gLedPara.sunriseMin = 0;
  3979  0209  01C5               	clrf	_gLedPara+4
  3980                           
  3981                           ;led.c: 209: }
  3982                           ;led.c: 210: if(gLedPara.sunsetHour > 23)
  3983  020A  3018               	movlw	24
  3984  020B  0248               	subwf	_gLedPara+7,w
  3985  020C  1803               	btfsc	3,0
  3986                           
  3987                           ;led.c: 211: {
  3988                           ;led.c: 212: gLedPara.sunsetHour = 0;
  3989  020D  01C8               	clrf	_gLedPara+7
  3990                           
  3991                           ;led.c: 213: }
  3992                           ;led.c: 214: if(gLedPara.sunsetMin > 59)
  3993  020E  303C               	movlw	60
  3994  020F  0249               	subwf	_gLedPara+8,w
  3995  0210  1803               	btfsc	3,0
  3996                           
  3997                           ;led.c: 215: {
  3998                           ;led.c: 216: gLedPara.sunsetMin = 0;
  3999  0211  01C9               	clrf	_gLedPara+8
  4000  0212  0008               	return
  4001  0213                     __end_of_LedParaInit:	
  4002  0213                     __ptext23:	
  4003 ;; *************** function _I2C_WriteBuffer *****************
  4004 ;; Defined at:
  4005 ;;		line 66 in file "i2c.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;  suba            1    wreg     unsigned char 
  4008 ;;  pbuf            1    0[BANK0 ] PTR unsigned char 
  4009 ;;		 -> gLedPara(11), 
  4010 ;;  len             1    1[BANK0 ] unsigned char 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  suba            1    3[BANK0 ] unsigned char 
  4013 ;;  i               1    5[BANK0 ] unsigned char 
  4014 ;;  n               1    4[BANK0 ] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 1F/0
  4021 ;;		On exit  : 1B/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4024 ;;      Params:         0       2       0       0
  4025 ;;      Locals:         0       3       0       0
  4026 ;;      Temps:          0       1       0       0
  4027 ;;      Totals:         0       6       0       0
  4028 ;;Total ram usage:        6 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:    4
  4031 ;; This function calls:
  4032 ;;		_CheckSSPIF
  4033 ;; This function is called by:
  4034 ;;		_SaveLedPara
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           
  4039                           ;psect for function _I2C_WriteBuffer
  4040  0213                     _I2C_WriteBuffer:	
  4041                           
  4042                           ;incstack = 0
  4043                           ; Regs used in _I2C_WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4044                           ;I2C_WriteBuffer@suba stored from wreg
  4045  0213  00CF               	movwf	I2C_WriteBuffer@suba
  4046                           
  4047                           ;i2c.c: 69: unsigned char n = 0;
  4048  0214  01D0               	clrf	I2C_WriteBuffer@n
  4049  0215                     L2:	
  4050                           
  4051                           ;i2c.c: 71: SSP1CON2bits.SEN = 1;
  4052  0215  0024               	movlb	4	; select bank4
  4053  0216  1416               	bsf	22,0	;volatile
  4054                           
  4055                           ;i2c.c: 72: CheckSSPIF();
  4056  0217  22B6  3180         	fcall	_CheckSSPIF
  4057                           
  4058                           ;i2c.c: 86: SSP1BUF = 0xA0;
  4059  0219  30A0               	movlw	160
  4060  021A  0024               	movlb	4	; select bank4
  4061  021B  0091               	movwf	17	;volatile
  4062                           
  4063                           ;i2c.c: 87: CheckSSPIF();
  4064  021C  22B6  3180         	fcall	_CheckSSPIF
  4065  021E  0024               	movlb	4	; select bank4
  4066  021F  1F16               	btfss	22,6	;volatile
  4067  0220  2A31               	goto	l2136
  4068                           
  4069                           ;i2c.c: 77: {
  4070                           ;i2c.c: 78: n ++;
  4071                           
  4072                           ;i2c.c: 76: while(SSP1CON2bits.ACKSTAT)
  4073                           
  4074                           ;i2c.c: 75: CheckSSPIF();
  4075                           
  4076                           ;i2c.c: 74: SSP1BUF = 0xA0;
  4077  0221  0020               	movlb	0	; select bank0
  4078  0222  300B               	movlw	11
  4079  0223  0AD0               	incf	I2C_WriteBuffer@n,f
  4080                           
  4081                           ;i2c.c: 79: if(n > 10)
  4082  0224  0250               	subwf	I2C_WriteBuffer@n,w
  4083  0225  1803               	btfsc	3,0
  4084  0226  0008               	return
  4085                           
  4086                           ;i2c.c: 82: }
  4087                           ;i2c.c: 83: _delay((unsigned long)((1)*(16000000/4000.0)));
  4088  0227  3006               	movlw	6
  4089  0228  0020               	movlb	0	; select bank0
  4090  0229  00CE               	movwf	??_I2C_WriteBuffer
  4091  022A  3030               	movlw	48
  4092  022B                     u1937:	
  4093  022B  0B89               	decfsz	9,f
  4094  022C  2A2B               	goto	u1937
  4095  022D  0BCE               	decfsz	??_I2C_WriteBuffer,f
  4096  022E  2A2B               	goto	u1937
  4097  022F  0000               	nop
  4098  0230  2A15               	goto	L2
  4099  0231                     l2136:	
  4100                           ;i2c.c: 85: CheckSSPIF();
  4101                           
  4102                           ;i2c.c: 84: SSP1CON2bits.SEN = 1;
  4103                           
  4104                           
  4105                           ;i2c.c: 88: }
  4106                           ;i2c.c: 90: SSP1BUF = suba;
  4107  0231  0020               	movlb	0	; select bank0
  4108  0232  084F               	movf	I2C_WriteBuffer@suba,w
  4109  0233  0024               	movlb	4	; select bank4
  4110  0234  0091               	movwf	17	;volatile
  4111                           
  4112                           ;i2c.c: 91: CheckSSPIF();
  4113  0235  22B6  3180         	fcall	_CheckSSPIF
  4114                           
  4115                           ;i2c.c: 92: if(SSP1CON2bits.ACKSTAT)
  4116  0237  0024               	movlb	4	; select bank4
  4117  0238  1B16               	btfsc	22,6	;volatile
  4118  0239  0008               	return
  4119                           
  4120                           ;i2c.c: 95: }
  4121                           ;i2c.c: 97: for(i = 0;i < len;i ++)
  4122  023A  0020               	movlb	0	; select bank0
  4123  023B  01D1               	clrf	I2C_WriteBuffer@i
  4124  023C                     l2156:	
  4125  023C  084D               	movf	I2C_WriteBuffer@len,w
  4126  023D  0251               	subwf	I2C_WriteBuffer@i,w
  4127  023E  1803               	btfsc	3,0
  4128  023F  2A50               	goto	l212
  4129                           
  4130                           ;i2c.c: 98: {
  4131                           ;i2c.c: 99: SSP1BUF = *(pbuf + i);
  4132  0240  0851               	movf	I2C_WriteBuffer@i,w
  4133  0241  074C               	addwf	I2C_WriteBuffer@pbuf,w
  4134  0242  00CE               	movwf	??_I2C_WriteBuffer
  4135  0243  0086               	movwf	6
  4136  0244  0187               	clrf	7
  4137  0245  0801               	movf	1,w
  4138  0246  0024               	movlb	4	; select bank4
  4139  0247  0091               	movwf	17	;volatile
  4140                           
  4141                           ;i2c.c: 100: CheckSSPIF();
  4142  0248  22B6  3180         	fcall	_CheckSSPIF
  4143                           
  4144                           ;i2c.c: 101: if(SSP1CON2bits.ACKSTAT)
  4145  024A  0024               	movlb	4	; select bank4
  4146  024B  1B16               	btfsc	22,6	;volatile
  4147  024C  0008               	return
  4148  024D  0020               	movlb	0	; select bank0
  4149  024E  0AD1               	incf	I2C_WriteBuffer@i,f
  4150  024F  2A3C               	goto	l2156
  4151  0250                     l212:	
  4152                           
  4153                           ;i2c.c: 104: }
  4154                           ;i2c.c: 105: }
  4155                           ;i2c.c: 107: SSP1CON2bits.PEN = 1;
  4156  0250  0024               	movlb	4	; select bank4
  4157  0251  1516               	bsf	22,2	;volatile
  4158                           
  4159                           ;i2c.c: 108: CheckSSPIF();
  4160  0252  2AB6               	ljmp	l188
  4161  0253                     __end_of_I2C_WriteBuffer:	
  4162  0253                     __ptext25:	
  4163 ;; *************** function _I2C_ReadBuffer *****************
  4164 ;; Defined at:
  4165 ;;		line 162 in file "i2c.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;  suba            1    wreg     unsigned char 
  4168 ;;  pbuf            1    0[BANK0 ] PTR unsigned char 
  4169 ;;		 -> gLedPara(11), 
  4170 ;;  len             1    1[BANK0 ] unsigned char 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  suba            1    4[BANK0 ] unsigned char 
  4173 ;;  i               1    6[BANK0 ] unsigned char 
  4174 ;;  n               1    5[BANK0 ] unsigned char 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  1    wreg      void 
  4177 ;; Registers used:
  4178 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4179 ;; Tracked objects:
  4180 ;;		On entry : 1F/0
  4181 ;;		On exit  : 1B/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4184 ;;      Params:         0       2       0       0
  4185 ;;      Locals:         0       3       0       0
  4186 ;;      Temps:          0       2       0       0
  4187 ;;      Totals:         0       7       0       0
  4188 ;;Total ram usage:        7 bytes
  4189 ;; Hardware stack levels used:    1
  4190 ;; Hardware stack levels required when called:    4
  4191 ;; This function calls:
  4192 ;;		_CheckSSPIF
  4193 ;; This function is called by:
  4194 ;;		_LedParaInit
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           
  4199                           ;psect for function _I2C_ReadBuffer
  4200  0253                     _I2C_ReadBuffer:	
  4201                           
  4202                           ;incstack = 0
  4203                           ; Regs used in _I2C_ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4204                           ;I2C_ReadBuffer@suba stored from wreg
  4205  0253  00D0               	movwf	I2C_ReadBuffer@suba
  4206                           
  4207                           ;i2c.c: 165: unsigned char n = 0;
  4208  0254  01D1               	clrf	I2C_ReadBuffer@n
  4209  0255                     L5:	
  4210                           
  4211                           ;i2c.c: 167: SSP1CON2bits.SEN = 1;
  4212  0255  0024               	movlb	4	; select bank4
  4213  0256  1416               	bsf	22,0	;volatile
  4214                           
  4215                           ;i2c.c: 168: CheckSSPIF();
  4216  0257  22B6  3180         	fcall	_CheckSSPIF
  4217                           
  4218                           ;i2c.c: 182: SSP1BUF = 0xA0;
  4219  0259  30A0               	movlw	160
  4220  025A  0024               	movlb	4	; select bank4
  4221  025B  0091               	movwf	17	;volatile
  4222                           
  4223                           ;i2c.c: 183: CheckSSPIF();
  4224  025C  22B6  3180         	fcall	_CheckSSPIF
  4225  025E  0024               	movlb	4	; select bank4
  4226  025F  1F16               	btfss	22,6	;volatile
  4227  0260  2A71               	goto	l2278
  4228                           
  4229                           ;i2c.c: 173: {
  4230                           ;i2c.c: 174: n ++;
  4231                           
  4232                           ;i2c.c: 172: while(SSP1CON2bits.ACKSTAT)
  4233                           
  4234                           ;i2c.c: 171: CheckSSPIF();
  4235                           
  4236                           ;i2c.c: 170: SSP1BUF = 0xA0;
  4237  0261  0020               	movlb	0	; select bank0
  4238  0262  300B               	movlw	11
  4239  0263  0AD1               	incf	I2C_ReadBuffer@n,f
  4240                           
  4241                           ;i2c.c: 175: if(n > 10)
  4242  0264  0251               	subwf	I2C_ReadBuffer@n,w
  4243  0265  1803               	btfsc	3,0
  4244  0266  0008               	return
  4245                           
  4246                           ;i2c.c: 178: }
  4247                           ;i2c.c: 179: _delay((unsigned long)((1)*(16000000/4000.0)));
  4248  0267  3006               	movlw	6
  4249  0268  0020               	movlb	0	; select bank0
  4250  0269  00CE               	movwf	??_I2C_ReadBuffer
  4251  026A  3030               	movlw	48
  4252  026B                     u1947:	
  4253  026B  0B89               	decfsz	9,f
  4254  026C  2A6B               	goto	u1947
  4255  026D  0BCE               	decfsz	??_I2C_ReadBuffer,f
  4256  026E  2A6B               	goto	u1947
  4257  026F  0000               	nop
  4258  0270  2A55               	goto	L5
  4259  0271                     l2278:	
  4260                           ;i2c.c: 181: CheckSSPIF();
  4261                           
  4262                           ;i2c.c: 180: SSP1CON2bits.SEN = 1;
  4263                           
  4264                           
  4265                           ;i2c.c: 184: }
  4266                           ;i2c.c: 186: SSP1BUF = suba;
  4267  0271  0020               	movlb	0	; select bank0
  4268  0272  0850               	movf	I2C_ReadBuffer@suba,w
  4269  0273  0024               	movlb	4	; select bank4
  4270  0274  0091               	movwf	17	;volatile
  4271                           
  4272                           ;i2c.c: 187: CheckSSPIF();
  4273  0275  22B6  3180         	fcall	_CheckSSPIF
  4274                           
  4275                           ;i2c.c: 188: if(SSP1CON2bits.ACKSTAT)
  4276  0277  0024               	movlb	4	; select bank4
  4277  0278  1B16               	btfsc	22,6	;volatile
  4278  0279  0008               	return
  4279                           
  4280                           ;i2c.c: 191: }
  4281                           ;i2c.c: 193: SSP1CON2bits.RSEN = 1;
  4282  027A  1496               	bsf	22,1	;volatile
  4283                           
  4284                           ;i2c.c: 194: CheckSSPIF();
  4285  027B  22B6  3180         	fcall	_CheckSSPIF
  4286                           
  4287                           ;i2c.c: 195: SSP1BUF = 0xA0 + 1;
  4288  027D  30A1               	movlw	161
  4289  027E  0024               	movlb	4	; select bank4
  4290  027F  0091               	movwf	17	;volatile
  4291                           
  4292                           ;i2c.c: 196: CheckSSPIF();
  4293  0280  22B6  3180         	fcall	_CheckSSPIF
  4294                           
  4295                           ;i2c.c: 197: if(SSP1CON2bits.ACKSTAT)
  4296  0282  0024               	movlb	4	; select bank4
  4297  0283  1B16               	btfsc	22,6	;volatile
  4298  0284  0008               	return
  4299                           
  4300                           ;i2c.c: 200: }
  4301                           ;i2c.c: 202: for(i = 0;i < len - 1;i ++)
  4302  0285  0020               	movlb	0	; select bank0
  4303  0286  01D2               	clrf	I2C_ReadBuffer@i
  4304  0287                     l2310:	
  4305  0287  084D               	movf	I2C_ReadBuffer@len,w
  4306  0288  3EFF               	addlw	255
  4307  0289  00CE               	movwf	??_I2C_ReadBuffer
  4308  028A  30FF               	movlw	255
  4309  028B  1803               	skipnc
  4310  028C  3000               	movlw	0
  4311  028D  00CF               	movwf	??_I2C_ReadBuffer+1
  4312  028E  3A80               	xorlw	128
  4313  028F  3C80               	sublw	128
  4314  0290  1D03               	skipz
  4315  0291  2A94               	goto	u1535
  4316  0292  084E               	movf	??_I2C_ReadBuffer,w
  4317  0293  0252               	subwf	I2C_ReadBuffer@i,w
  4318  0294                     u1535:	
  4319  0294  1803               	btfsc	3,0
  4320  0295  2AA5               	goto	l233
  4321                           
  4322                           ;i2c.c: 203: {
  4323                           ;i2c.c: 204: SSP1CON2bits.RCEN = 1;
  4324  0296  0024               	movlb	4	; select bank4
  4325  0297  1596               	bsf	22,3	;volatile
  4326                           
  4327                           ;i2c.c: 205: CheckSSPIF();
  4328  0298  22B6  3180         	fcall	_CheckSSPIF
  4329                           
  4330                           ;i2c.c: 206: *(pbuf + i) = SSP1BUF;
  4331  029A  0852               	movf	I2C_ReadBuffer@i,w
  4332  029B  074C               	addwf	I2C_ReadBuffer@pbuf,w
  4333  029C  00CE               	movwf	??_I2C_ReadBuffer
  4334  029D  23EC  3180         	fcall	PL26	;call to abstracted procedure
  4335                           
  4336                           ;i2c.c: 207: SSP1CON2bits.ACKDT = 0;
  4337  029F  1296               	bcf	22,5	;volatile
  4338                           
  4339                           ;i2c.c: 208: SSP1CON2bits.ACKEN = 1;
  4340  02A0  1616               	bsf	22,4	;volatile
  4341                           
  4342                           ;i2c.c: 209: CheckSSPIF();
  4343  02A1  22B6  3180         	fcall	_CheckSSPIF
  4344  02A3  0AD2               	incf	I2C_ReadBuffer@i,f
  4345  02A4  2A87               	goto	l2310
  4346  02A5                     l233:	
  4347                           
  4348                           ;i2c.c: 210: }
  4349                           ;i2c.c: 211: SSP1CON2bits.RCEN = 1;
  4350  02A5  0024               	movlb	4	; select bank4
  4351  02A6  1596               	bsf	22,3	;volatile
  4352                           
  4353                           ;i2c.c: 212: CheckSSPIF();
  4354  02A7  22B6  3180         	fcall	_CheckSSPIF
  4355                           
  4356                           ;i2c.c: 213: *(pbuf + len - 1) = SSP1BUF;
  4357  02A9  084D               	movf	I2C_ReadBuffer@len,w
  4358  02AA  074C               	addwf	I2C_ReadBuffer@pbuf,w
  4359  02AB  00CE               	movwf	??_I2C_ReadBuffer
  4360  02AC  3EFF               	addlw	-1
  4361  02AD  23EC  3180         	fcall	PL26	;call to abstracted procedure
  4362                           
  4363                           ;i2c.c: 214: SSP1CON2bits.ACKDT = 1;
  4364  02AF  1696               	bsf	22,5	;volatile
  4365                           
  4366                           ;i2c.c: 215: SSP1CON2bits.ACKEN = 1;
  4367  02B0  1616               	bsf	22,4	;volatile
  4368                           
  4369                           ;i2c.c: 216: CheckSSPIF();
  4370  02B1  22B6  3180         	fcall	_CheckSSPIF
  4371                           
  4372                           ;i2c.c: 218: SSP1CON2bits.PEN = 1;
  4373  02B3  0024               	movlb	4	; select bank4
  4374  02B4  1516               	bsf	22,2	;volatile
  4375                           
  4376                           ;i2c.c: 219: CheckSSPIF();
  4377  02B5  2AB6               	ljmp	l188
  4378  02B6                     __end_of_I2C_ReadBuffer:	
  4379  02B6                     __ptext26:	
  4380 ;; *************** function _CheckSSPIF *****************
  4381 ;; Defined at:
  4382 ;;		line 20 in file "i2c.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;		None
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;		None
  4387 ;; Return value:  Size  Location     Type
  4388 ;;                  1    wreg      void 
  4389 ;; Registers used:
  4390 ;;		None
  4391 ;; Tracked objects:
  4392 ;;		On entry : 1F/4
  4393 ;;		On exit  : 1F/0
  4394 ;;		Unchanged: 0/0
  4395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4396 ;;      Params:         0       0       0       0
  4397 ;;      Locals:         0       0       0       0
  4398 ;;      Temps:          0       0       0       0
  4399 ;;      Totals:         0       0       0       0
  4400 ;;Total ram usage:        0 bytes
  4401 ;; Hardware stack levels used:    1
  4402 ;; Hardware stack levels required when called:    3
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_I2C_WriteBuffer
  4407 ;;		_I2C_ReadBuffer
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           
  4412                           ;psect for function _CheckSSPIF
  4413  02B6                     _CheckSSPIF:	
  4414  02B6                     l188:	
  4415                           ;i2c.c: 22: while(!SSP1IF);
  4416                           
  4417                           ;incstack = 0
  4418                           ; Regs used in _CheckSSPIF: []
  4419                           
  4420  02B6  0020               	movlb	0	; select bank0
  4421  02B7  1D91               	btfss	17,3	;volatile
  4422  02B8  2AB6               	goto	l188
  4423                           
  4424                           ;i2c.c: 23: SSP1IF = 0;
  4425  02B9  1191               	bcf	17,3	;volatile
  4426  02BA  0008               	return
  4427  02BB                     __end_of_CheckSSPIF:	
  4428  02BB                     __ptext21:	
  4429 ;; *************** function _LedUpdate *****************
  4430 ;; Defined at:
  4431 ;;		line 41 in file "led.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;		None
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  i               1   12[BANK0 ] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 1F/0
  4442 ;;		On exit  : 1F/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4445 ;;      Params:         0       0       0       0
  4446 ;;      Locals:         0       1       0       0
  4447 ;;      Temps:          0       0       0       0
  4448 ;;      Totals:         0       1       0       0
  4449 ;;Total ram usage:        1 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    6
  4452 ;; This function calls:
  4453 ;;		_SaveLedPara
  4454 ;; This function is called by:
  4455 ;;		_main
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           
  4460                           ;psect for function _LedUpdate
  4461  02BB                     _LedUpdate:	
  4462                           
  4463                           ;led.c: 43: unsigned char i;
  4464                           ;led.c: 45: gLedPara.fAuto = IR_ReveiveDataStructure.fModeAuto;
  4465                           
  4466                           ;incstack = 0
  4467                           ; Regs used in _LedUpdate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4468  02BB  1041               	bcf	_gLedPara,0
  4469  02BC  1BB3               	btfsc	_IR_ReveiveDataStructure,7
  4470  02BD  1441               	bsf	_gLedPara,0
  4471                           
  4472                           ;led.c: 46: gLedPara.fWhiteOn = IR_ReveiveDataStructure.fWhiteOnOff;
  4473  02BE  0020               	movlb	0	; select bank0
  4474  02BF  10C1               	bcf	_gLedPara,1
  4475  02C0  1AB3               	btfsc	_IR_ReveiveDataStructure,5
  4476  02C1  14C1               	bsf	_gLedPara,1
  4477                           
  4478                           ;led.c: 47: gLedPara.fBlueOn = IR_ReveiveDataStructure.fBlueOnOff;
  4479  02C2  0020               	movlb	0	; select bank0
  4480  02C3  1141               	bcf	_gLedPara,2
  4481  02C4  1B33               	btfsc	_IR_ReveiveDataStructure,6
  4482  02C5  1541               	bsf	_gLedPara,2
  4483                           
  4484                           ;led.c: 48: gLedPara.sunriseHour = IR_ReveiveDataStructure.RiseTimeHour;
  4485  02C6  0020               	movlb	0	; select bank0
  4486  02C7  0836               	movf	_IR_ReveiveDataStructure+3,w
  4487  02C8  00C4               	movwf	_gLedPara+3
  4488                           
  4489                           ;led.c: 49: gLedPara.sunriseMin = IR_ReveiveDataStructure.RiseTimeMinute;
  4490  02C9  0837               	movf	_IR_ReveiveDataStructure+4,w
  4491  02CA  00C5               	movwf	_gLedPara+4
  4492                           
  4493                           ;led.c: 50: gLedPara.sunsetHour = IR_ReveiveDataStructure.SunsetTimeHour;
  4494  02CB  083A               	movf	_IR_ReveiveDataStructure+7,w
  4495  02CC  00C8               	movwf	_gLedPara+7
  4496                           
  4497                           ;led.c: 51: gLedPara.sunsetMin = IR_ReveiveDataStructure.SunsetTimeMinute;
  4498  02CD  083B               	movf	_IR_ReveiveDataStructure+8,w
  4499  02CE  00C9               	movwf	_gLedPara+8
  4500                           
  4501                           ;led.c: 53: for(i = 0;i < 2;i++)
  4502  02CF  01D8               	clrf	LedUpdate@i
  4503  02D0                     l2464:	
  4504                           
  4505                           ;led.c: 54: {
  4506                           ;led.c: 55: gLedPara.bright[i] = IR_ReveiveDataStructure.ManualBrightPercen[i];
  4507  02D0  0858               	movf	LedUpdate@i,w
  4508  02D1  3E42               	addlw	(low ((_gLedPara| 0+1)))& (0+255)
  4509  02D2  0086               	movwf	6
  4510  02D3  0187               	clrf	7
  4511  02D4  0858               	movf	LedUpdate@i,w
  4512  02D5  3E3E               	addlw	(low ((_IR_ReveiveDataStructure| 0+11)))& (0+255)
  4513  02D6  0084               	movwf	4
  4514  02D7  0185               	clrf	5
  4515  02D8  0800               	movf	0,w
  4516  02D9  0081               	movwf	1
  4517                           
  4518                           ;led.c: 56: gLedPara.dayBright[i] = IR_ReveiveDataStructure.RiseBrightPercen[i];
  4519  02DA  0858               	movf	LedUpdate@i,w
  4520  02DB  3E46               	addlw	(low ((_gLedPara| 0+5)))& (0+255)
  4521  02DC  0086               	movwf	6
  4522  02DD  0858               	movf	LedUpdate@i,w
  4523  02DE  3E38               	addlw	(low ((_IR_ReveiveDataStructure| 0+5)))& (0+255)
  4524  02DF  0084               	movwf	4
  4525  02E0  0800               	movf	0,w
  4526  02E1  0081               	movwf	1
  4527                           
  4528                           ;led.c: 57: gLedPara.nightBright[i] = IR_ReveiveDataStructure.SunsetBrightPercen[i];
  4529  02E2  0858               	movf	LedUpdate@i,w
  4530  02E3  3E4A               	addlw	(low ((_gLedPara| 0+9)))& (0+255)
  4531  02E4  0086               	movwf	6
  4532  02E5  0858               	movf	LedUpdate@i,w
  4533  02E6  3E3C               	addlw	(low ((_IR_ReveiveDataStructure| 0+9)))& (0+255)
  4534  02E7  0084               	movwf	4
  4535  02E8  0800               	movf	0,w
  4536  02E9  0081               	movwf	1
  4537  02EA  3002               	movlw	2
  4538  02EB  0AD8               	incf	LedUpdate@i,f
  4539  02EC  0258               	subwf	LedUpdate@i,w
  4540  02ED  1C03               	skipc
  4541  02EE  2AD0               	goto	l2464
  4542                           
  4543                           ;led.c: 58: }
  4544                           ;led.c: 59: SaveLedPara();
  4545  02EF  282A               	ljmp	l2334
  4546  02F0                     __end_of_LedUpdate:	
  4547  02F0                     __ptext20:	
  4548 ;; *************** function _ResetState *****************
  4549 ;; Defined at:
  4550 ;;		line 31 in file "IR_Decode.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;		None
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;		None
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  1    wreg      void 
  4557 ;; Registers used:
  4558 ;;		status,2
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4564 ;;      Params:         0       0       0       0
  4565 ;;      Locals:         0       0       0       0
  4566 ;;      Temps:          0       0       0       0
  4567 ;;      Totals:         0       0       0       0
  4568 ;;Total ram usage:        0 bytes
  4569 ;; Hardware stack levels used:    1
  4570 ;; Hardware stack levels required when called:    3
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_main
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           
  4579                           ;psect for function _ResetState
  4580  02F0                     _ResetState:	
  4581                           
  4582                           ;IR_Decode.c: 33: state = 0;
  4583                           
  4584                           ;incstack = 0
  4585                           ; Regs used in _ResetState: [status,2]
  4586  02F0  01F5               	clrf	_state
  4587                           
  4588                           ;IR_Decode.c: 34: gRunPara.HighCount = 0;
  4589  02F1  01F0               	clrf	_gRunPara
  4590                           
  4591                           ;IR_Decode.c: 35: gRunPara.LowCount = 0;
  4592  02F2  01F1               	clrf	_gRunPara+1
  4593                           
  4594                           ;IR_Decode.c: 36: gRunPara.nBit = 0;
  4595  02F3  01F2               	clrf	_gRunPara+2
  4596                           
  4597                           ;IR_Decode.c: 37: rcv = 0;
  4598  02F4  01F4               	clrf	_rcv
  4599                           
  4600                           ;IR_Decode.c: 38: index = 0;
  4601  02F5  01F3               	clrf	_index
  4602  02F6  0008               	return
  4603  02F7                     __end_of_ResetState:	
  4604  02F7                     __ptext8:	
  4605 ;; *************** function _SYSTEM_Initialize *****************
  4606 ;; Defined at:
  4607 ;;		line 11 in file "command.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;		None
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;		None
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  1    wreg      void 
  4614 ;; Registers used:
  4615 ;;		wreg, status,2, status,0, pclath, cstack
  4616 ;; Tracked objects:
  4617 ;;		On entry : B1F/0
  4618 ;;		On exit  : 1F/7
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4621 ;;      Params:         0       0       0       0
  4622 ;;      Locals:         0       0       0       0
  4623 ;;      Temps:          0       0       0       0
  4624 ;;      Totals:         0       0       0       0
  4625 ;;Total ram usage:        0 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:    4
  4628 ;; This function calls:
  4629 ;;		_I2C_Initialize
  4630 ;;		_InterruptOnChange_Initialize
  4631 ;;		_OSCCON_Initialize
  4632 ;;		_PIN_Initialize
  4633 ;;		_PWM1_Initialize
  4634 ;;		_PWM2_Initialize
  4635 ;;		_PWM3_Initialize
  4636 ;;		_PWM4_Initialize
  4637 ;;		_TMR0_Initialize
  4638 ;;		_TMR1_Initialize
  4639 ;;		_TMR2_Initialize
  4640 ;; This function is called by:
  4641 ;;		_main
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           
  4646                           ;psect for function _SYSTEM_Initialize
  4647  02F7                     _SYSTEM_Initialize:	
  4648                           
  4649                           ;command.c: 13: OSCCON_Initialize();
  4650                           
  4651                           ;incstack = 0
  4652                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4653  02F7  230C  3180         	fcall	_OSCCON_Initialize
  4654                           
  4655                           ;command.c: 14: PIN_Initialize();
  4656  02F9  2314  3180         	fcall	_PIN_Initialize
  4657                           
  4658                           ;command.c: 15: PWM1_Initialize();
  4659  02FB  232B  3180         	fcall	_PWM1_Initialize
  4660                           
  4661                           ;command.c: 16: PWM2_Initialize();
  4662  02FD  2332  3180         	fcall	_PWM2_Initialize
  4663                           
  4664                           ;command.c: 17: PWM3_Initialize();
  4665  02FF  2338  3180         	fcall	_PWM3_Initialize
  4666                           
  4667                           ;command.c: 18: PWM4_Initialize();
  4668  0301  233E  3180         	fcall	_PWM4_Initialize
  4669                           
  4670                           ;command.c: 19: TMR0_Initialize();
  4671  0303  2344  3180         	fcall	_TMR0_Initialize
  4672                           
  4673                           ;command.c: 20: TMR1_Initialize();
  4674  0305  2348  3180         	fcall	_TMR1_Initialize
  4675                           
  4676                           ;command.c: 21: TMR2_Initialize();
  4677  0307  2357  3180         	fcall	_TMR2_Initialize
  4678                           
  4679                           ;command.c: 22: I2C_Initialize();
  4680  0309  23FD  3180         	fcall	_I2C_Initialize
  4681                           
  4682                           ;command.c: 23: InterruptOnChange_Initialize();
  4683  030B  2B92               	ljmp	l2326
  4684  030C                     __end_of_SYSTEM_Initialize:	
  4685  030C                     __ptext17:	
  4686 ;; *************** function _OSCCON_Initialize *****************
  4687 ;; Defined at:
  4688 ;;		line 3 in file "osccon.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;		None
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;		None
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1    wreg      void 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2, status,0
  4697 ;; Tracked objects:
  4698 ;;		On entry : B1F/0
  4699 ;;		On exit  : B1F/1
  4700 ;;		Unchanged: B00/0
  4701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4702 ;;      Params:         0       0       0       0
  4703 ;;      Locals:         0       0       0       0
  4704 ;;      Temps:          0       0       0       0
  4705 ;;      Totals:         0       0       0       0
  4706 ;;Total ram usage:        0 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:    3
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_SYSTEM_Initialize
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           
  4717                           ;psect for function _OSCCON_Initialize
  4718  030C                     _OSCCON_Initialize:	
  4719                           
  4720                           ;osccon.c: 5: OSCCONbits.IRCF = 0x0F;
  4721                           
  4722                           ;incstack = 0
  4723                           ; Regs used in _OSCCON_Initialize: [wreg+status,2+status,0]
  4724  030C  3078               	movlw	120
  4725  030D  0021               	movlb	1	; select bank1
  4726  030E  0499               	iorwf	25,f	;volatile
  4727                           
  4728                           ;osccon.c: 6: OSCCONbits.SCS = 0x00;
  4729  030F  30FC               	movlw	-4
  4730  0310  0599               	andwf	25,f	;volatile
  4731  0311                     l253:	
  4732                           ;osccon.c: 7: while(!OSCSTATbits.HFIOFS);
  4733                           
  4734  0311  181A               	btfsc	26,0	;volatile
  4735  0312  0008               	return
  4736  0313  2B11               	goto	l253
  4737  0314                     __end_of_OSCCON_Initialize:	
  4738  0314                     __ptext16:	
  4739 ;; *************** function _PIN_Initialize *****************
  4740 ;; Defined at:
  4741 ;;		line 3 in file "pin.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		status,2
  4750 ;; Tracked objects:
  4751 ;;		On entry : B1F/1
  4752 ;;		On exit  : B1F/4
  4753 ;;		Unchanged: B00/0
  4754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4755 ;;      Params:         0       0       0       0
  4756 ;;      Locals:         0       0       0       0
  4757 ;;      Temps:          0       0       0       0
  4758 ;;      Totals:         0       0       0       0
  4759 ;;Total ram usage:        0 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    3
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_SYSTEM_Initialize
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           
  4770                           ;psect for function _PIN_Initialize
  4771  0314                     _PIN_Initialize:	
  4772                           
  4773                           ;pin.c: 6: TRISAbits.TRISA2 = 0;
  4774                           
  4775                           ;incstack = 0
  4776                           ; Regs used in _PIN_Initialize: [status,2]
  4777  0314  110C               	bcf	12,2	;volatile
  4778                           
  4779                           ;pin.c: 7: TRISAbits.TRISA4 = 1;
  4780  0315  160C               	bsf	12,4	;volatile
  4781                           
  4782                           ;pin.c: 8: TRISAbits.TRISA5 = 1;
  4783  0316  168C               	bsf	12,5	;volatile
  4784                           
  4785                           ;pin.c: 9: TRISBbits.TRISB4 = 1;
  4786  0317  160D               	bsf	13,4	;volatile
  4787                           
  4788                           ;pin.c: 10: TRISBbits.TRISB6 = 1;
  4789  0318  170D               	bsf	13,6	;volatile
  4790                           
  4791                           ;pin.c: 11: TRISBbits.TRISB7 = 1;
  4792  0319  178D               	bsf	13,7	;volatile
  4793                           
  4794                           ;pin.c: 12: TRISCbits.TRISC1 = 0;
  4795  031A  108E               	bcf	14,1	;volatile
  4796                           
  4797                           ;pin.c: 13: TRISCbits.TRISC3 = 0;
  4798  031B  118E               	bcf	14,3	;volatile
  4799                           
  4800                           ;pin.c: 14: TRISCbits.TRISC5 = 0;
  4801  031C  128E               	bcf	14,5	;volatile
  4802                           
  4803                           ;pin.c: 17: ANSELA = 0;
  4804  031D  0023               	movlb	3	; select bank3
  4805  031E  018C               	clrf	12	;volatile
  4806                           
  4807                           ;pin.c: 18: ANSELB = 0;
  4808  031F  018D               	clrf	13	;volatile
  4809                           
  4810                           ;pin.c: 19: ANSELC = 0;
  4811  0320  018E               	clrf	14	;volatile
  4812                           
  4813                           ;pin.c: 22: LATAbits.LATA2 = 0;
  4814  0321  0022               	movlb	2	; select bank2
  4815  0322  110C               	bcf	12,2	;volatile
  4816                           
  4817                           ;pin.c: 23: LATCbits.LATC1 = 0;
  4818  0323  108E               	bcf	14,1	;volatile
  4819                           
  4820                           ;pin.c: 24: LATCbits.LATC3 = 0;
  4821  0324  118E               	bcf	14,3	;volatile
  4822                           
  4823                           ;pin.c: 25: LATCbits.LATC5 = 0;
  4824  0325  128E               	bcf	14,5	;volatile
  4825                           
  4826                           ;pin.c: 28: WPUBbits.WPUB7 = 1;
  4827  0326  0024               	movlb	4	; select bank4
  4828  0327  178D               	bsf	13,7	;volatile
  4829                           
  4830                           ;pin.c: 29: WPUBbits.WPUB4 = 0;
  4831  0328  120D               	bcf	13,4	;volatile
  4832                           
  4833                           ;pin.c: 30: WPUBbits.WPUB6 = 0;
  4834  0329  130D               	bcf	13,6	;volatile
  4835  032A  0008               	return
  4836  032B                     __end_of_PIN_Initialize:	
  4837  032B                     __ptext15:	
  4838 ;; *************** function _PWM1_Initialize *****************
  4839 ;; Defined at:
  4840 ;;		line 3 in file "pwm.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;		None
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;		None
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  1    wreg      void 
  4847 ;; Registers used:
  4848 ;;		status,2
  4849 ;; Tracked objects:
  4850 ;;		On entry : B1F/4
  4851 ;;		On exit  : B1F/C
  4852 ;;		Unchanged: B00/0
  4853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4854 ;;      Params:         0       0       0       0
  4855 ;;      Locals:         0       0       0       0
  4856 ;;      Temps:          0       0       0       0
  4857 ;;      Totals:         0       0       0       0
  4858 ;;Total ram usage:        0 bytes
  4859 ;; Hardware stack levels used:    1
  4860 ;; Hardware stack levels required when called:    3
  4861 ;; This function calls:
  4862 ;;		Nothing
  4863 ;; This function is called by:
  4864 ;;		_SYSTEM_Initialize
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           
  4869                           ;psect for function _PWM1_Initialize
  4870  032B                     _PWM1_Initialize:	
  4871                           
  4872                           ;pwm.c: 5: PWM1CONbits.PWM1EN = 1;
  4873                           
  4874                           ;incstack = 0
  4875                           ; Regs used in _PWM1_Initialize: [status,2]
  4876  032B  002C               	movlb	12	; select bank12
  4877  032C  1793               	bsf	19,7	;volatile
  4878                           
  4879                           ;pwm.c: 6: PWM1CONbits.PWM1OE = 1;
  4880  032D  1713               	bsf	19,6	;volatile
  4881                           
  4882                           ;pwm.c: 7: PWM1CONbits.PWM1POL = 0;
  4883  032E  1213               	bcf	19,4	;volatile
  4884                           
  4885                           ;pwm.c: 9: PWM1DCH = 0x00;
  4886  032F  0192               	clrf	18	;volatile
  4887                           
  4888                           ;pwm.c: 10: PWM1DCL = 0x00;
  4889  0330  0191               	clrf	17	;volatile
  4890  0331  0008               	return
  4891  0332                     __end_of_PWM1_Initialize:	
  4892  0332                     __ptext14:	
  4893 ;; *************** function _PWM2_Initialize *****************
  4894 ;; Defined at:
  4895 ;;		line 25 in file "pwm.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;		None
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;		None
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1    wreg      void 
  4902 ;; Registers used:
  4903 ;;		status,2
  4904 ;; Tracked objects:
  4905 ;;		On entry : B1F/C
  4906 ;;		On exit  : B1F/C
  4907 ;;		Unchanged: B00/0
  4908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4909 ;;      Params:         0       0       0       0
  4910 ;;      Locals:         0       0       0       0
  4911 ;;      Temps:          0       0       0       0
  4912 ;;      Totals:         0       0       0       0
  4913 ;;Total ram usage:        0 bytes
  4914 ;; Hardware stack levels used:    1
  4915 ;; Hardware stack levels required when called:    3
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_SYSTEM_Initialize
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           
  4924                           ;psect for function _PWM2_Initialize
  4925  0332                     _PWM2_Initialize:	
  4926                           
  4927                           ;pwm.c: 27: PWM2CONbits.PWM2EN = 1;
  4928                           
  4929                           ;incstack = 0
  4930                           ; Regs used in _PWM2_Initialize: [status,2]
  4931  0332  1796               	bsf	22,7	;volatile
  4932                           
  4933                           ;pwm.c: 28: PWM2CONbits.PWM2OE = 1;
  4934  0333  1716               	bsf	22,6	;volatile
  4935                           
  4936                           ;pwm.c: 29: PWM2CONbits.PWM2POL = 0;
  4937  0334  1216               	bcf	22,4	;volatile
  4938                           
  4939                           ;pwm.c: 31: PWM2DCH = 0x00;
  4940  0335  0195               	clrf	21	;volatile
  4941                           
  4942                           ;pwm.c: 32: PWM2DCL = 0x00;
  4943  0336  0194               	clrf	20	;volatile
  4944  0337  0008               	return
  4945  0338                     __end_of_PWM2_Initialize:	
  4946  0338                     __ptext13:	
  4947 ;; *************** function _PWM3_Initialize *****************
  4948 ;; Defined at:
  4949 ;;		line 47 in file "pwm.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;		None
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;		None
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      void 
  4956 ;; Registers used:
  4957 ;;		status,2
  4958 ;; Tracked objects:
  4959 ;;		On entry : B1F/C
  4960 ;;		On exit  : B1F/C
  4961 ;;		Unchanged: B00/0
  4962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4963 ;;      Params:         0       0       0       0
  4964 ;;      Locals:         0       0       0       0
  4965 ;;      Temps:          0       0       0       0
  4966 ;;      Totals:         0       0       0       0
  4967 ;;Total ram usage:        0 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; Hardware stack levels required when called:    3
  4970 ;; This function calls:
  4971 ;;		Nothing
  4972 ;; This function is called by:
  4973 ;;		_SYSTEM_Initialize
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           
  4978                           ;psect for function _PWM3_Initialize
  4979  0338                     _PWM3_Initialize:	
  4980                           
  4981                           ;pwm.c: 49: PWM3CONbits.PWM3EN = 1;
  4982                           
  4983                           ;incstack = 0
  4984                           ; Regs used in _PWM3_Initialize: [status,2]
  4985  0338  1799               	bsf	25,7	;volatile
  4986                           
  4987                           ;pwm.c: 50: PWM3CONbits.PWM3OE = 1;
  4988  0339  1719               	bsf	25,6	;volatile
  4989                           
  4990                           ;pwm.c: 51: PWM3CONbits.PWM3POL = 0;
  4991  033A  1219               	bcf	25,4	;volatile
  4992                           
  4993                           ;pwm.c: 53: PWM3DCH = 0x00;
  4994  033B  0198               	clrf	24	;volatile
  4995                           
  4996                           ;pwm.c: 54: PWM3DCL = 0x00;
  4997  033C  0197               	clrf	23	;volatile
  4998  033D  0008               	return
  4999  033E                     __end_of_PWM3_Initialize:	
  5000  033E                     __ptext12:	
  5001 ;; *************** function _PWM4_Initialize *****************
  5002 ;; Defined at:
  5003 ;;		line 69 in file "pwm.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;		None
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;		None
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  1    wreg      void 
  5010 ;; Registers used:
  5011 ;;		status,2
  5012 ;; Tracked objects:
  5013 ;;		On entry : B1F/C
  5014 ;;		On exit  : B1F/C
  5015 ;;		Unchanged: B00/0
  5016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5017 ;;      Params:         0       0       0       0
  5018 ;;      Locals:         0       0       0       0
  5019 ;;      Temps:          0       0       0       0
  5020 ;;      Totals:         0       0       0       0
  5021 ;;Total ram usage:        0 bytes
  5022 ;; Hardware stack levels used:    1
  5023 ;; Hardware stack levels required when called:    3
  5024 ;; This function calls:
  5025 ;;		Nothing
  5026 ;; This function is called by:
  5027 ;;		_SYSTEM_Initialize
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           
  5032                           ;psect for function _PWM4_Initialize
  5033  033E                     _PWM4_Initialize:	
  5034                           
  5035                           ;pwm.c: 71: PWM4CONbits.PWM4EN = 1;
  5036                           
  5037                           ;incstack = 0
  5038                           ; Regs used in _PWM4_Initialize: [status,2]
  5039  033E  179C               	bsf	28,7	;volatile
  5040                           
  5041                           ;pwm.c: 72: PWM4CONbits.PWM4OE = 1;
  5042  033F  171C               	bsf	28,6	;volatile
  5043                           
  5044                           ;pwm.c: 73: PWM4CONbits.PWM4POL = 0;
  5045  0340  121C               	bcf	28,4	;volatile
  5046                           
  5047                           ;pwm.c: 75: PWM4DCH = 0x00;
  5048  0341  019B               	clrf	27	;volatile
  5049                           
  5050                           ;pwm.c: 76: PWM4DCL = 0x00;
  5051  0342  019A               	clrf	26	;volatile
  5052  0343  0008               	return
  5053  0344                     __end_of_PWM4_Initialize:	
  5054  0344                     __ptext11:	
  5055 ;; *************** function _TMR0_Initialize *****************
  5056 ;; Defined at:
  5057 ;;		line 3 in file "tmr.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;		None
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;		None
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  1    wreg      void 
  5064 ;; Registers used:
  5065 ;;		wreg
  5066 ;; Tracked objects:
  5067 ;;		On entry : B1F/C
  5068 ;;		On exit  : B1F/1
  5069 ;;		Unchanged: B00/0
  5070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5071 ;;      Params:         0       0       0       0
  5072 ;;      Locals:         0       0       0       0
  5073 ;;      Temps:          0       0       0       0
  5074 ;;      Totals:         0       0       0       0
  5075 ;;Total ram usage:        0 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; Hardware stack levels required when called:    3
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		_SYSTEM_Initialize
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           
  5086                           ;psect for function _TMR0_Initialize
  5087  0344                     _TMR0_Initialize:	
  5088                           
  5089                           ;tmr.c: 5: OPTION_REG = 0x06;
  5090                           
  5091                           ;incstack = 0
  5092                           ; Regs used in _TMR0_Initialize: [wreg]
  5093  0344  3006               	movlw	6
  5094  0345  0021               	movlb	1	; select bank1
  5095  0346  0095               	movwf	21	;volatile
  5096  0347  0008               	return
  5097  0348                     __end_of_TMR0_Initialize:	
  5098  0348                     __ptext10:	
  5099 ;; *************** function _TMR1_Initialize *****************
  5100 ;; Defined at:
  5101 ;;		line 7 in file "tmr.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;		None
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;		None
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  1    wreg      void 
  5108 ;; Registers used:
  5109 ;;		wreg, status,2, status,0
  5110 ;; Tracked objects:
  5111 ;;		On entry : B1F/1
  5112 ;;		On exit  : B1F/1
  5113 ;;		Unchanged: B00/0
  5114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5115 ;;      Params:         0       0       0       0
  5116 ;;      Locals:         0       0       0       0
  5117 ;;      Temps:          0       0       0       0
  5118 ;;      Totals:         0       0       0       0
  5119 ;;Total ram usage:        0 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:    3
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_SYSTEM_Initialize
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           
  5130                           ;psect for function _TMR1_Initialize
  5131  0348                     _TMR1_Initialize:	
  5132                           
  5133                           ;tmr.c: 9: T1CONbits.TMR1CS = 0x02;
  5134                           
  5135                           ;incstack = 0
  5136                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0]
  5137  0348  0020               	movlb	0	; select bank0
  5138  0349  0818               	movf	24,w	;volatile
  5139  034A  393F               	andlw	-193
  5140  034B  3880               	iorlw	128
  5141  034C  0098               	movwf	24	;volatile
  5142                           
  5143                           ;tmr.c: 10: T1CONbits.T1CKPS = 0x00;
  5144  034D  30CF               	movlw	-49
  5145  034E  0598               	andwf	24,f	;volatile
  5146                           
  5147                           ;tmr.c: 11: T1CONbits.T1OSCEN = 1;
  5148  034F  1598               	bsf	24,3	;volatile
  5149                           
  5150                           ;tmr.c: 12: T1CONbits.nT1SYNC = 0;
  5151  0350  1118               	bcf	24,2	;volatile
  5152                           
  5153                           ;tmr.c: 13: T1CONbits.TMR1ON = 0;
  5154  0351  1018               	bcf	24,0	;volatile
  5155                           
  5156                           ;tmr.c: 14: T1GCONbits.TMR1GE = 0;
  5157  0352  1399               	bcf	25,7	;volatile
  5158                           
  5159                           ;tmr.c: 16: PIR1bits.TMR1IF = 0;
  5160  0353  1011               	bcf	17,0	;volatile
  5161                           
  5162                           ;tmr.c: 17: PIE1bits.TMR1IE = 1;
  5163  0354  0021               	movlb	1	; select bank1
  5164  0355  1411               	bsf	17,0	;volatile
  5165  0356  0008               	return
  5166  0357                     __end_of_TMR1_Initialize:	
  5167  0357                     __ptext9:	
  5168 ;; *************** function _TMR2_Initialize *****************
  5169 ;; Defined at:
  5170 ;;		line 19 in file "tmr.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;		None
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;		None
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  1    wreg      void 
  5177 ;; Registers used:
  5178 ;;		wreg, status,2, status,0
  5179 ;; Tracked objects:
  5180 ;;		On entry : B1F/1
  5181 ;;		On exit  : B1F/0
  5182 ;;		Unchanged: B00/0
  5183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5184 ;;      Params:         0       0       0       0
  5185 ;;      Locals:         0       0       0       0
  5186 ;;      Temps:          0       0       0       0
  5187 ;;      Totals:         0       0       0       0
  5188 ;;Total ram usage:        0 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; Hardware stack levels required when called:    3
  5191 ;; This function calls:
  5192 ;;		Nothing
  5193 ;; This function is called by:
  5194 ;;		_SYSTEM_Initialize
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           
  5199                           ;psect for function _TMR2_Initialize
  5200  0357                     _TMR2_Initialize:	
  5201                           
  5202                           ;tmr.c: 21: T2CONbits.T2OUTPS = 0x00;
  5203                           
  5204                           ;incstack = 0
  5205                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0]
  5206  0357  3087               	movlw	-121
  5207  0358  0020               	movlb	0	; select bank0
  5208  0359  059C               	andwf	28,f	;volatile
  5209                           
  5210                           ;tmr.c: 22: T2CONbits.T2CKPS = 0x03;
  5211  035A  3003               	movlw	3
  5212  035B  049C               	iorwf	28,f	;volatile
  5213                           
  5214                           ;tmr.c: 23: T2CONbits.TMR2ON = 0;
  5215  035C  111C               	bcf	28,2	;volatile
  5216                           
  5217                           ;tmr.c: 24: TMR2 = 0;
  5218  035D  019A               	clrf	26	;volatile
  5219                           
  5220                           ;tmr.c: 25: PR2 = 249;
  5221  035E  30F9               	movlw	249
  5222  035F  009B               	movwf	27	;volatile
  5223  0360  0008               	return
  5224  0361                     __end_of_TMR2_Initialize:	
  5225  0361                     __ptext7:	
  5226 ;; *************** function _TMR1_StartTimer *****************
  5227 ;; Defined at:
  5228 ;;		line 27 in file "tmr.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;		None
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;		None
  5233 ;; Return value:  Size  Location     Type
  5234 ;;                  1    wreg      void 
  5235 ;; Registers used:
  5236 ;;		None
  5237 ;; Tracked objects:
  5238 ;;		On entry : 1F/0
  5239 ;;		On exit  : 1F/0
  5240 ;;		Unchanged: 0/0
  5241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5242 ;;      Params:         0       0       0       0
  5243 ;;      Locals:         0       0       0       0
  5244 ;;      Temps:          0       0       0       0
  5245 ;;      Totals:         0       0       0       0
  5246 ;;Total ram usage:        0 bytes
  5247 ;; Hardware stack levels used:    1
  5248 ;; Hardware stack levels required when called:    3
  5249 ;; This function calls:
  5250 ;;		Nothing
  5251 ;; This function is called by:
  5252 ;;		_main
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           
  5257                           ;psect for function _TMR1_StartTimer
  5258  0361                     _TMR1_StartTimer:	
  5259                           
  5260                           ;tmr.c: 29: T1CONbits.TMR1ON = 1;
  5261                           
  5262                           ;incstack = 0
  5263                           ; Regs used in _TMR1_StartTimer: []
  5264  0361  1418               	bsf	24,0	;volatile
  5265  0362  0008               	return
  5266  0363                     __end_of_TMR1_StartTimer:	
  5267  0363                     __ptext6:	
  5268 ;; *************** function _TMR2_StartTimer *****************
  5269 ;; Defined at:
  5270 ;;		line 35 in file "tmr.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;		None
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;		None
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  1    wreg      void 
  5277 ;; Registers used:
  5278 ;;		None
  5279 ;; Tracked objects:
  5280 ;;		On entry : 1F/0
  5281 ;;		On exit  : 1F/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5284 ;;      Params:         0       0       0       0
  5285 ;;      Locals:         0       0       0       0
  5286 ;;      Temps:          0       0       0       0
  5287 ;;      Totals:         0       0       0       0
  5288 ;;Total ram usage:        0 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    3
  5291 ;; This function calls:
  5292 ;;		Nothing
  5293 ;; This function is called by:
  5294 ;;		_main
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           
  5299                           ;psect for function _TMR2_StartTimer
  5300  0363                     _TMR2_StartTimer:	
  5301                           
  5302                           ;tmr.c: 37: T2CONbits.TMR2ON = 1;
  5303                           
  5304                           ;incstack = 0
  5305                           ; Regs used in _TMR2_StartTimer: []
  5306  0363  151C               	bsf	28,2	;volatile
  5307  0364  0008               	return
  5308  0365                     __end_of_TMR2_StartTimer:	
  5309  0365                     __ptext5:	
  5310 ;; *************** function _UpdateRTC *****************
  5311 ;; Defined at:
  5312 ;;		line 6 in file "rtc.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;		None
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;		None
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  1    wreg      void 
  5319 ;; Registers used:
  5320 ;;		wreg
  5321 ;; Tracked objects:
  5322 ;;		On entry : 1F/0
  5323 ;;		On exit  : 1F/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5326 ;;      Params:         0       0       0       0
  5327 ;;      Locals:         0       0       0       0
  5328 ;;      Temps:          0       0       0       0
  5329 ;;      Totals:         0       0       0       0
  5330 ;;Total ram usage:        0 bytes
  5331 ;; Hardware stack levels used:    1
  5332 ;; Hardware stack levels required when called:    3
  5333 ;; This function calls:
  5334 ;;		Nothing
  5335 ;; This function is called by:
  5336 ;;		_main
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           
  5341                           ;psect for function _UpdateRTC
  5342  0365                     _UpdateRTC:	
  5343                           
  5344                           ;rtc.c: 8: gCurrentTime.datatime.hour = IR_ReveiveDataStructure.TimeHour;
  5345                           
  5346                           ;incstack = 0
  5347                           ; Regs used in _UpdateRTC: [wreg]
  5348  0365  0834               	movf	_IR_ReveiveDataStructure+1,w
  5349  0366  00B1               	movwf	_gCurrentTime+3	;volatile
  5350                           
  5351                           ;rtc.c: 9: gCurrentTime.datatime.minute = IR_ReveiveDataStructure.TimeMinute;
  5352  0367  0835               	movf	_IR_ReveiveDataStructure+2,w
  5353  0368  00B0               	movwf	_gCurrentTime+2	;volatile
  5354  0369  0008               	return
  5355  036A                     __end_of_UpdateRTC:	
  5356  036A                     __ptext3:	
  5357 ;; *************** function _PWM1_Disable *****************
  5358 ;; Defined at:
  5359 ;;		line 16 in file "pwm.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;		None
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;		None
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  1    wreg      void 
  5366 ;; Registers used:
  5367 ;;		None
  5368 ;; Tracked objects:
  5369 ;;		On entry : 1F/0
  5370 ;;		On exit  : 1F/C
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5373 ;;      Params:         0       0       0       0
  5374 ;;      Locals:         0       0       0       0
  5375 ;;      Temps:          0       0       0       0
  5376 ;;      Totals:         0       0       0       0
  5377 ;;Total ram usage:        0 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; Hardware stack levels required when called:    3
  5380 ;; This function calls:
  5381 ;;		Nothing
  5382 ;; This function is called by:
  5383 ;;		_manualMode
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           
  5388                           ;psect for function _PWM1_Disable
  5389  036A                     _PWM1_Disable:	
  5390                           
  5391                           ;pwm.c: 18: PWM1CONbits.PWM1EN = 0;
  5392                           
  5393                           ;incstack = 0
  5394                           ; Regs used in _PWM1_Disable: []
  5395  036A  002C               	movlb	12	; select bank12
  5396  036B  1393               	bcf	19,7	;volatile
  5397  036C  0008               	return
  5398  036D                     __end_of_PWM1_Disable:	
  5399  036D                     __ptext2:	
  5400 ;; *************** function _PWM2_Disable *****************
  5401 ;; Defined at:
  5402 ;;		line 38 in file "pwm.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;		None
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;		None
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  1    wreg      void 
  5409 ;; Registers used:
  5410 ;;		None
  5411 ;; Tracked objects:
  5412 ;;		On entry : 1F/0
  5413 ;;		On exit  : 1F/C
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5416 ;;      Params:         0       0       0       0
  5417 ;;      Locals:         0       0       0       0
  5418 ;;      Temps:          0       0       0       0
  5419 ;;      Totals:         0       0       0       0
  5420 ;;Total ram usage:        0 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; Hardware stack levels required when called:    3
  5423 ;; This function calls:
  5424 ;;		Nothing
  5425 ;; This function is called by:
  5426 ;;		_manualMode
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           
  5431                           ;psect for function _PWM2_Disable
  5432  036D                     _PWM2_Disable:	
  5433                           
  5434                           ;pwm.c: 40: PWM2CONbits.PWM2EN = 0;
  5435                           
  5436                           ;incstack = 0
  5437                           ; Regs used in _PWM2_Disable: []
  5438  036D  002C               	movlb	12	; select bank12
  5439  036E  1396               	bcf	22,7	;volatile
  5440  036F  0008               	return
  5441  0370                     __end_of_PWM2_Disable:	
  5442  0370                     __ptext28:	
  5443 ;; *************** function _UpdatePWM *****************
  5444 ;; Defined at:
  5445 ;;		line 18 in file "led.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;		None
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;		None
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  1    wreg      void 
  5452 ;; Registers used:
  5453 ;;		wreg, status,2, status,0, pclath, cstack
  5454 ;; Tracked objects:
  5455 ;;		On entry : 1F/0
  5456 ;;		On exit  : 1F/C
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5459 ;;      Params:         0       0       0       0
  5460 ;;      Locals:         0       0       0       0
  5461 ;;      Temps:          0       0       0       0
  5462 ;;      Totals:         0       0       0       0
  5463 ;;Total ram usage:        0 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:    4
  5466 ;; This function calls:
  5467 ;;		_PWM1_LoadDutyValue
  5468 ;;		_PWM2_LoadDutyValue
  5469 ;; This function is called by:
  5470 ;;		_LedUpdatePara
  5471 ;;		_AutoMode
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           
  5475                           
  5476                           ;psect for function _UpdatePWM
  5477  0370                     _UpdatePWM:	
  5478  0370                     l2160:	
  5479                           ;incstack = 0
  5480                           ; Regs used in _UpdatePWM: [wreg+status,2+status,0+pclath+cstack]
  5481                           
  5482                           
  5483                           ;led.c: 20: PWM1_LoadDutyValue(gLedRunPara.nCurrentLum[0]);
  5484  0370  082B               	movf	_gLedRunPara+11,w
  5485  0371  00CD               	movwf	PWM1_LoadDutyValue@dutyValue+1
  5486  0372  082A               	movf	_gLedRunPara+10,w
  5487  0373  00CC               	movwf	PWM1_LoadDutyValue@dutyValue
  5488  0374  237C  3180         	fcall	_PWM1_LoadDutyValue
  5489                           
  5490                           ;led.c: 21: PWM2_LoadDutyValue(gLedRunPara.nCurrentLum[1]);
  5491  0376  0020               	movlb	0	; select bank0
  5492  0377  082D               	movf	_gLedRunPara+13,w
  5493  0378  00CD               	movwf	PWM2_LoadDutyValue@dutyValue+1
  5494  0379  082C               	movf	_gLedRunPara+12,w
  5495  037A  00CC               	movwf	PWM2_LoadDutyValue@dutyValue
  5496  037B  2C0A               	ljmp	l2106
  5497  037C                     __end_of_UpdatePWM:	
  5498  037C                     __ptext30:	
  5499 ;; *************** function _PWM1_LoadDutyValue *****************
  5500 ;; Defined at:
  5501 ;;		line 20 in file "pwm.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  dutyValue       2    0[BANK0 ] unsigned int 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;		None
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      void 
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0
  5510 ;; Tracked objects:
  5511 ;;		On entry : 1F/0
  5512 ;;		On exit  : 1F/C
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5515 ;;      Params:         0       2       0       0
  5516 ;;      Locals:         0       0       0       0
  5517 ;;      Temps:          0       2       0       0
  5518 ;;      Totals:         0       4       0       0
  5519 ;;Total ram usage:        4 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    3
  5522 ;; This function calls:
  5523 ;;		Nothing
  5524 ;; This function is called by:
  5525 ;;		_UpdatePWM
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           
  5530                           ;psect for function _PWM1_LoadDutyValue
  5531  037C                     _PWM1_LoadDutyValue:	
  5532                           
  5533                           ;pwm.c: 22: PWM1DCL = (dutyValue & 0x03)<<6;
  5534                           
  5535                           ;incstack = 0
  5536                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
  5537  037C  084C               	movf	PWM1_LoadDutyValue@dutyValue,w
  5538  037D  3903               	andlw	3
  5539  037E  00CE               	movwf	??_PWM1_LoadDutyValue
  5540  037F  0CCE               	rrf	??_PWM1_LoadDutyValue,f
  5541  0380  0CCE               	rrf	??_PWM1_LoadDutyValue,f
  5542  0381  0C4E               	rrf	??_PWM1_LoadDutyValue,w
  5543  0382  39C0               	andlw	192
  5544  0383  002C               	movlb	12	; select bank12
  5545  0384  0091               	movwf	17	;volatile
  5546                           
  5547                           ;pwm.c: 23: PWM1DCH = dutyValue >> 2;
  5548  0385  0020               	movlb	0	; select bank0
  5549  0386  084D               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  5550  0387  00CF               	movwf	??_PWM1_LoadDutyValue+1
  5551  0388  084C               	movf	PWM1_LoadDutyValue@dutyValue,w
  5552  0389  00CE               	movwf	??_PWM1_LoadDutyValue
  5553  038A  36CF               	lsrf	??_PWM1_LoadDutyValue+1,f
  5554  038B  0CCE               	rrf	??_PWM1_LoadDutyValue,f
  5555  038C  36CF               	lsrf	??_PWM1_LoadDutyValue+1,f
  5556  038D  0CCE               	rrf	??_PWM1_LoadDutyValue,f
  5557  038E  084E               	movf	??_PWM1_LoadDutyValue,w
  5558  038F  002C               	movlb	12	; select bank12
  5559  0390  0092               	movwf	18	;volatile
  5560  0391  0008               	return
  5561  0392                     __end_of_PWM1_LoadDutyValue:	
  5562  0392                     __ptext18:	
  5563 ;; *************** function _InterruptOnChange_Initialize *****************
  5564 ;; Defined at:
  5565 ;;		line 3 in file "interruptOnChange.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;		None
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;		None
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1    wreg      void 
  5572 ;; Registers used:
  5573 ;;		status,2
  5574 ;; Tracked objects:
  5575 ;;		On entry : 1F/4
  5576 ;;		On exit  : 1F/7
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5579 ;;      Params:         0       0       0       0
  5580 ;;      Locals:         0       0       0       0
  5581 ;;      Temps:          0       0       0       0
  5582 ;;      Totals:         0       0       0       0
  5583 ;;Total ram usage:        0 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:    3
  5586 ;; This function calls:
  5587 ;;		Nothing
  5588 ;; This function is called by:
  5589 ;;		_SYSTEM_Initialize
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           
  5594                           ;psect for function _InterruptOnChange_Initialize
  5595  0392                     _InterruptOnChange_Initialize:	
  5596  0392                     l2326:	
  5597                           ;incstack = 0
  5598                           ; Regs used in _InterruptOnChange_Initialize: [status,2]
  5599                           
  5600                           
  5601                           ;interruptOnChange.c: 5: IOCBNbits.IOCBN7 = 1;
  5602  0392  0027               	movlb	7	; select bank7
  5603  0393  1795               	bsf	21,7	;volatile
  5604                           
  5605                           ;interruptOnChange.c: 6: IOCBPbits.IOCBP7 = 1;
  5606  0394  1794               	bsf	20,7	;volatile
  5607                           
  5608                           ;interruptOnChange.c: 7: IOCAF = 0;
  5609  0395  0193               	clrf	19	;volatile
  5610                           
  5611                           ;interruptOnChange.c: 8: IOCBF = 0;
  5612  0396  0196               	clrf	22	;volatile
  5613                           
  5614                           ;interruptOnChange.c: 10: INTCONbits.IOCIE = 1;
  5615  0397  158B               	bsf	11,3	;volatile
  5616  0398  0008               	return
  5617  0399                     __end_of_InterruptOnChange_Initialize:	
  5618  0399                     PL2:	
  5619  0399  0086               	movwf	6
  5620  039A  0187               	clrf	7
  5621  039B  0801               	movf	1,w
  5622  039C  00CC               	movwf	___wmul@multiplier
  5623  039D  300A               	movlw	10
  5624  039E  01CD               	clrf	___wmul@multiplier+1
  5625  039F  00CE               	movwf	___wmul@multiplicand
  5626  03A0  01CF               	clrf	___wmul@multiplicand+1
  5627  03A1  0008               	return
  5628  03A2                     __end_ofPL2:	
  5629  03A2                     PL6:	
  5630  03A2  084C               	movf	?___wmul,w
  5631  03A3  00D8               	movwf	??_AutoMode+2
  5632  03A4  084D               	movf	?___wmul+1,w
  5633  03A5  00D9               	movwf	??_AutoMode+3
  5634  03A6  01DA               	clrf	??_AutoMode+4
  5635  03A7  01DB               	clrf	??_AutoMode+5
  5636  03A8  0860               	movf	AutoMode@dTime+3,w
  5637  03A9  3A80               	xorlw	128
  5638  03AA  00DC               	movwf	??_AutoMode+6
  5639  03AB  085B               	movf	??_AutoMode+5,w
  5640  03AC  3A80               	xorlw	128
  5641  03AD  025C               	subwf	??_AutoMode+6,w
  5642  03AE  0008               	return
  5643  03AF                     __end_ofPL6:	
  5644  03AF                     PL8:	
  5645  03AF  00CC               	movwf	___wmul@multiplier
  5646  03B0  300A               	movlw	10
  5647  03B1  01CD               	clrf	___wmul@multiplier+1
  5648  03B2  00CE               	movwf	___wmul@multiplicand
  5649  03B3  01CF               	clrf	___wmul@multiplicand+1
  5650  03B4  0008               	return
  5651  03B5                     __end_ofPL8:	
  5652  03B5                     PL10:	
  5653  03B5  07D4               	addwf	_TimeChangeSec$1716,f
  5654  03B6  1803               	skipnc
  5655  03B7  0AD5               	incf	_TimeChangeSec$1716+1,f
  5656  03B8  0855               	movf	_TimeChangeSec$1716+1,w
  5657  03B9  00CD               	movwf	___wmul@multiplier+1
  5658  03BA  0854               	movf	_TimeChangeSec$1716,w
  5659  03BB  00CC               	movwf	___wmul@multiplier
  5660  03BC  301E               	movlw	30
  5661  03BD  00CE               	movwf	___wmul@multiplicand
  5662  03BE  01CF               	clrf	___wmul@multiplicand+1
  5663  03BF  0008               	return
  5664  03C0                     __end_ofPL10:	
  5665  03C0                     PL12:	
  5666  03C0  00D8               	movwf	??_AutoMode+2
  5667  03C1  3563               	lslf	AutoMode@i,w
  5668  03C2  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  5669  03C3  0086               	movwf	6
  5670  03C4  0187               	clrf	7
  5671  03C5  0857               	movf	??_AutoMode+1,w
  5672  03C6  3FC0               	movwi [0]fsr1
  5673  03C7  0858               	movf	??_AutoMode+2,w
  5674  03C8  3FC1               	movwi [1]fsr1
  5675  03C9  0008               	return
  5676  03CA                     __end_ofPL12:	
  5677  03CA                     PL14:	
  5678  03CA  0800               	movf	0,w
  5679  03CB  0201               	subwf	1,w
  5680  03CC  00CC               	movwf	___wmul@multiplier
  5681  03CD  01CD               	clrf	___wmul@multiplier+1
  5682  03CE  1C03               	skipc
  5683  03CF  03CD               	decf	___wmul@multiplier+1,f
  5684  03D0  300A               	movlw	10
  5685  03D1  00CE               	movwf	___wmul@multiplicand
  5686  03D2  01CF               	clrf	___wmul@multiplicand+1
  5687  03D3  0008               	return
  5688  03D4                     __end_ofPL14:	
  5689  03D4                     PL16:	
  5690  03D4  0086               	movwf	6
  5691  03D5  0187               	clrf	7
  5692  03D6  3F40               	moviw [0]fsr1
  5693  03D7  0220               	subwf	_gLedRunPara,w
  5694  03D8  00DD               	movwf	AutoMode@dTime
  5695  03D9  3F41               	moviw [1]fsr1
  5696  03DA  3B21               	subwfb	_gLedRunPara+1,w
  5697  03DB  00DE               	movwf	AutoMode@dTime+1
  5698  03DC  0008               	return
  5699  03DD                     __end_ofPL16:	
  5700  03DD                     PL18:	
  5701  03DD  3563               	lslf	AutoMode@i,w
  5702  03DE  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  5703  03DF  0086               	movwf	6
  5704  03E0  0187               	clrf	7
  5705  03E1  084C               	movf	?___wmul,w
  5706  03E2  3FC0               	movwi [0]fsr1
  5707  03E3  084D               	movf	?___wmul+1,w
  5708  03E4  3FC1               	movwi [1]fsr1
  5709  03E5  0008               	return
  5710  03E6                     __end_ofPL18:	
  5711  03E6                     PL24:	
  5712  03E6  0086               	movwf	6
  5713  03E7  3065               	movlw	101
  5714  03E8  0187               	clrf	7
  5715  03E9  0201               	subwf	1,w
  5716  03EA  0853               	movf	LedParaInit@i,w
  5717  03EB  0008               	return
  5718  03EC                     __end_ofPL24:	
  5719  03EC                     PL26:	
  5720  03EC  0086               	movwf	6
  5721  03ED  0187               	clrf	7
  5722  03EE  0024               	movlb	4	; select bank4
  5723  03EF  0811               	movf	17,w	;volatile
  5724  03F0  0081               	movwf	1
  5725  03F1  0008               	return
  5726  03F2                     __end_ofPL26:	
  5727  03F2                     PL28:	
  5728  03F2  00CC               	movwf	___wmul@multiplier
  5729  03F3  303C               	movlw	60
  5730  03F4  01CD               	clrf	___wmul@multiplier+1
  5731  03F5  00CE               	movwf	___wmul@multiplicand
  5732  03F6  01CF               	clrf	___wmul@multiplicand+1
  5733  03F7  0008               	return
  5734  03F8                     __end_ofPL28:	
  5735  03F8                     PL30:	
  5736  03F8  0086               	movwf	6
  5737  03F9  3064               	movlw	100
  5738  03FA  0081               	movwf	1
  5739  03FB  0853               	movf	LedParaInit@i,w
  5740  03FC  0008               	return
  5741  03FD                     __end_ofPL30:	
  5742  03FD                     __ptext19:	
  5743 ;; *************** function _I2C_Initialize *****************
  5744 ;; Defined at:
  5745 ;;		line 9 in file "i2c.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;		None
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;		None
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      void 
  5752 ;; Registers used:
  5753 ;;		wreg, status,2, status,0
  5754 ;; Tracked objects:
  5755 ;;		On entry : 1F/0
  5756 ;;		On exit  : 1F/4
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5759 ;;      Params:         0       0       0       0
  5760 ;;      Locals:         0       0       0       0
  5761 ;;      Temps:          0       0       0       0
  5762 ;;      Totals:         0       0       0       0
  5763 ;;Total ram usage:        0 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:    3
  5766 ;; This function calls:
  5767 ;;		Nothing
  5768 ;; This function is called by:
  5769 ;;		_SYSTEM_Initialize
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           
  5774                           ;psect for function _I2C_Initialize
  5775  03FD                     _I2C_Initialize:	
  5776                           
  5777                           ;i2c.c: 11: SSP1STATbits.SMP = 0;
  5778                           
  5779                           ;incstack = 0
  5780                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0]
  5781  03FD  0024               	movlb	4	; select bank4
  5782  03FE  1394               	bcf	20,7	;volatile
  5783                           
  5784                           ;i2c.c: 12: SSP1STATbits.CKE = 1;
  5785  03FF  1714               	bsf	20,6	;volatile
  5786                           
  5787                           ;i2c.c: 13: SSP1CON1bits.SSPEN = 1;
  5788  0400  1695               	bsf	21,5	;volatile
  5789                           
  5790                           ;i2c.c: 14: SSP1CON1bits.CKP = 0;
  5791  0401  1215               	bcf	21,4	;volatile
  5792                           
  5793                           ;i2c.c: 15: SSP1CON1bits.SSPM = 0x08;
  5794  0402  0815               	movf	21,w	;volatile
  5795  0403  39F0               	andlw	-16
  5796  0404  3808               	iorlw	8
  5797  0405  0095               	movwf	21	;volatile
  5798                           
  5799                           ;i2c.c: 16: SSP1CON3bits.SDAHT = 0;
  5800  0406  1197               	bcf	23,3	;volatile
  5801                           
  5802                           ;i2c.c: 17: SSP1ADD = 39;
  5803  0407  3027               	movlw	39
  5804  0408  0092               	movwf	18	;volatile
  5805  0409  0008               	return
  5806  040A                     __end_of_I2C_Initialize:	
  5807  040A                     __ptext29:	
  5808 ;; *************** function _PWM2_LoadDutyValue *****************
  5809 ;; Defined at:
  5810 ;;		line 42 in file "pwm.c"
  5811 ;; Parameters:    Size  Location     Type
  5812 ;;  dutyValue       2    0[BANK0 ] unsigned int 
  5813 ;; Auto vars:     Size  Location     Type
  5814 ;;		None
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  1    wreg      void 
  5817 ;; Registers used:
  5818 ;;		wreg, status,2, status,0
  5819 ;; Tracked objects:
  5820 ;;		On entry : 1F/0
  5821 ;;		On exit  : 1F/C
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5824 ;;      Params:         0       2       0       0
  5825 ;;      Locals:         0       0       0       0
  5826 ;;      Temps:          0       2       0       0
  5827 ;;      Totals:         0       4       0       0
  5828 ;;Total ram usage:        4 bytes
  5829 ;; Hardware stack levels used:    1
  5830 ;; Hardware stack levels required when called:    3
  5831 ;; This function calls:
  5832 ;;		Nothing
  5833 ;; This function is called by:
  5834 ;;		_UpdatePWM
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           
  5839                           ;psect for function _PWM2_LoadDutyValue
  5840  040A                     _PWM2_LoadDutyValue:	
  5841  040A                     l2106:	
  5842                           ;incstack = 0
  5843                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2+status,0]
  5844                           
  5845                           
  5846                           ;pwm.c: 44: PWM2DCL = (dutyValue & 0x03) << 6;
  5847  040A  084C               	movf	PWM2_LoadDutyValue@dutyValue,w
  5848  040B  3903               	andlw	3
  5849  040C  00CE               	movwf	??_PWM2_LoadDutyValue
  5850  040D  0CCE               	rrf	??_PWM2_LoadDutyValue,f
  5851  040E  0CCE               	rrf	??_PWM2_LoadDutyValue,f
  5852  040F  0C4E               	rrf	??_PWM2_LoadDutyValue,w
  5853  0410  39C0               	andlw	192
  5854  0411  002C               	movlb	12	; select bank12
  5855  0412  0094               	movwf	20	;volatile
  5856                           
  5857                           ;pwm.c: 45: PWM2DCH = dutyValue >> 2;
  5858  0413  0020               	movlb	0	; select bank0
  5859  0414  084D               	movf	PWM2_LoadDutyValue@dutyValue+1,w
  5860  0415  00CF               	movwf	??_PWM2_LoadDutyValue+1
  5861  0416  084C               	movf	PWM2_LoadDutyValue@dutyValue,w
  5862  0417  00CE               	movwf	??_PWM2_LoadDutyValue
  5863  0418  36CF               	lsrf	??_PWM2_LoadDutyValue+1,f
  5864  0419  0CCE               	rrf	??_PWM2_LoadDutyValue,f
  5865  041A  36CF               	lsrf	??_PWM2_LoadDutyValue+1,f
  5866  041B  0CCE               	rrf	??_PWM2_LoadDutyValue,f
  5867  041C  084E               	movf	??_PWM2_LoadDutyValue,w
  5868  041D  002C               	movlb	12	; select bank12
  5869  041E  0095               	movwf	21	;volatile
  5870  041F  0008               	return
  5871  0420                     __end_of_PWM2_LoadDutyValue:	
  5872                           
  5873                           	psect	intentry
  5874  0004                     __pintentry:	
  5875 ;; *************** function _INTERRUPT_interruptManager *****************
  5876 ;; Defined at:
  5877 ;;		line 25 in file "command.c"
  5878 ;; Parameters:    Size  Location     Type
  5879 ;;		None
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;		None
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  1    wreg      void 
  5884 ;; Registers used:
  5885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 1F/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5891 ;;      Params:         0       0       0       0
  5892 ;;      Locals:         0       0       0       0
  5893 ;;      Temps:          0       0       0       0
  5894 ;;      Totals:         0       0       0       0
  5895 ;;Total ram usage:        0 bytes
  5896 ;; Hardware stack levels used:    1
  5897 ;; Hardware stack levels required when called:    2
  5898 ;; This function calls:
  5899 ;;		_Decode
  5900 ;;		_RunRTC
  5901 ;; This function is called by:
  5902 ;;		Interrupt level 1
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906  0004                     _INTERRUPT_interruptManager:	
  5907                           
  5908                           ;incstack = 0
  5909  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  5910                           
  5911                           ; Regs used in _INTERRUPT_interruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5912  0005  3180               	pagesel	$
  5913                           
  5914                           ;command.c: 27: if(IOCBFbits.IOCBF7)
  5915  0006  0027               	movlb	7	; select bank7
  5916  0007  1F96               	btfss	22,7	;volatile
  5917  0008  280E               	goto	i1l294
  5918                           
  5919                           ;command.c: 28: {
  5920                           ;command.c: 29: IOCBFbits.IOCBF7 = 0;
  5921  0009  1396               	bcf	22,7	;volatile
  5922                           
  5923                           ;command.c: 30: Decode();
  5924  000A  3184  2420  3180   	fcall	_Decode
  5925                           
  5926                           ;command.c: 31: }
  5927  000D  2815               	goto	i1l297
  5928  000E                     i1l294:	
  5929                           
  5930                           ;command.c: 32: else if(PIR1bits.TMR1IF)
  5931  000E  0020               	movlb	0	; select bank0
  5932  000F  1C11               	btfss	17,0	;volatile
  5933  0010  2815               	goto	i1l297
  5934                           
  5935                           ;command.c: 33: {
  5936                           ;command.c: 34: PIR1bits.TMR1IF = 0;
  5937  0011  1011               	bcf	17,0	;volatile
  5938                           
  5939                           ;command.c: 35: gCurrentTime.datatime.fSec = 1;
  5940  0012  142E               	bsf	_gCurrentTime,0	;volatile
  5941                           
  5942                           ;command.c: 36: RunRTC();
  5943  0013  3184  24F0         	fcall	_RunRTC
  5944  0015                     i1l297:	
  5945  0015  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  5946  0016  0009               	retfie
  5947  0017                     __end_of_INTERRUPT_interruptManager:	
  5948                           
  5949                           	psect	text36
  5950  04F0                     __ptext36:	
  5951 ;; *************** function _RunRTC *****************
  5952 ;; Defined at:
  5953 ;;		line 11 in file "rtc.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;		None
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;		None
  5958 ;; Return value:  Size  Location     Type
  5959 ;;                  1    wreg      void 
  5960 ;; Registers used:
  5961 ;;		wreg, status,2, status,0
  5962 ;; Tracked objects:
  5963 ;;		On entry : 1F/0
  5964 ;;		On exit  : 1F/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5967 ;;      Params:         0       0       0       0
  5968 ;;      Locals:         0       0       0       0
  5969 ;;      Temps:          0       0       0       0
  5970 ;;      Totals:         0       0       0       0
  5971 ;;Total ram usage:        0 bytes
  5972 ;; Hardware stack levels used:    1
  5973 ;; This function calls:
  5974 ;;		Nothing
  5975 ;; This function is called by:
  5976 ;;		_INTERRUPT_interruptManager
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           
  5981                           ;psect for function _RunRTC
  5982  04F0                     _RunRTC:	
  5983                           
  5984                           ;rtc.c: 13: gCurrentTime.datatime.second ++;
  5985                           
  5986                           ;incstack = 0
  5987                           ; Regs used in _RunRTC: [wreg+status,2+status,0]
  5988  04F0  0AAF               	incf	_gCurrentTime+1,f	;volatile
  5989                           
  5990                           ;rtc.c: 14: if(gCurrentTime.datatime.second > 29)
  5991  04F1  301E               	movlw	30
  5992  04F2  022F               	subwf	_gCurrentTime+1,w	;volatile
  5993  04F3  1C03               	skipc
  5994  04F4  0008               	return
  5995                           
  5996                           ;rtc.c: 15: {
  5997                           ;rtc.c: 16: gCurrentTime.datatime.second = 0;
  5998  04F5  01AF               	clrf	_gCurrentTime+1	;volatile
  5999                           
  6000                           ;rtc.c: 17: gCurrentTime.datatime.minute ++;
  6001  04F6  0AB0               	incf	_gCurrentTime+2,f	;volatile
  6002                           
  6003                           ;rtc.c: 18: if(gCurrentTime.datatime.minute > 59)
  6004  04F7  303C               	movlw	60
  6005  04F8  0230               	subwf	_gCurrentTime+2,w	;volatile
  6006  04F9  1C03               	skipc
  6007  04FA  0008               	return
  6008                           
  6009                           ;rtc.c: 19: {
  6010                           ;rtc.c: 20: gCurrentTime.datatime.minute = 0;
  6011  04FB  01B0               	clrf	_gCurrentTime+2	;volatile
  6012                           
  6013                           ;rtc.c: 21: gCurrentTime.datatime.hour ++;
  6014  04FC  0AB1               	incf	_gCurrentTime+3,f	;volatile
  6015                           
  6016                           ;rtc.c: 22: if(gCurrentTime.datatime.hour > 23)
  6017  04FD  3018               	movlw	24
  6018  04FE  0231               	subwf	_gCurrentTime+3,w	;volatile
  6019  04FF  1803               	btfsc	3,0
  6020                           
  6021                           ;rtc.c: 23: {
  6022                           ;rtc.c: 24: gCurrentTime.datatime.hour = 0;
  6023  0500  01B1               	clrf	_gCurrentTime+3	;volatile
  6024  0501  0008               	return
  6025  0502                     __end_of_RunRTC:	
  6026                           
  6027                           	psect	text37
  6028  0420                     __ptext37:	
  6029 ;; *************** function _Decode *****************
  6030 ;; Defined at:
  6031 ;;		line 40 in file "IR_Decode.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;		None
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;		None
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  1    wreg      void 
  6038 ;; Registers used:
  6039 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6040 ;; Tracked objects:
  6041 ;;		On entry : 1F/7
  6042 ;;		On exit  : 1F/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6045 ;;      Params:         0       0       0       0
  6046 ;;      Locals:         0       0       0       0
  6047 ;;      Temps:          1       0       0       0
  6048 ;;      Totals:         1       0       0       0
  6049 ;;Total ram usage:        1 bytes
  6050 ;; Hardware stack levels used:    1
  6051 ;; Hardware stack levels required when called:    1
  6052 ;; This function calls:
  6053 ;;		_CheckSum
  6054 ;; This function is called by:
  6055 ;;		_INTERRUPT_interruptManager
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           
  6060                           ;psect for function _Decode
  6061  0420                     _Decode:	
  6062                           
  6063                           ;IR_Decode.c: 42: if(RB7)
  6064                           
  6065                           ;incstack = 0
  6066                           ; Regs used in _Decode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6067  0420  0020               	movlb	0	; select bank0
  6068  0421  1F8D               	btfss	13,7	;volatile
  6069  0422  2C26               	goto	i1l1976
  6070                           
  6071                           ;IR_Decode.c: 43: {
  6072                           ;IR_Decode.c: 44: INTCONbits.TMR0IF = 0;
  6073  0423  110B               	bcf	11,2	;volatile
  6074                           
  6075                           ;IR_Decode.c: 45: TMR0 = 0;
  6076  0424  0195               	clrf	21	;volatile
  6077                           
  6078                           ;IR_Decode.c: 46: }
  6079  0425  0008               	return
  6080  0426                     i1l1976:	
  6081                           
  6082                           ;IR_Decode.c: 47: else
  6083                           ;IR_Decode.c: 48: {
  6084                           ;IR_Decode.c: 49: gRunPara.HighCount = TMR0;
  6085  0426  0815               	movf	21,w	;volatile
  6086  0427  00F0               	movwf	_gRunPara
  6087                           
  6088                           ;IR_Decode.c: 50: TMR0 = 0;
  6089  0428  0195               	clrf	21	;volatile
  6090                           
  6091                           ;IR_Decode.c: 51: TMR0IF = 0;
  6092  0429  110B               	bcf	11,2	;volatile
  6093                           
  6094                           ;IR_Decode.c: 52: switch(state)
  6095  042A  2C7D               	goto	i1l2036
  6096  042B                     i1l332:	
  6097                           ;IR_Decode.c: 53: {
  6098                           ;IR_Decode.c: 54: case 0:
  6099                           
  6100                           
  6101                           ;IR_Decode.c: 55: state = 1;
  6102  042B  01F5               	clrf	_state
  6103  042C  0AF5               	incf	_state,f
  6104                           
  6105                           ;IR_Decode.c: 56: break;
  6106  042D  0008               	return
  6107  042E                     i1l1982:	
  6108                           
  6109                           ;IR_Decode.c: 58: if((gRunPara.HighCount >= 140) && (gRunPara.HighCount <= 175))
  6110  042E  308C               	movlw	140
  6111  042F  0270               	subwf	_gRunPara,w
  6112  0430  1C03               	skipc
  6113  0431  2C3A               	goto	i1l1990
  6114  0432  30B0               	movlw	176
  6115  0433  0270               	subwf	_gRunPara,w
  6116  0434  1803               	skipnc
  6117  0435  2C3A               	goto	i1l1990
  6118  0436  3002               	movlw	2
  6119                           
  6120                           ;IR_Decode.c: 59: {
  6121                           ;IR_Decode.c: 60: gRunPara.HighCount = 0;
  6122  0437  01F0               	clrf	_gRunPara
  6123                           
  6124                           ;IR_Decode.c: 61: state = 2;
  6125  0438  00F5               	movwf	_state
  6126                           
  6127                           ;IR_Decode.c: 62: }
  6128  0439  0008               	return
  6129  043A                     i1l1990:	
  6130                           
  6131                           ;IR_Decode.c: 63: else
  6132                           ;IR_Decode.c: 64: {
  6133                           ;IR_Decode.c: 65: state = 0;
  6134  043A  01F5               	clrf	_state
  6135  043B  0008               	return
  6136  043C                     i1l1992:	
  6137                           
  6138                           ;IR_Decode.c: 69: if((gRunPara.HighCount > 38) && (gRunPara.HighCount < 54))
  6139  043C  3027               	movlw	39
  6140  043D  0270               	subwf	_gRunPara,w
  6141  043E  1C03               	skipc
  6142  043F  2C47               	goto	i1l2000
  6143  0440  3036               	movlw	54
  6144  0441  0270               	subwf	_gRunPara,w
  6145  0442  1803               	skipnc
  6146  0443  2C47               	goto	i1l2000
  6147                           
  6148                           ;IR_Decode.c: 70: {
  6149                           ;IR_Decode.c: 71: gRunPara.HighCount = 0;
  6150  0444  01F0               	clrf	_gRunPara
  6151  0445                     i1l1998:	
  6152                           
  6153                           ;IR_Decode.c: 72: gRunPara.nBit ++;
  6154  0445  0AF2               	incf	_gRunPara+2,f
  6155                           
  6156                           ;IR_Decode.c: 73: }
  6157  0446  2C5B               	goto	i1l2012
  6158  0447                     i1l2000:	
  6159                           
  6160                           ;IR_Decode.c: 74: else if((gRunPara.HighCount > 15) && (gRunPara.HighCount < 31))
  6161  0447  3010               	movlw	16
  6162  0448  0270               	subwf	_gRunPara,w
  6163  0449  1C03               	skipc
  6164  044A  2C5A               	goto	i1l2010
  6165  044B  301F               	movlw	31
  6166  044C  0270               	subwf	_gRunPara,w
  6167  044D  1803               	skipnc
  6168  044E  2C5A               	goto	i1l2010
  6169  044F  3001               	movlw	1
  6170                           
  6171                           ;IR_Decode.c: 75: {
  6172                           ;IR_Decode.c: 76: gRunPara.HighCount = 0;
  6173  0450  01F0               	clrf	_gRunPara
  6174                           
  6175                           ;IR_Decode.c: 77: rcv |= 1 << gRunPara.nBit;
  6176  0451  00FB               	movwf	??_Decode
  6177  0452  0A72               	incf	_gRunPara+2,w
  6178  0453  2C55               	goto	u127_24
  6179  0454                     u127_25:	
  6180  0454  35FB               	lslf	??_Decode,f
  6181  0455                     u127_24:	
  6182  0455  0B89               	decfsz	9,f
  6183  0456  2C54               	goto	u127_25
  6184  0457  087B               	movf	??_Decode,w
  6185  0458  04F4               	iorwf	_rcv,f
  6186  0459  2C45               	goto	i1l1998
  6187  045A                     i1l2010:	
  6188                           
  6189                           ;IR_Decode.c: 80: else
  6190                           ;IR_Decode.c: 81: {
  6191                           ;IR_Decode.c: 82: state = 0;
  6192  045A  01F5               	clrf	_state
  6193  045B                     i1l2012:	
  6194                           
  6195                           ;IR_Decode.c: 83: }
  6196                           ;IR_Decode.c: 84: if(gRunPara.nBit >= 8)
  6197  045B  3008               	movlw	8
  6198  045C  0272               	subwf	_gRunPara+2,w
  6199  045D  1C03               	skipc
  6200  045E  0008               	return
  6201                           
  6202                           ;IR_Decode.c: 85: {
  6203                           ;IR_Decode.c: 86: gRunPara.nBit = 0;
  6204  045F  01F2               	clrf	_gRunPara+2
  6205                           
  6206                           ;IR_Decode.c: 87: IR_ReveiveDataStructure.array[index] = rcv;
  6207  0460  0873               	movf	_index,w
  6208  0461  3E33               	addlw	(low (_IR_ReveiveDataStructure| 0))& (0+255)
  6209  0462  0086               	movwf	6
  6210  0463  0187               	clrf	7
  6211  0464  0874               	movf	_rcv,w
  6212  0465  0081               	movwf	1
  6213  0466  300E               	movlw	14
  6214                           
  6215                           ;IR_Decode.c: 88: rcv = 0;
  6216  0467  01F4               	clrf	_rcv
  6217                           
  6218                           ;IR_Decode.c: 89: index ++;
  6219  0468  0AF3               	incf	_index,f
  6220                           
  6221                           ;IR_Decode.c: 90: if(index >= 14)
  6222  0469  0273               	subwf	_index,w
  6223  046A  1C03               	skipc
  6224  046B  0008               	return
  6225                           
  6226                           ;IR_Decode.c: 91: {
  6227                           ;IR_Decode.c: 92: rcv = 0;
  6228  046C  01F4               	clrf	_rcv
  6229                           
  6230                           ;IR_Decode.c: 93: index = 0;
  6231  046D  01F3               	clrf	_index
  6232                           
  6233                           ;IR_Decode.c: 94: if(IR_ReveiveDataStructure.UserCode == 0x0A)
  6234  046E  0833               	movf	_IR_ReveiveDataStructure,w
  6235  046F  390F               	andlw	15
  6236  0470  3A0A               	xorlw	10
  6237  0471  1D03               	skipz
  6238  0472  2C3A               	goto	i1l1990
  6239                           
  6240                           ;IR_Decode.c: 95: {
  6241                           ;IR_Decode.c: 96: if(CheckSum((unsigned char*)IR_ReveiveDataStructure.array,sizeof(IR_Re
      +                          veiveDataStructure.array) - 1) == IR_ReveiveDataStructure.array[13])
  6242  0473  300D               	movlw	13
  6243  0474  00F6               	movwf	CheckSum@len
  6244  0475  3033               	movlw	(low (_IR_ReveiveDataStructure| 0))& (0+255)
  6245  0476  2489  3184         	fcall	_CheckSum
  6246  0478  0640               	xorwf	_IR_ReveiveDataStructure+13,w
  6247  0479  1D03               	skipz
  6248  047A  2C3A               	goto	i1l1990
  6249                           
  6250                           ;IR_Decode.c: 97: {
  6251                           ;IR_Decode.c: 98: gRunState.fRecKey = 1;
  6252  047B  1432               	bsf	_gRunState,0
  6253  047C  2C3A               	goto	i1l1990
  6254  047D                     i1l2036:	
  6255  047D  0875               	movf	_state,w
  6256                           
  6257                           ; Switch size 1, requested type "space"
  6258                           ; Number of cases is 3, Range of values is 0 to 2
  6259                           ; switch strategies available:
  6260                           ; Name         Instructions Cycles
  6261                           ; simple_byte           10     6 (average)
  6262                           ; direct_byte           12     6 (fixed)
  6263                           ; jumptable            260     6 (fixed)
  6264                           ;	Chosen strategy is simple_byte
  6265  047E  3A00               	xorlw	0	; case 0
  6266  047F  1903               	skipnz
  6267  0480  2C2B               	goto	i1l332
  6268  0481  3A01               	xorlw	1	; case 1
  6269  0482  1903               	skipnz
  6270  0483  2C2E               	goto	i1l1982
  6271  0484  3A03               	xorlw	3	; case 2
  6272  0485  1903               	skipnz
  6273  0486  2C3C               	goto	i1l1992
  6274  0487  2C88               	goto	i1l347
  6275  0488                     i1l347:	
  6276  0488  0008               	return
  6277  0489                     __end_of_Decode:	
  6278  0489                     __ptext38:	
  6279 ;; *************** function _CheckSum *****************
  6280 ;; Defined at:
  6281 ;;		line 21 in file "IR_Decode.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;  pbuf            1    wreg     PTR unsigned char 
  6284 ;;		 -> IR_ReveiveDataStructure(14), 
  6285 ;;  len             1    0[COMMON] unsigned char 
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;  pbuf            1    2[COMMON] PTR unsigned char 
  6288 ;;		 -> IR_ReveiveDataStructure(14), 
  6289 ;;  i               1    4[COMMON] unsigned char 
  6290 ;;  result          1    3[COMMON] unsigned char 
  6291 ;; Return value:  Size  Location     Type
  6292 ;;                  1    wreg      unsigned char 
  6293 ;; Registers used:
  6294 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6295 ;; Tracked objects:
  6296 ;;		On entry : 1F/0
  6297 ;;		On exit  : 1F/0
  6298 ;;		Unchanged: 1F/0
  6299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6300 ;;      Params:         1       0       0       0
  6301 ;;      Locals:         3       0       0       0
  6302 ;;      Temps:          1       0       0       0
  6303 ;;      Totals:         5       0       0       0
  6304 ;;Total ram usage:        5 bytes
  6305 ;; Hardware stack levels used:    1
  6306 ;; This function calls:
  6307 ;;		Nothing
  6308 ;; This function is called by:
  6309 ;;		_Decode
  6310 ;; This function uses a non-reentrant model
  6311 ;;
  6312                           
  6313                           
  6314                           ;psect for function _CheckSum
  6315  0489                     _CheckSum:	
  6316                           
  6317                           ;incstack = 0
  6318                           ; Regs used in _CheckSum: [wreg+fsr1l+fsr1h+status,2+status,0]
  6319                           ;CheckSum@pbuf stored from wreg
  6320  0489  00F8               	movwf	CheckSum@pbuf
  6321                           
  6322                           ;IR_Decode.c: 23: unsigned char result = 0x00;
  6323  048A  01F9               	clrf	CheckSum@result
  6324                           
  6325                           ;IR_Decode.c: 24: unsigned char i;
  6326                           ;IR_Decode.c: 25: for(i = 0;i < len;i ++)
  6327  048B  01FA               	clrf	CheckSum@i
  6328  048C                     i1l1728:	
  6329  048C  0876               	movf	CheckSum@len,w
  6330  048D  027A               	subwf	CheckSum@i,w
  6331  048E  1803               	btfsc	3,0
  6332  048F  2C99               	goto	i1l1730
  6333                           
  6334                           ;IR_Decode.c: 26: {
  6335                           ;IR_Decode.c: 27: result += *(pbuf + i);
  6336  0490  087A               	movf	CheckSum@i,w
  6337  0491  0778               	addwf	CheckSum@pbuf,w
  6338  0492  00F7               	movwf	??_CheckSum
  6339  0493  0086               	movwf	6
  6340  0494  0187               	clrf	7
  6341  0495  0801               	movf	1,w
  6342  0496  07F9               	addwf	CheckSum@result,f
  6343  0497  0AFA               	incf	CheckSum@i,f
  6344  0498  2C8C               	goto	i1l1728
  6345  0499                     i1l1730:	
  6346                           
  6347                           ;IR_Decode.c: 28: }
  6348                           ;IR_Decode.c: 29: return result;
  6349  0499  0879               	movf	CheckSum@result,w
  6350  049A  0008               	return
  6351  049B                     __end_of_CheckSum:	
  6352  007E                     btemp	set	126	;btemp
  6353  007E                     int$flags	set	126
  6354  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     24      68
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    AutoMode@pendBright	PTR unsigned char  size(1) Largest target is 11
		 -> gLedPara.nightBright(BANK0[2]), gLedPara.dayBright(BANK0[2]), gLedPara(BANK0[11]), 

    AutoMode@pstartBright	PTR unsigned char  size(1) Largest target is 11
		 -> gLedPara.nightBright(BANK0[2]), gLedPara.dayBright(BANK0[2]), gLedPara(BANK0[11]), 

    SaveLedPara@pbuf	PTR unsigned char  size(1) Largest target is 11
		 -> gLedPara(BANK0[11]), 

    CheckSum@pbuf	PTR unsigned char  size(1) Largest target is 14
		 -> IR_ReveiveDataStructure(BANK0[14]), 

    I2C_ReadBuffer@pbuf	PTR unsigned char  size(1) Largest target is 11
		 -> gLedPara(BANK0[11]), 

    I2C_WriteBuffer@pbuf	PTR unsigned char  size(1) Largest target is 11
		 -> gLedPara(BANK0[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_interruptManager in COMMON

    _INTERRUPT_interruptManager->_Decode
    _Decode->_CheckSum

Critical Paths under _main in BANK0

    _main->_AutoMode
    _manualMode->_LedUpdatePara
    _LedUpdate->_SaveLedPara
    _SaveLedPara->_I2C_WriteBuffer
    _LedParaInit->_I2C_ReadBuffer
    _AutoMode->_TimeChangeSec
    _UpdatePWM->_PWM1_LoadDutyValue
    _UpdatePWM->_PWM2_LoadDutyValue
    _TimeChangeSec->___wmul

Critical Paths under _INTERRUPT_interruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_interruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_interruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11090
                           _AutoMode
                        _LedParaInit
                          _LedUpdate
                         _ResetState
                  _SYSTEM_Initialize
                    _TMR1_StartTimer
                    _TMR2_StartTimer
                          _UpdateRTC
                         _manualMode
 ---------------------------------------------------------------------------------
 (1) _manualMode                                           0     0      0    3040
                      _LedUpdatePara
                       _PWM1_Disable
                        _PWM1_Enable
                       _PWM2_Disable
                        _PWM2_Enable
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _PWM2_Disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LedUpdatePara                                        7     7      0     594
                                              4 BANK0      7     7      0
                          _UpdatePWM
 ---------------------------------------------------------------------------------
 (1) _UpdateRTC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _I2C_Initialize
       _InterruptOnChange_Initialize
                  _OSCCON_Initialize
                     _PIN_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCCON_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InterruptOnChange_Initialize                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetState                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LedUpdate                                            1     1      0     943
                                             12 BANK0      1     1      0
                        _SaveLedPara
 ---------------------------------------------------------------------------------
 (2) _SaveLedPara                                          6     6      0     689
                                              6 BANK0      6     6      0
                    _I2C_WriteBuffer
 ---------------------------------------------------------------------------------
 (3) _I2C_WriteBuffer                                      6     4      2     355
                                              0 BANK0      6     4      2
                         _CheckSSPIF
 ---------------------------------------------------------------------------------
 (1) _LedParaInit                                          1     1      0     671
                                              7 BANK0      1     1      0
                     _I2C_ReadBuffer
 ---------------------------------------------------------------------------------
 (2) _I2C_ReadBuffer                                       7     5      2     417
                                              0 BANK0      7     5      2
                         _CheckSSPIF
 ---------------------------------------------------------------------------------
 (4) _CheckSSPIF                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AutoMode                                            14    14      0    6436
                                             10 BANK0     14    14      0
                        _PWM1_Enable
                        _PWM2_Enable
                      _TimeChangeSec
                          _UpdatePWM
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _UpdatePWM                                            0     0      0     278
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM2_LoadDutyValue                                   4     2      2     139
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   4     2      2     139
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _TimeChangeSec                                        6     6      0    2594
                                              6 BANK0      4     4      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2446
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _PWM2_Enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_interruptManager                           0     0      0     208
                             _Decode
                             _RunRTC
 ---------------------------------------------------------------------------------
 (6) _RunRTC                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Decode                                               1     1      0     208
                                              5 COMMON     1     1      0
                           _CheckSum
 ---------------------------------------------------------------------------------
 (7) _CheckSum                                             5     4      1     208
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AutoMode
     _PWM1_Enable
     _PWM2_Enable
     _TimeChangeSec
       ___wmul
     _UpdatePWM
       _PWM1_LoadDutyValue
       _PWM2_LoadDutyValue
     ___wmul
   _LedParaInit
     _I2C_ReadBuffer
       _CheckSSPIF
   _LedUpdate
     _SaveLedPara
       _I2C_WriteBuffer
         _CheckSSPIF
   _ResetState
   _SYSTEM_Initialize
     _I2C_Initialize
     _InterruptOnChange_Initialize
     _OSCCON_Initialize
     _PIN_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
   _TMR1_StartTimer
   _TMR2_StartTimer
   _UpdateRTC
   _manualMode
     _LedUpdatePara
       _UpdatePWM
         _PWM1_LoadDutyValue
         _PWM2_LoadDutyValue
     _PWM1_Disable
     _PWM1_Enable
     _PWM2_Disable
     _PWM2_Enable
     ___wmul

 _INTERRUPT_interruptManager (ROOT)
   _Decode
     _CheckSum
   _RunRTC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      50       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     18      44       6       85.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      50      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Oct 27 16:38:26 2017

                          __CFG_CP$OFF 0000                                     PL2 0399  
                                   PL4 04D0                                     PL6 03A2  
                                   PL8 03AF                                     l29 0057  
                  ___wmul@multiplicand 004E           ??_INTERRUPT_interruptManager 007C  
                                  PL10 03B5                                    PL20 04E2  
                                  PL12 03C0                                    PL30 03F8  
                                  PL22 04EA                                    PL14 03CA  
                                  PL24 03E6                                    PL16 03D4  
                                  PL26 03EC                                    PL18 03DD  
                                  PL28 03F2                                    l212 0250  
                                  l233 02A5                                    l253 0311  
                                  l188 02B6                                    l398 004B  
                                  _RB7 006F                                    _PR2 001B  
                                  _rcv 0074                        _TMR2_Initialize 0357  
                      _PWM4_Initialize 033E                           __CFG_BORV$LO 0000  
                                  wreg 0009                             _CheckSSPIF 02B6  
                         __CFG_LVP$OFF 0000                                   l2106 040A  
                                 l2310 0287                                   l2160 0370  
                                 l2136 0231                                   l2164 01BD  
                                 l2420 01E0                                   l2156 023C  
                                 l2510 00F1                                   l2334 002A  
                                 l2326 0392                                   l2168 01C3  
                                 l2522 0116                                   l2346 0039  
                                 l2354 0030                                   l2370 04BD  
                                 l2362 049C                                   l2602 006A  
                                 l2540 0145                                   l2516 00FE  
                                 l2428 01FD                                   l2372 04C9  
                                 l2356 049B                                   l2550 014A  
                                 l2534 0137                                   l2278 0271  
                                 l2366 04AC                                   l2528 012E  
                                 l2464 02D0                                   l2482 0082  
                                 l2564 01B5                                   l2492 0096  
                                 l2486 0087                                   l2496 009A  
                                 l2596 0065                                   l2588 005D  
              __end_of_PWM1_Initialize 0332                    __end_of_LedParaInit 0213  
                                 u1535 0294                                   u1805 0114  
                                 u1815 011C                                   u1825 0124  
                                 u1835 012C                                   u1765 00EE  
                                 u1863 0172                                   u1873 01A5  
                                 u1785 0104                                   u1937 022B  
                                 u1795 010C                                   u1947 026B  
                                 _TMR0 0015                                   _TMR2 001A  
                         __CFG_WRT$OFF 0000                                   _main 004D  
                __end_of_TimeChangeSec 00E0                                   fsr0h 0005  
                                 fsr1h 0007                                   indf0 0000  
                                 fsr0l 0004                                   indf1 0001  
                                 fsr1l 0006                                   btemp 007E  
                        AutoMode@dTime 005D                                   start 0017  
                        __CFG_IESO$OFF 0000    __size_of_INTERRUPT_interruptManager 0013  
                        __CFG_MCLRE$ON 0000                __end_of_PWM2_Initialize 0338  
              __end_of_TMR0_Initialize 0348                        _I2C_WriteBuffer 0213  
                                ?_main 0076                          __CFG_WDTE$OFF 0000  
                      _TMR1_StartTimer 0361                                  _IOCAF 0393  
                                _IOCBF 0396                                  i1l332 042B  
                                i1l347 0488                                  i1l294 000E  
                                i1l297 0015                __size_of_PIN_Initialize 0017  
                       __CFG_FCMEN$OFF 0000                                  _index 0073  
                                _state 0075                __end_of_PWM3_Initialize 033E  
              __end_of_TMR1_Initialize 0357                         __CFG_BOREN$OFF 0000  
                                status 0003                                  wtemp0 007E  
                     __end_of_CheckSum 049B                        _TMR2_StartTimer 0363  
                      __initialization 0019                          ??_SaveLedPara 0052  
                         __end_of_main 0071                       __end_of_AutoMode 01BB  
                 AutoMode@pstartBright 0061                __end_of_PWM4_Initialize 0344  
              __end_of_TMR2_Initialize 0361                         __CFG_LPBOR$OFF 0000  
              _IR_ReveiveDataStructure 0033                                 ??_main 0064  
                          _LedParaInit 01D6                     __size_of_LedUpdate 0035  
                          ?_CheckSSPIF 0076                                 _ANSELA 018C  
                               _ANSELB 018D                                 _ANSELC 018E  
                               i1l2000 0447                                 i1l2010 045A  
                               i1l2012 045B                       ?_PWM1_Initialize 0076  
                               i1l2036 047D                                 i1l1730 0499  
                               i1l1728 048C                                 i1l1990 043A  
                               i1l1982 042E                                 i1l1992 043C  
                               i1l1976 0426                                 i1l1998 0445  
                               u127_24 0455                                 u127_25 0454  
                               _TMR0IF 005A                                 _SSP1IF 008B  
                               _Decode 0420                             _ResetState 02F0  
                         ?_PWM1_Enable 0076                         __CFG_PWRTE$OFF 0000  
                         ?_PWM2_Enable 0076                __end_of_I2C_WriteBuffer 0253  
                               _RunRTC 04F0                __end_of_TMR1_StartTimer 0363  
              __size_of_I2C_ReadBuffer 0063                                 ___wmul 01BB  
                       __CFG_STVREN$ON 0000     __end_of_INTERRUPT_interruptManager 0017  
           _INTERRUPT_interruptManager 0004                       ?_TMR0_Initialize 0076  
                     ?_PWM2_Initialize 0076                __size_of_I2C_Initialize 000D  
                  __end_of_SaveLedPara 004D                     __size_of_UpdateRTC 0005  
                   __size_of_UpdatePWM 000C                __end_of_TMR2_StartTimer 0365  
                     ?_TMR1_Initialize 0076                       ?_PWM3_Initialize 0076  
                    _SYSTEM_Initialize 02F7                __end_of__initialization 0026  
                   ?_SYSTEM_Initialize 0076             __end_of_PWM2_LoadDutyValue 0420  
          PWM1_LoadDutyValue@dutyValue 004C                      __end_of_LedUpdate 02F0  
                       __pcstackCOMMON 0076                    __size_of_CheckSSPIF 0005  
                __end_of_LedUpdatePara 04D0                    ??_SYSTEM_Initialize 004C  
                   _PWM1_LoadDutyValue 037C                       ?_TMR2_Initialize 0076  
                     ?_PWM4_Initialize 0076                             __end_ofPL2 03A2  
                           __end_ofPL4 04E2                             __end_ofPL6 03AF  
                           __end_ofPL8 03B5                         _PIN_Initialize 0314  
                            ?_CheckSum 0076                    ?_PWM1_LoadDutyValue 004C  
            __end_of_SYSTEM_Initialize 030C                              ?_AutoMode 0076  
                           __pbssBANK0 0020                                ?_Decode 0076  
                          ?_ResetState 0076                   ??_PWM1_LoadDutyValue 004E  
                    __end_of_UpdateRTC 036A                      __end_of_UpdatePWM 037C  
                           __pmaintext 004D                                ?_RunRTC 0076  
                     ?_I2C_WriteBuffer 004C                                ?___wmul 004C  
                          _SaveLedPara 002A                       ?_TMR1_StartTimer 0076  
                           __pintentry 0004                 __end_of_PIN_Initialize 032B  
                           ??_CheckSum 0077                                _PWM1DCH 0612  
                              _PWM1DCL 0611                                _PWM2DCH 0615  
                              _PWM2DCL 0614                                _PWM3DCH 0618  
                              _PWM3DCL 0617                                _PWM4DCH 061B  
                              _PWM4DCL 061A                                _SSP1ADD 0212  
                              _SSP1BUF 0211                       ?_TMR2_StartTimer 0076  
                           ??_AutoMode 0056                          ?_PWM1_Disable 0076  
                      __size_of_Decode 0069                          ?_PWM2_Disable 0076  
                           _manualMode 0071                        __size_of_RunRTC 0012  
                       _I2C_ReadBuffer 0253                   __size_of_PWM1_Enable 0003  
                 __size_of_PWM2_Enable 0003                        __size_of___wmul 0015  
                       _I2C_Initialize 03FD                                __ptext1 0071  
                              __ptext2 036D                                __ptext3 036A  
                              __ptext4 049B                                __ptext5 0365  
                              __ptext6 0363                                __ptext7 0361  
                              __ptext8 02F7                                __ptext9 0357  
                      ?_PIN_Initialize 0076                              _T1CONbits 0018  
               __size_of_TimeChangeSec 0044                              _T2CONbits 001C  
                         ?_LedParaInit 0076                    __size_of_ResetState 0007  
                            _IOCBFbits 0396                              CheckSum@i 007A  
                         ??_CheckSSPIF 004C                              _IOCBNbits 0395  
                            _IOCBPbits 0394             __size_of_SYSTEM_Initialize 0015  
                              clrloop0 0503                   end_of_initialization 0026  
                          _gLedRunPara 0020                         ??_PWM1_Disable 004C  
                       ??_PWM2_Disable 004C                           CheckSum@pbuf 0078  
               __end_of_I2C_ReadBuffer 02B6                 __end_of_I2C_Initialize 040A  
                   __end_of_CheckSSPIF 02BB            ?_INTERRUPT_interruptManager 0076  
                     I2C_WriteBuffer@i 0051                       I2C_WriteBuffer@n 0050  
                     __CFG_FOSC$INTOSC 0000                              _TRISAbits 008C  
                            _TRISBbits 008D                              _TRISCbits 008E  
                            AutoMode@i 0063                         LedUpdatePara@i 0056  
                        _TimeChangeSec 009C                        ?_I2C_ReadBuffer 004C  
                       __end_of_Decode 0489                     I2C_ReadBuffer@pbuf 004C  
             __size_of_PWM1_Initialize 0007                     I2C_ReadBuffer@suba 0050  
                          ?_manualMode 0076                         __end_of_RunRTC 0502  
                      ?_I2C_Initialize 0076                         __end_of___wmul 01D0  
                            _LedUpdate 02BB                     _PWM2_LoadDutyValue 040A  
                          __end_ofPL10 03C0                            __end_ofPL20 04EA  
                          __end_ofPL12 03CA                            __end_ofPL30 03FD  
                          __end_ofPL22 04F0                            __end_ofPL14 03D4  
                          __end_ofPL24 03EC                            __end_ofPL16 03DD  
                          __end_ofPL26 03F2                            __end_ofPL18 03E6  
                          __end_ofPL28 03F8                    start_initialization 0019  
             __size_of_PWM2_Initialize 0006               __size_of_TMR0_Initialize 0004  
                  ?_PWM2_LoadDutyValue 004C                      __size_of_CheckSum 0012  
                       ?_TimeChangeSec 0076                      __size_of_AutoMode 00DB  
                             ??_Decode 007B                           ??_ResetState 004C  
                 ??_PWM2_LoadDutyValue 004E                               ??_RunRTC 0076  
             __size_of_PWM3_Initialize 0006               __size_of_TMR1_Initialize 000F  
          PWM2_LoadDutyValue@dutyValue 004C                           ?_SaveLedPara 0076  
                             ??___wmul 0050                              _UpdateRTC 0365  
                            _UpdatePWM 0370                             ?_LedUpdate 0076  
                 __end_of_PWM1_Disable 036D                   __end_of_PWM2_Disable 0370  
                          __pbssCOMMON 0070                              ___latbits 0001  
                        __pcstackBANK0 004C                     __end_of_ResetState 02F7  
             __size_of_PWM4_Initialize 0006               __size_of_TMR2_Initialize 000A  
                 __size_of_LedParaInit 003D                    __size_of_manualMode 002B  
               __size_of_LedUpdatePara 0035                              _gRunState 0032  
          __size_of_PWM1_LoadDutyValue 0016                       ??_PIN_Initialize 004C  
                           ?_UpdateRTC 0076                             ?_UpdatePWM 0076  
                    ??_PWM1_Initialize 004C               __size_of_I2C_WriteBuffer 0040  
                      I2C_ReadBuffer@i 0052                        I2C_ReadBuffer@n 0051  
             __size_of_TMR1_StartTimer 0002   __end_of_InterruptOnChange_Initialize 0399  
__size_of_InterruptOnChange_Initialize 0007           _InterruptOnChange_Initialize 0392  
                      ??_TimeChangeSec 0052                      ??_TMR0_Initialize 004C  
                    ??_PWM2_Initialize 004C                         ___wmul@product 0050  
                             _LATAbits 010C                               _LATCbits 010E  
                            clear_ram0 0502                               _PIE1bits 0091  
                        ??_PWM1_Enable 004C               __size_of_TMR2_StartTimer 0002  
                        ??_PWM2_Enable 004C                            CheckSum@len 0076  
                             _PIR1bits 0011                      _OSCCON_Initialize 030C  
                        _LedUpdatePara 049B                            ??_LedUpdate 0058  
                   ?_OSCCON_Initialize 0076                      ??_TMR1_Initialize 004C  
                    ??_PWM3_Initialize 004C                      ___wmul@multiplier 004C  
                   _TimeChangeSec$1716 0054                      SaveLedPara@offset 0055  
                             _CheckSum 0489                               _WPUBbits 020D  
                  ??_OSCCON_Initialize 004C                      I2C_ReadBuffer@len 004D  
                             _AutoMode 00E0          ?_InterruptOnChange_Initialize 0076  
                     ??_I2C_ReadBuffer 004E                           LedParaInit@i 0053  
                    ??_TMR2_Initialize 004C                      ??_PWM4_Initialize 004C  
                     ??_I2C_Initialize 004C              __end_of_OSCCON_Initialize 0314  
                         ??_manualMode 0057                               _gLedPara 0041  
                       ?_LedUpdatePara 0076                  __size_of_PWM1_Disable 0003  
                  __end_of_PWM1_Enable 01D3                            ??_UpdateRTC 004C  
                          ??_UpdatePWM 0050                  __size_of_PWM2_Disable 0003  
                  __end_of_PWM2_Enable 01D6                   __size_of_SaveLedPara 0023  
                             _gRunPara 0070                               __ptext10 0348  
                             __ptext11 0344                               __ptext20 02F0  
                             __ptext12 033E                               __ptext21 02BB  
                             __ptext13 0338                             _T1GCONbits 0019  
                             __ptext30 037C                               __ptext22 002A  
                             __ptext14 0332                               __ptext31 009C  
                             __ptext23 0213                               __ptext15 032B  
                             __ptext32 01BB                               __ptext24 01D6  
                             __ptext16 0314                               __ptext33 01D3  
                             __ptext25 0253                               __ptext17 030C  
                             __ptext34 01D0                               __ptext26 02B6  
                             __ptext18 0392                               __ptext27 00E0  
                             __ptext19 03FD                               __ptext36 04F0  
                             __ptext28 0370                               __ptext37 0420  
                             __ptext29 040A                               __ptext38 0489  
                     _SaveLedPara$1192 0053                      ??_I2C_WriteBuffer 004E  
                         _SSP1CON1bits 0215                           _SSP1CON2bits 0216  
                         _SSP1CON3bits 0217                     __end_of_manualMode 009C  
                    ??_TMR1_StartTimer 004C                         CheckSum@result 0079  
                        __size_of_main 0024                           _PWM1_Disable 036A  
                         _PWM2_Disable 036D                               int$flags 007E  
                    ??_TMR2_StartTimer 004C                           _SSP1STATbits 0214  
                          _OSCSTATbits 009A                             _INTCONbits 000B  
                          _PWM1CONbits 0613                            _PWM2CONbits 0616  
                          _PWM3CONbits 0619                            _PWM4CONbits 061C  
                  I2C_WriteBuffer@pbuf 004C                               intlevel1 0000  
                  I2C_WriteBuffer@suba 004F                      __CFG_CLKOUTEN$OFF 0000  
       ??_InterruptOnChange_Initialize 004C                        _PWM1_Initialize 032B  
                          _PWM1_Enable 01D0                             _OSCCONbits 0099  
                          _PWM2_Enable 01D3                        ??_LedUpdatePara 0050  
           __size_of_OSCCON_Initialize 0008            __size_of_PWM2_LoadDutyValue 0016  
                      SaveLedPara@pbuf 0052                     AutoMode@pendBright 0062  
                   I2C_WriteBuffer@len 004D                             _OPTION_REG 0095  
                        ??_LedParaInit 0053                        _TMR0_Initialize 0344  
                      _PWM2_Initialize 0332                             LedUpdate@i 0058  
                       SaveLedPara@cnt 0056                         SaveLedPara@len 0057  
           __end_of_PWM1_LoadDutyValue 0392                           _gCurrentTime 002E  
                      _TMR1_Initialize 0348                        _PWM3_Initialize 0338  
