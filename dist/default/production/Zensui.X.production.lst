

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Nov 01 16:59:00 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1508
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 1.41
    54                           ; Generated 25/01/2017 GMT
    55                           ; 
    56                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F1508 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  0111                     	;# 
   135  0112                     	;# 
   136  0113                     	;# 
   137  0114                     	;# 
   138  0115                     	;# 
   139  0116                     	;# 
   140  0117                     	;# 
   141  0118                     	;# 
   142  0119                     	;# 
   143  011D                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  018E                     	;# 
   147  0191                     	;# 
   148  0191                     	;# 
   149  0192                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0194                     	;# 
   153  0195                     	;# 
   154  0196                     	;# 
   155  0197                     	;# 
   156  0199                     	;# 
   157  019A                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019C                     	;# 
   161  019D                     	;# 
   162  019E                     	;# 
   163  019F                     	;# 
   164  020C                     	;# 
   165  020D                     	;# 
   166  0211                     	;# 
   167  0211                     	;# 
   168  0212                     	;# 
   169  0212                     	;# 
   170  0213                     	;# 
   171  0213                     	;# 
   172  0214                     	;# 
   173  0214                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0216                     	;# 
   178  0216                     	;# 
   179  0217                     	;# 
   180  0217                     	;# 
   181  0391                     	;# 
   182  0392                     	;# 
   183  0393                     	;# 
   184  0394                     	;# 
   185  0395                     	;# 
   186  0396                     	;# 
   187  0498                     	;# 
   188  0498                     	;# 
   189  0499                     	;# 
   190  049A                     	;# 
   191  049B                     	;# 
   192  049B                     	;# 
   193  049C                     	;# 
   194  049D                     	;# 
   195  049E                     	;# 
   196  049F                     	;# 
   197  0611                     	;# 
   198  0612                     	;# 
   199  0613                     	;# 
   200  0613                     	;# 
   201  0614                     	;# 
   202  0615                     	;# 
   203  0616                     	;# 
   204  0616                     	;# 
   205  0617                     	;# 
   206  0618                     	;# 
   207  0619                     	;# 
   208  0619                     	;# 
   209  061A                     	;# 
   210  061B                     	;# 
   211  061C                     	;# 
   212  061C                     	;# 
   213  0691                     	;# 
   214  0692                     	;# 
   215  0693                     	;# 
   216  0694                     	;# 
   217  0695                     	;# 
   218  0F0F                     	;# 
   219  0F10                     	;# 
   220  0F11                     	;# 
   221  0F12                     	;# 
   222  0F13                     	;# 
   223  0F14                     	;# 
   224  0F15                     	;# 
   225  0F16                     	;# 
   226  0F17                     	;# 
   227  0F18                     	;# 
   228  0F19                     	;# 
   229  0F1A                     	;# 
   230  0F1B                     	;# 
   231  0F1C                     	;# 
   232  0F1D                     	;# 
   233  0F1E                     	;# 
   234  0F1F                     	;# 
   235  0F20                     	;# 
   236  0F21                     	;# 
   237  0F22                     	;# 
   238  0F23                     	;# 
   239  0F24                     	;# 
   240  0F25                     	;# 
   241  0F26                     	;# 
   242  0F27                     	;# 
   243  0F28                     	;# 
   244  0F29                     	;# 
   245  0F2A                     	;# 
   246  0F2B                     	;# 
   247  0F2C                     	;# 
   248  0F2D                     	;# 
   249  0F2E                     	;# 
   250  0F2F                     	;# 
   251  0F8C                     	;# 
   252  0F8D                     	;# 
   253  0F91                     	;# 
   254  0F95                     	;# 
   255  0F96                     	;# 
   256  0F97                     	;# 
   257  0F9C                     	;# 
   258  0F9D                     	;# 
   259  0F9E                     	;# 
   260  0FE3                     	;# 
   261  0FE4                     	;# 
   262  0FE5                     	;# 
   263  0FE6                     	;# 
   264  0FE7                     	;# 
   265  0FE8                     	;# 
   266  0FE9                     	;# 
   267  0FEA                     	;# 
   268  0FEB                     	;# 
   269  0FED                     	;# 
   270  0FEE                     	;# 
   271  0FEF                     	;# 
   272  0000                     	;# 
   273  0001                     	;# 
   274  0002                     	;# 
   275  0003                     	;# 
   276  0004                     	;# 
   277  0005                     	;# 
   278  0006                     	;# 
   279  0007                     	;# 
   280  0008                     	;# 
   281  0009                     	;# 
   282  000A                     	;# 
   283  000B                     	;# 
   284  000C                     	;# 
   285  000D                     	;# 
   286  000E                     	;# 
   287  0011                     	;# 
   288  0012                     	;# 
   289  0013                     	;# 
   290  0015                     	;# 
   291  0016                     	;# 
   292  0016                     	;# 
   293  0017                     	;# 
   294  0018                     	;# 
   295  0019                     	;# 
   296  001A                     	;# 
   297  001B                     	;# 
   298  001C                     	;# 
   299  008C                     	;# 
   300  008D                     	;# 
   301  008E                     	;# 
   302  0091                     	;# 
   303  0092                     	;# 
   304  0093                     	;# 
   305  0095                     	;# 
   306  0096                     	;# 
   307  0097                     	;# 
   308  0099                     	;# 
   309  009A                     	;# 
   310  009B                     	;# 
   311  009B                     	;# 
   312  009C                     	;# 
   313  009D                     	;# 
   314  009E                     	;# 
   315  009F                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  0111                     	;# 
   320  0112                     	;# 
   321  0113                     	;# 
   322  0114                     	;# 
   323  0115                     	;# 
   324  0116                     	;# 
   325  0117                     	;# 
   326  0118                     	;# 
   327  0119                     	;# 
   328  011D                     	;# 
   329  018C                     	;# 
   330  018D                     	;# 
   331  018E                     	;# 
   332  0191                     	;# 
   333  0191                     	;# 
   334  0192                     	;# 
   335  0193                     	;# 
   336  0193                     	;# 
   337  0194                     	;# 
   338  0195                     	;# 
   339  0196                     	;# 
   340  0197                     	;# 
   341  0199                     	;# 
   342  019A                     	;# 
   343  019B                     	;# 
   344  019B                     	;# 
   345  019C                     	;# 
   346  019D                     	;# 
   347  019E                     	;# 
   348  019F                     	;# 
   349  020C                     	;# 
   350  020D                     	;# 
   351  0211                     	;# 
   352  0211                     	;# 
   353  0212                     	;# 
   354  0212                     	;# 
   355  0213                     	;# 
   356  0213                     	;# 
   357  0214                     	;# 
   358  0214                     	;# 
   359  0215                     	;# 
   360  0215                     	;# 
   361  0215                     	;# 
   362  0216                     	;# 
   363  0216                     	;# 
   364  0217                     	;# 
   365  0217                     	;# 
   366  0391                     	;# 
   367  0392                     	;# 
   368  0393                     	;# 
   369  0394                     	;# 
   370  0395                     	;# 
   371  0396                     	;# 
   372  0498                     	;# 
   373  0498                     	;# 
   374  0499                     	;# 
   375  049A                     	;# 
   376  049B                     	;# 
   377  049B                     	;# 
   378  049C                     	;# 
   379  049D                     	;# 
   380  049E                     	;# 
   381  049F                     	;# 
   382  0611                     	;# 
   383  0612                     	;# 
   384  0613                     	;# 
   385  0613                     	;# 
   386  0614                     	;# 
   387  0615                     	;# 
   388  0616                     	;# 
   389  0616                     	;# 
   390  0617                     	;# 
   391  0618                     	;# 
   392  0619                     	;# 
   393  0619                     	;# 
   394  061A                     	;# 
   395  061B                     	;# 
   396  061C                     	;# 
   397  061C                     	;# 
   398  0691                     	;# 
   399  0692                     	;# 
   400  0693                     	;# 
   401  0694                     	;# 
   402  0695                     	;# 
   403  0F0F                     	;# 
   404  0F10                     	;# 
   405  0F11                     	;# 
   406  0F12                     	;# 
   407  0F13                     	;# 
   408  0F14                     	;# 
   409  0F15                     	;# 
   410  0F16                     	;# 
   411  0F17                     	;# 
   412  0F18                     	;# 
   413  0F19                     	;# 
   414  0F1A                     	;# 
   415  0F1B                     	;# 
   416  0F1C                     	;# 
   417  0F1D                     	;# 
   418  0F1E                     	;# 
   419  0F1F                     	;# 
   420  0F20                     	;# 
   421  0F21                     	;# 
   422  0F22                     	;# 
   423  0F23                     	;# 
   424  0F24                     	;# 
   425  0F25                     	;# 
   426  0F26                     	;# 
   427  0F27                     	;# 
   428  0F28                     	;# 
   429  0F29                     	;# 
   430  0F2A                     	;# 
   431  0F2B                     	;# 
   432  0F2C                     	;# 
   433  0F2D                     	;# 
   434  0F2E                     	;# 
   435  0F2F                     	;# 
   436  0F8C                     	;# 
   437  0F8D                     	;# 
   438  0F91                     	;# 
   439  0F95                     	;# 
   440  0F96                     	;# 
   441  0F97                     	;# 
   442  0F9C                     	;# 
   443  0F9D                     	;# 
   444  0F9E                     	;# 
   445  0FE3                     	;# 
   446  0FE4                     	;# 
   447  0FE5                     	;# 
   448  0FE6                     	;# 
   449  0FE7                     	;# 
   450  0FE8                     	;# 
   451  0FE9                     	;# 
   452  0FEA                     	;# 
   453  0FEB                     	;# 
   454  0FED                     	;# 
   455  0FEE                     	;# 
   456  0FEF                     	;# 
   457  0000                     	;# 
   458  0001                     	;# 
   459  0002                     	;# 
   460  0003                     	;# 
   461  0004                     	;# 
   462  0005                     	;# 
   463  0006                     	;# 
   464  0007                     	;# 
   465  0008                     	;# 
   466  0009                     	;# 
   467  000A                     	;# 
   468  000B                     	;# 
   469  000C                     	;# 
   470  000D                     	;# 
   471  000E                     	;# 
   472  0011                     	;# 
   473  0012                     	;# 
   474  0013                     	;# 
   475  0015                     	;# 
   476  0016                     	;# 
   477  0016                     	;# 
   478  0017                     	;# 
   479  0018                     	;# 
   480  0019                     	;# 
   481  001A                     	;# 
   482  001B                     	;# 
   483  001C                     	;# 
   484  008C                     	;# 
   485  008D                     	;# 
   486  008E                     	;# 
   487  0091                     	;# 
   488  0092                     	;# 
   489  0093                     	;# 
   490  0095                     	;# 
   491  0096                     	;# 
   492  0097                     	;# 
   493  0099                     	;# 
   494  009A                     	;# 
   495  009B                     	;# 
   496  009B                     	;# 
   497  009C                     	;# 
   498  009D                     	;# 
   499  009E                     	;# 
   500  009F                     	;# 
   501  010C                     	;# 
   502  010D                     	;# 
   503  010E                     	;# 
   504  0111                     	;# 
   505  0112                     	;# 
   506  0113                     	;# 
   507  0114                     	;# 
   508  0115                     	;# 
   509  0116                     	;# 
   510  0117                     	;# 
   511  0118                     	;# 
   512  0119                     	;# 
   513  011D                     	;# 
   514  018C                     	;# 
   515  018D                     	;# 
   516  018E                     	;# 
   517  0191                     	;# 
   518  0191                     	;# 
   519  0192                     	;# 
   520  0193                     	;# 
   521  0193                     	;# 
   522  0194                     	;# 
   523  0195                     	;# 
   524  0196                     	;# 
   525  0197                     	;# 
   526  0199                     	;# 
   527  019A                     	;# 
   528  019B                     	;# 
   529  019B                     	;# 
   530  019C                     	;# 
   531  019D                     	;# 
   532  019E                     	;# 
   533  019F                     	;# 
   534  020C                     	;# 
   535  020D                     	;# 
   536  0211                     	;# 
   537  0211                     	;# 
   538  0212                     	;# 
   539  0212                     	;# 
   540  0213                     	;# 
   541  0213                     	;# 
   542  0214                     	;# 
   543  0214                     	;# 
   544  0215                     	;# 
   545  0215                     	;# 
   546  0215                     	;# 
   547  0216                     	;# 
   548  0216                     	;# 
   549  0217                     	;# 
   550  0217                     	;# 
   551  0391                     	;# 
   552  0392                     	;# 
   553  0393                     	;# 
   554  0394                     	;# 
   555  0395                     	;# 
   556  0396                     	;# 
   557  0498                     	;# 
   558  0498                     	;# 
   559  0499                     	;# 
   560  049A                     	;# 
   561  049B                     	;# 
   562  049B                     	;# 
   563  049C                     	;# 
   564  049D                     	;# 
   565  049E                     	;# 
   566  049F                     	;# 
   567  0611                     	;# 
   568  0612                     	;# 
   569  0613                     	;# 
   570  0613                     	;# 
   571  0614                     	;# 
   572  0615                     	;# 
   573  0616                     	;# 
   574  0616                     	;# 
   575  0617                     	;# 
   576  0618                     	;# 
   577  0619                     	;# 
   578  0619                     	;# 
   579  061A                     	;# 
   580  061B                     	;# 
   581  061C                     	;# 
   582  061C                     	;# 
   583  0691                     	;# 
   584  0692                     	;# 
   585  0693                     	;# 
   586  0694                     	;# 
   587  0695                     	;# 
   588  0F0F                     	;# 
   589  0F10                     	;# 
   590  0F11                     	;# 
   591  0F12                     	;# 
   592  0F13                     	;# 
   593  0F14                     	;# 
   594  0F15                     	;# 
   595  0F16                     	;# 
   596  0F17                     	;# 
   597  0F18                     	;# 
   598  0F19                     	;# 
   599  0F1A                     	;# 
   600  0F1B                     	;# 
   601  0F1C                     	;# 
   602  0F1D                     	;# 
   603  0F1E                     	;# 
   604  0F1F                     	;# 
   605  0F20                     	;# 
   606  0F21                     	;# 
   607  0F22                     	;# 
   608  0F23                     	;# 
   609  0F24                     	;# 
   610  0F25                     	;# 
   611  0F26                     	;# 
   612  0F27                     	;# 
   613  0F28                     	;# 
   614  0F29                     	;# 
   615  0F2A                     	;# 
   616  0F2B                     	;# 
   617  0F2C                     	;# 
   618  0F2D                     	;# 
   619  0F2E                     	;# 
   620  0F2F                     	;# 
   621  0F8C                     	;# 
   622  0F8D                     	;# 
   623  0F91                     	;# 
   624  0F95                     	;# 
   625  0F96                     	;# 
   626  0F97                     	;# 
   627  0F9C                     	;# 
   628  0F9D                     	;# 
   629  0F9E                     	;# 
   630  0FE3                     	;# 
   631  0FE4                     	;# 
   632  0FE5                     	;# 
   633  0FE6                     	;# 
   634  0FE7                     	;# 
   635  0FE8                     	;# 
   636  0FE9                     	;# 
   637  0FEA                     	;# 
   638  0FEB                     	;# 
   639  0FED                     	;# 
   640  0FEE                     	;# 
   641  0FEF                     	;# 
   642  0000                     	;# 
   643  0001                     	;# 
   644  0002                     	;# 
   645  0003                     	;# 
   646  0004                     	;# 
   647  0005                     	;# 
   648  0006                     	;# 
   649  0007                     	;# 
   650  0008                     	;# 
   651  0009                     	;# 
   652  000A                     	;# 
   653  000B                     	;# 
   654  000C                     	;# 
   655  000D                     	;# 
   656  000E                     	;# 
   657  0011                     	;# 
   658  0012                     	;# 
   659  0013                     	;# 
   660  0015                     	;# 
   661  0016                     	;# 
   662  0016                     	;# 
   663  0017                     	;# 
   664  0018                     	;# 
   665  0019                     	;# 
   666  001A                     	;# 
   667  001B                     	;# 
   668  001C                     	;# 
   669  008C                     	;# 
   670  008D                     	;# 
   671  008E                     	;# 
   672  0091                     	;# 
   673  0092                     	;# 
   674  0093                     	;# 
   675  0095                     	;# 
   676  0096                     	;# 
   677  0097                     	;# 
   678  0099                     	;# 
   679  009A                     	;# 
   680  009B                     	;# 
   681  009B                     	;# 
   682  009C                     	;# 
   683  009D                     	;# 
   684  009E                     	;# 
   685  009F                     	;# 
   686  010C                     	;# 
   687  010D                     	;# 
   688  010E                     	;# 
   689  0111                     	;# 
   690  0112                     	;# 
   691  0113                     	;# 
   692  0114                     	;# 
   693  0115                     	;# 
   694  0116                     	;# 
   695  0117                     	;# 
   696  0118                     	;# 
   697  0119                     	;# 
   698  011D                     	;# 
   699  018C                     	;# 
   700  018D                     	;# 
   701  018E                     	;# 
   702  0191                     	;# 
   703  0191                     	;# 
   704  0192                     	;# 
   705  0193                     	;# 
   706  0193                     	;# 
   707  0194                     	;# 
   708  0195                     	;# 
   709  0196                     	;# 
   710  0197                     	;# 
   711  0199                     	;# 
   712  019A                     	;# 
   713  019B                     	;# 
   714  019B                     	;# 
   715  019C                     	;# 
   716  019D                     	;# 
   717  019E                     	;# 
   718  019F                     	;# 
   719  020C                     	;# 
   720  020D                     	;# 
   721  0211                     	;# 
   722  0211                     	;# 
   723  0212                     	;# 
   724  0212                     	;# 
   725  0213                     	;# 
   726  0213                     	;# 
   727  0214                     	;# 
   728  0214                     	;# 
   729  0215                     	;# 
   730  0215                     	;# 
   731  0215                     	;# 
   732  0216                     	;# 
   733  0216                     	;# 
   734  0217                     	;# 
   735  0217                     	;# 
   736  0391                     	;# 
   737  0392                     	;# 
   738  0393                     	;# 
   739  0394                     	;# 
   740  0395                     	;# 
   741  0396                     	;# 
   742  0498                     	;# 
   743  0498                     	;# 
   744  0499                     	;# 
   745  049A                     	;# 
   746  049B                     	;# 
   747  049B                     	;# 
   748  049C                     	;# 
   749  049D                     	;# 
   750  049E                     	;# 
   751  049F                     	;# 
   752  0611                     	;# 
   753  0612                     	;# 
   754  0613                     	;# 
   755  0613                     	;# 
   756  0614                     	;# 
   757  0615                     	;# 
   758  0616                     	;# 
   759  0616                     	;# 
   760  0617                     	;# 
   761  0618                     	;# 
   762  0619                     	;# 
   763  0619                     	;# 
   764  061A                     	;# 
   765  061B                     	;# 
   766  061C                     	;# 
   767  061C                     	;# 
   768  0691                     	;# 
   769  0692                     	;# 
   770  0693                     	;# 
   771  0694                     	;# 
   772  0695                     	;# 
   773  0F0F                     	;# 
   774  0F10                     	;# 
   775  0F11                     	;# 
   776  0F12                     	;# 
   777  0F13                     	;# 
   778  0F14                     	;# 
   779  0F15                     	;# 
   780  0F16                     	;# 
   781  0F17                     	;# 
   782  0F18                     	;# 
   783  0F19                     	;# 
   784  0F1A                     	;# 
   785  0F1B                     	;# 
   786  0F1C                     	;# 
   787  0F1D                     	;# 
   788  0F1E                     	;# 
   789  0F1F                     	;# 
   790  0F20                     	;# 
   791  0F21                     	;# 
   792  0F22                     	;# 
   793  0F23                     	;# 
   794  0F24                     	;# 
   795  0F25                     	;# 
   796  0F26                     	;# 
   797  0F27                     	;# 
   798  0F28                     	;# 
   799  0F29                     	;# 
   800  0F2A                     	;# 
   801  0F2B                     	;# 
   802  0F2C                     	;# 
   803  0F2D                     	;# 
   804  0F2E                     	;# 
   805  0F2F                     	;# 
   806  0F8C                     	;# 
   807  0F8D                     	;# 
   808  0F91                     	;# 
   809  0F95                     	;# 
   810  0F96                     	;# 
   811  0F97                     	;# 
   812  0F9C                     	;# 
   813  0F9D                     	;# 
   814  0F9E                     	;# 
   815  0FE3                     	;# 
   816  0FE4                     	;# 
   817  0FE5                     	;# 
   818  0FE6                     	;# 
   819  0FE7                     	;# 
   820  0FE8                     	;# 
   821  0FE9                     	;# 
   822  0FEA                     	;# 
   823  0FEB                     	;# 
   824  0FED                     	;# 
   825  0FEE                     	;# 
   826  0FEF                     	;# 
   827  0000                     	;# 
   828  0001                     	;# 
   829  0002                     	;# 
   830  0003                     	;# 
   831  0004                     	;# 
   832  0005                     	;# 
   833  0006                     	;# 
   834  0007                     	;# 
   835  0008                     	;# 
   836  0009                     	;# 
   837  000A                     	;# 
   838  000B                     	;# 
   839  000C                     	;# 
   840  000D                     	;# 
   841  000E                     	;# 
   842  0011                     	;# 
   843  0012                     	;# 
   844  0013                     	;# 
   845  0015                     	;# 
   846  0016                     	;# 
   847  0016                     	;# 
   848  0017                     	;# 
   849  0018                     	;# 
   850  0019                     	;# 
   851  001A                     	;# 
   852  001B                     	;# 
   853  001C                     	;# 
   854  008C                     	;# 
   855  008D                     	;# 
   856  008E                     	;# 
   857  0091                     	;# 
   858  0092                     	;# 
   859  0093                     	;# 
   860  0095                     	;# 
   861  0096                     	;# 
   862  0097                     	;# 
   863  0099                     	;# 
   864  009A                     	;# 
   865  009B                     	;# 
   866  009B                     	;# 
   867  009C                     	;# 
   868  009D                     	;# 
   869  009E                     	;# 
   870  009F                     	;# 
   871  010C                     	;# 
   872  010D                     	;# 
   873  010E                     	;# 
   874  0111                     	;# 
   875  0112                     	;# 
   876  0113                     	;# 
   877  0114                     	;# 
   878  0115                     	;# 
   879  0116                     	;# 
   880  0117                     	;# 
   881  0118                     	;# 
   882  0119                     	;# 
   883  011D                     	;# 
   884  018C                     	;# 
   885  018D                     	;# 
   886  018E                     	;# 
   887  0191                     	;# 
   888  0191                     	;# 
   889  0192                     	;# 
   890  0193                     	;# 
   891  0193                     	;# 
   892  0194                     	;# 
   893  0195                     	;# 
   894  0196                     	;# 
   895  0197                     	;# 
   896  0199                     	;# 
   897  019A                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019C                     	;# 
   901  019D                     	;# 
   902  019E                     	;# 
   903  019F                     	;# 
   904  020C                     	;# 
   905  020D                     	;# 
   906  0211                     	;# 
   907  0211                     	;# 
   908  0212                     	;# 
   909  0212                     	;# 
   910  0213                     	;# 
   911  0213                     	;# 
   912  0214                     	;# 
   913  0214                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0216                     	;# 
   918  0216                     	;# 
   919  0217                     	;# 
   920  0217                     	;# 
   921  0391                     	;# 
   922  0392                     	;# 
   923  0393                     	;# 
   924  0394                     	;# 
   925  0395                     	;# 
   926  0396                     	;# 
   927  0498                     	;# 
   928  0498                     	;# 
   929  0499                     	;# 
   930  049A                     	;# 
   931  049B                     	;# 
   932  049B                     	;# 
   933  049C                     	;# 
   934  049D                     	;# 
   935  049E                     	;# 
   936  049F                     	;# 
   937  0611                     	;# 
   938  0612                     	;# 
   939  0613                     	;# 
   940  0613                     	;# 
   941  0614                     	;# 
   942  0615                     	;# 
   943  0616                     	;# 
   944  0616                     	;# 
   945  0617                     	;# 
   946  0618                     	;# 
   947  0619                     	;# 
   948  0619                     	;# 
   949  061A                     	;# 
   950  061B                     	;# 
   951  061C                     	;# 
   952  061C                     	;# 
   953  0691                     	;# 
   954  0692                     	;# 
   955  0693                     	;# 
   956  0694                     	;# 
   957  0695                     	;# 
   958  0F0F                     	;# 
   959  0F10                     	;# 
   960  0F11                     	;# 
   961  0F12                     	;# 
   962  0F13                     	;# 
   963  0F14                     	;# 
   964  0F15                     	;# 
   965  0F16                     	;# 
   966  0F17                     	;# 
   967  0F18                     	;# 
   968  0F19                     	;# 
   969  0F1A                     	;# 
   970  0F1B                     	;# 
   971  0F1C                     	;# 
   972  0F1D                     	;# 
   973  0F1E                     	;# 
   974  0F1F                     	;# 
   975  0F20                     	;# 
   976  0F21                     	;# 
   977  0F22                     	;# 
   978  0F23                     	;# 
   979  0F24                     	;# 
   980  0F25                     	;# 
   981  0F26                     	;# 
   982  0F27                     	;# 
   983  0F28                     	;# 
   984  0F29                     	;# 
   985  0F2A                     	;# 
   986  0F2B                     	;# 
   987  0F2C                     	;# 
   988  0F2D                     	;# 
   989  0F2E                     	;# 
   990  0F2F                     	;# 
   991  0F8C                     	;# 
   992  0F8D                     	;# 
   993  0F91                     	;# 
   994  0F95                     	;# 
   995  0F96                     	;# 
   996  0F97                     	;# 
   997  0F9C                     	;# 
   998  0F9D                     	;# 
   999  0F9E                     	;# 
  1000  0FE3                     	;# 
  1001  0FE4                     	;# 
  1002  0FE5                     	;# 
  1003  0FE6                     	;# 
  1004  0FE7                     	;# 
  1005  0FE8                     	;# 
  1006  0FE9                     	;# 
  1007  0FEA                     	;# 
  1008  0FEB                     	;# 
  1009  0FED                     	;# 
  1010  0FEE                     	;# 
  1011  0FEF                     	;# 
  1012  0000                     	;# 
  1013  0001                     	;# 
  1014  0002                     	;# 
  1015  0003                     	;# 
  1016  0004                     	;# 
  1017  0005                     	;# 
  1018  0006                     	;# 
  1019  0007                     	;# 
  1020  0008                     	;# 
  1021  0009                     	;# 
  1022  000A                     	;# 
  1023  000B                     	;# 
  1024  000C                     	;# 
  1025  000D                     	;# 
  1026  000E                     	;# 
  1027  0011                     	;# 
  1028  0012                     	;# 
  1029  0013                     	;# 
  1030  0015                     	;# 
  1031  0016                     	;# 
  1032  0016                     	;# 
  1033  0017                     	;# 
  1034  0018                     	;# 
  1035  0019                     	;# 
  1036  001A                     	;# 
  1037  001B                     	;# 
  1038  001C                     	;# 
  1039  008C                     	;# 
  1040  008D                     	;# 
  1041  008E                     	;# 
  1042  0091                     	;# 
  1043  0092                     	;# 
  1044  0093                     	;# 
  1045  0095                     	;# 
  1046  0096                     	;# 
  1047  0097                     	;# 
  1048  0099                     	;# 
  1049  009A                     	;# 
  1050  009B                     	;# 
  1051  009B                     	;# 
  1052  009C                     	;# 
  1053  009D                     	;# 
  1054  009E                     	;# 
  1055  009F                     	;# 
  1056  010C                     	;# 
  1057  010D                     	;# 
  1058  010E                     	;# 
  1059  0111                     	;# 
  1060  0112                     	;# 
  1061  0113                     	;# 
  1062  0114                     	;# 
  1063  0115                     	;# 
  1064  0116                     	;# 
  1065  0117                     	;# 
  1066  0118                     	;# 
  1067  0119                     	;# 
  1068  011D                     	;# 
  1069  018C                     	;# 
  1070  018D                     	;# 
  1071  018E                     	;# 
  1072  0191                     	;# 
  1073  0191                     	;# 
  1074  0192                     	;# 
  1075  0193                     	;# 
  1076  0193                     	;# 
  1077  0194                     	;# 
  1078  0195                     	;# 
  1079  0196                     	;# 
  1080  0197                     	;# 
  1081  0199                     	;# 
  1082  019A                     	;# 
  1083  019B                     	;# 
  1084  019B                     	;# 
  1085  019C                     	;# 
  1086  019D                     	;# 
  1087  019E                     	;# 
  1088  019F                     	;# 
  1089  020C                     	;# 
  1090  020D                     	;# 
  1091  0211                     	;# 
  1092  0211                     	;# 
  1093  0212                     	;# 
  1094  0212                     	;# 
  1095  0213                     	;# 
  1096  0213                     	;# 
  1097  0214                     	;# 
  1098  0214                     	;# 
  1099  0215                     	;# 
  1100  0215                     	;# 
  1101  0215                     	;# 
  1102  0216                     	;# 
  1103  0216                     	;# 
  1104  0217                     	;# 
  1105  0217                     	;# 
  1106  0391                     	;# 
  1107  0392                     	;# 
  1108  0393                     	;# 
  1109  0394                     	;# 
  1110  0395                     	;# 
  1111  0396                     	;# 
  1112  0498                     	;# 
  1113  0498                     	;# 
  1114  0499                     	;# 
  1115  049A                     	;# 
  1116  049B                     	;# 
  1117  049B                     	;# 
  1118  049C                     	;# 
  1119  049D                     	;# 
  1120  049E                     	;# 
  1121  049F                     	;# 
  1122  0611                     	;# 
  1123  0612                     	;# 
  1124  0613                     	;# 
  1125  0613                     	;# 
  1126  0614                     	;# 
  1127  0615                     	;# 
  1128  0616                     	;# 
  1129  0616                     	;# 
  1130  0617                     	;# 
  1131  0618                     	;# 
  1132  0619                     	;# 
  1133  0619                     	;# 
  1134  061A                     	;# 
  1135  061B                     	;# 
  1136  061C                     	;# 
  1137  061C                     	;# 
  1138  0691                     	;# 
  1139  0692                     	;# 
  1140  0693                     	;# 
  1141  0694                     	;# 
  1142  0695                     	;# 
  1143  0F0F                     	;# 
  1144  0F10                     	;# 
  1145  0F11                     	;# 
  1146  0F12                     	;# 
  1147  0F13                     	;# 
  1148  0F14                     	;# 
  1149  0F15                     	;# 
  1150  0F16                     	;# 
  1151  0F17                     	;# 
  1152  0F18                     	;# 
  1153  0F19                     	;# 
  1154  0F1A                     	;# 
  1155  0F1B                     	;# 
  1156  0F1C                     	;# 
  1157  0F1D                     	;# 
  1158  0F1E                     	;# 
  1159  0F1F                     	;# 
  1160  0F20                     	;# 
  1161  0F21                     	;# 
  1162  0F22                     	;# 
  1163  0F23                     	;# 
  1164  0F24                     	;# 
  1165  0F25                     	;# 
  1166  0F26                     	;# 
  1167  0F27                     	;# 
  1168  0F28                     	;# 
  1169  0F29                     	;# 
  1170  0F2A                     	;# 
  1171  0F2B                     	;# 
  1172  0F2C                     	;# 
  1173  0F2D                     	;# 
  1174  0F2E                     	;# 
  1175  0F2F                     	;# 
  1176  0F8C                     	;# 
  1177  0F8D                     	;# 
  1178  0F91                     	;# 
  1179  0F95                     	;# 
  1180  0F96                     	;# 
  1181  0F97                     	;# 
  1182  0F9C                     	;# 
  1183  0F9D                     	;# 
  1184  0F9E                     	;# 
  1185  0FE3                     	;# 
  1186  0FE4                     	;# 
  1187  0FE5                     	;# 
  1188  0FE6                     	;# 
  1189  0FE7                     	;# 
  1190  0FE8                     	;# 
  1191  0FE9                     	;# 
  1192  0FEA                     	;# 
  1193  0FEB                     	;# 
  1194  0FED                     	;# 
  1195  0FEE                     	;# 
  1196  0FEF                     	;# 
  1197  0000                     	;# 
  1198  0001                     	;# 
  1199  0002                     	;# 
  1200  0003                     	;# 
  1201  0004                     	;# 
  1202  0005                     	;# 
  1203  0006                     	;# 
  1204  0007                     	;# 
  1205  0008                     	;# 
  1206  0009                     	;# 
  1207  000A                     	;# 
  1208  000B                     	;# 
  1209  000C                     	;# 
  1210  000D                     	;# 
  1211  000E                     	;# 
  1212  0011                     	;# 
  1213  0012                     	;# 
  1214  0013                     	;# 
  1215  0015                     	;# 
  1216  0016                     	;# 
  1217  0016                     	;# 
  1218  0017                     	;# 
  1219  0018                     	;# 
  1220  0019                     	;# 
  1221  001A                     	;# 
  1222  001B                     	;# 
  1223  001C                     	;# 
  1224  008C                     	;# 
  1225  008D                     	;# 
  1226  008E                     	;# 
  1227  0091                     	;# 
  1228  0092                     	;# 
  1229  0093                     	;# 
  1230  0095                     	;# 
  1231  0096                     	;# 
  1232  0097                     	;# 
  1233  0099                     	;# 
  1234  009A                     	;# 
  1235  009B                     	;# 
  1236  009B                     	;# 
  1237  009C                     	;# 
  1238  009D                     	;# 
  1239  009E                     	;# 
  1240  009F                     	;# 
  1241  010C                     	;# 
  1242  010D                     	;# 
  1243  010E                     	;# 
  1244  0111                     	;# 
  1245  0112                     	;# 
  1246  0113                     	;# 
  1247  0114                     	;# 
  1248  0115                     	;# 
  1249  0116                     	;# 
  1250  0117                     	;# 
  1251  0118                     	;# 
  1252  0119                     	;# 
  1253  011D                     	;# 
  1254  018C                     	;# 
  1255  018D                     	;# 
  1256  018E                     	;# 
  1257  0191                     	;# 
  1258  0191                     	;# 
  1259  0192                     	;# 
  1260  0193                     	;# 
  1261  0193                     	;# 
  1262  0194                     	;# 
  1263  0195                     	;# 
  1264  0196                     	;# 
  1265  0197                     	;# 
  1266  0199                     	;# 
  1267  019A                     	;# 
  1268  019B                     	;# 
  1269  019B                     	;# 
  1270  019C                     	;# 
  1271  019D                     	;# 
  1272  019E                     	;# 
  1273  019F                     	;# 
  1274  020C                     	;# 
  1275  020D                     	;# 
  1276  0211                     	;# 
  1277  0211                     	;# 
  1278  0212                     	;# 
  1279  0212                     	;# 
  1280  0213                     	;# 
  1281  0213                     	;# 
  1282  0214                     	;# 
  1283  0214                     	;# 
  1284  0215                     	;# 
  1285  0215                     	;# 
  1286  0215                     	;# 
  1287  0216                     	;# 
  1288  0216                     	;# 
  1289  0217                     	;# 
  1290  0217                     	;# 
  1291  0391                     	;# 
  1292  0392                     	;# 
  1293  0393                     	;# 
  1294  0394                     	;# 
  1295  0395                     	;# 
  1296  0396                     	;# 
  1297  0498                     	;# 
  1298  0498                     	;# 
  1299  0499                     	;# 
  1300  049A                     	;# 
  1301  049B                     	;# 
  1302  049B                     	;# 
  1303  049C                     	;# 
  1304  049D                     	;# 
  1305  049E                     	;# 
  1306  049F                     	;# 
  1307  0611                     	;# 
  1308  0612                     	;# 
  1309  0613                     	;# 
  1310  0613                     	;# 
  1311  0614                     	;# 
  1312  0615                     	;# 
  1313  0616                     	;# 
  1314  0616                     	;# 
  1315  0617                     	;# 
  1316  0618                     	;# 
  1317  0619                     	;# 
  1318  0619                     	;# 
  1319  061A                     	;# 
  1320  061B                     	;# 
  1321  061C                     	;# 
  1322  061C                     	;# 
  1323  0691                     	;# 
  1324  0692                     	;# 
  1325  0693                     	;# 
  1326  0694                     	;# 
  1327  0695                     	;# 
  1328  0F0F                     	;# 
  1329  0F10                     	;# 
  1330  0F11                     	;# 
  1331  0F12                     	;# 
  1332  0F13                     	;# 
  1333  0F14                     	;# 
  1334  0F15                     	;# 
  1335  0F16                     	;# 
  1336  0F17                     	;# 
  1337  0F18                     	;# 
  1338  0F19                     	;# 
  1339  0F1A                     	;# 
  1340  0F1B                     	;# 
  1341  0F1C                     	;# 
  1342  0F1D                     	;# 
  1343  0F1E                     	;# 
  1344  0F1F                     	;# 
  1345  0F20                     	;# 
  1346  0F21                     	;# 
  1347  0F22                     	;# 
  1348  0F23                     	;# 
  1349  0F24                     	;# 
  1350  0F25                     	;# 
  1351  0F26                     	;# 
  1352  0F27                     	;# 
  1353  0F28                     	;# 
  1354  0F29                     	;# 
  1355  0F2A                     	;# 
  1356  0F2B                     	;# 
  1357  0F2C                     	;# 
  1358  0F2D                     	;# 
  1359  0F2E                     	;# 
  1360  0F2F                     	;# 
  1361  0F8C                     	;# 
  1362  0F8D                     	;# 
  1363  0F91                     	;# 
  1364  0F95                     	;# 
  1365  0F96                     	;# 
  1366  0F97                     	;# 
  1367  0F9C                     	;# 
  1368  0F9D                     	;# 
  1369  0F9E                     	;# 
  1370  0FE3                     	;# 
  1371  0FE4                     	;# 
  1372  0FE5                     	;# 
  1373  0FE6                     	;# 
  1374  0FE7                     	;# 
  1375  0FE8                     	;# 
  1376  0FE9                     	;# 
  1377  0FEA                     	;# 
  1378  0FEB                     	;# 
  1379  0FED                     	;# 
  1380  0FEE                     	;# 
  1381  0FEF                     	;# 
  1382  0000                     	;# 
  1383  0001                     	;# 
  1384  0002                     	;# 
  1385  0003                     	;# 
  1386  0004                     	;# 
  1387  0005                     	;# 
  1388  0006                     	;# 
  1389  0007                     	;# 
  1390  0008                     	;# 
  1391  0009                     	;# 
  1392  000A                     	;# 
  1393  000B                     	;# 
  1394  000C                     	;# 
  1395  000D                     	;# 
  1396  000E                     	;# 
  1397  0011                     	;# 
  1398  0012                     	;# 
  1399  0013                     	;# 
  1400  0015                     	;# 
  1401  0016                     	;# 
  1402  0016                     	;# 
  1403  0017                     	;# 
  1404  0018                     	;# 
  1405  0019                     	;# 
  1406  001A                     	;# 
  1407  001B                     	;# 
  1408  001C                     	;# 
  1409  008C                     	;# 
  1410  008D                     	;# 
  1411  008E                     	;# 
  1412  0091                     	;# 
  1413  0092                     	;# 
  1414  0093                     	;# 
  1415  0095                     	;# 
  1416  0096                     	;# 
  1417  0097                     	;# 
  1418  0099                     	;# 
  1419  009A                     	;# 
  1420  009B                     	;# 
  1421  009B                     	;# 
  1422  009C                     	;# 
  1423  009D                     	;# 
  1424  009E                     	;# 
  1425  009F                     	;# 
  1426  010C                     	;# 
  1427  010D                     	;# 
  1428  010E                     	;# 
  1429  0111                     	;# 
  1430  0112                     	;# 
  1431  0113                     	;# 
  1432  0114                     	;# 
  1433  0115                     	;# 
  1434  0116                     	;# 
  1435  0117                     	;# 
  1436  0118                     	;# 
  1437  0119                     	;# 
  1438  011D                     	;# 
  1439  018C                     	;# 
  1440  018D                     	;# 
  1441  018E                     	;# 
  1442  0191                     	;# 
  1443  0191                     	;# 
  1444  0192                     	;# 
  1445  0193                     	;# 
  1446  0193                     	;# 
  1447  0194                     	;# 
  1448  0195                     	;# 
  1449  0196                     	;# 
  1450  0197                     	;# 
  1451  0199                     	;# 
  1452  019A                     	;# 
  1453  019B                     	;# 
  1454  019B                     	;# 
  1455  019C                     	;# 
  1456  019D                     	;# 
  1457  019E                     	;# 
  1458  019F                     	;# 
  1459  020C                     	;# 
  1460  020D                     	;# 
  1461  0211                     	;# 
  1462  0211                     	;# 
  1463  0212                     	;# 
  1464  0212                     	;# 
  1465  0213                     	;# 
  1466  0213                     	;# 
  1467  0214                     	;# 
  1468  0214                     	;# 
  1469  0215                     	;# 
  1470  0215                     	;# 
  1471  0215                     	;# 
  1472  0216                     	;# 
  1473  0216                     	;# 
  1474  0217                     	;# 
  1475  0217                     	;# 
  1476  0391                     	;# 
  1477  0392                     	;# 
  1478  0393                     	;# 
  1479  0394                     	;# 
  1480  0395                     	;# 
  1481  0396                     	;# 
  1482  0498                     	;# 
  1483  0498                     	;# 
  1484  0499                     	;# 
  1485  049A                     	;# 
  1486  049B                     	;# 
  1487  049B                     	;# 
  1488  049C                     	;# 
  1489  049D                     	;# 
  1490  049E                     	;# 
  1491  049F                     	;# 
  1492  0611                     	;# 
  1493  0612                     	;# 
  1494  0613                     	;# 
  1495  0613                     	;# 
  1496  0614                     	;# 
  1497  0615                     	;# 
  1498  0616                     	;# 
  1499  0616                     	;# 
  1500  0617                     	;# 
  1501  0618                     	;# 
  1502  0619                     	;# 
  1503  0619                     	;# 
  1504  061A                     	;# 
  1505  061B                     	;# 
  1506  061C                     	;# 
  1507  061C                     	;# 
  1508  0691                     	;# 
  1509  0692                     	;# 
  1510  0693                     	;# 
  1511  0694                     	;# 
  1512  0695                     	;# 
  1513  0F0F                     	;# 
  1514  0F10                     	;# 
  1515  0F11                     	;# 
  1516  0F12                     	;# 
  1517  0F13                     	;# 
  1518  0F14                     	;# 
  1519  0F15                     	;# 
  1520  0F16                     	;# 
  1521  0F17                     	;# 
  1522  0F18                     	;# 
  1523  0F19                     	;# 
  1524  0F1A                     	;# 
  1525  0F1B                     	;# 
  1526  0F1C                     	;# 
  1527  0F1D                     	;# 
  1528  0F1E                     	;# 
  1529  0F1F                     	;# 
  1530  0F20                     	;# 
  1531  0F21                     	;# 
  1532  0F22                     	;# 
  1533  0F23                     	;# 
  1534  0F24                     	;# 
  1535  0F25                     	;# 
  1536  0F26                     	;# 
  1537  0F27                     	;# 
  1538  0F28                     	;# 
  1539  0F29                     	;# 
  1540  0F2A                     	;# 
  1541  0F2B                     	;# 
  1542  0F2C                     	;# 
  1543  0F2D                     	;# 
  1544  0F2E                     	;# 
  1545  0F2F                     	;# 
  1546  0F8C                     	;# 
  1547  0F8D                     	;# 
  1548  0F91                     	;# 
  1549  0F95                     	;# 
  1550  0F96                     	;# 
  1551  0F97                     	;# 
  1552  0F9C                     	;# 
  1553  0F9D                     	;# 
  1554  0F9E                     	;# 
  1555  0FE3                     	;# 
  1556  0FE4                     	;# 
  1557  0FE5                     	;# 
  1558  0FE6                     	;# 
  1559  0FE7                     	;# 
  1560  0FE8                     	;# 
  1561  0FE9                     	;# 
  1562  0FEA                     	;# 
  1563  0FEB                     	;# 
  1564  0FED                     	;# 
  1565  0FEE                     	;# 
  1566  0FEF                     	;# 
  1567  0000                     	;# 
  1568  0001                     	;# 
  1569  0002                     	;# 
  1570  0003                     	;# 
  1571  0004                     	;# 
  1572  0005                     	;# 
  1573  0006                     	;# 
  1574  0007                     	;# 
  1575  0008                     	;# 
  1576  0009                     	;# 
  1577  000A                     	;# 
  1578  000B                     	;# 
  1579  000C                     	;# 
  1580  000D                     	;# 
  1581  000E                     	;# 
  1582  0011                     	;# 
  1583  0012                     	;# 
  1584  0013                     	;# 
  1585  0015                     	;# 
  1586  0016                     	;# 
  1587  0016                     	;# 
  1588  0017                     	;# 
  1589  0018                     	;# 
  1590  0019                     	;# 
  1591  001A                     	;# 
  1592  001B                     	;# 
  1593  001C                     	;# 
  1594  008C                     	;# 
  1595  008D                     	;# 
  1596  008E                     	;# 
  1597  0091                     	;# 
  1598  0092                     	;# 
  1599  0093                     	;# 
  1600  0095                     	;# 
  1601  0096                     	;# 
  1602  0097                     	;# 
  1603  0099                     	;# 
  1604  009A                     	;# 
  1605  009B                     	;# 
  1606  009B                     	;# 
  1607  009C                     	;# 
  1608  009D                     	;# 
  1609  009E                     	;# 
  1610  009F                     	;# 
  1611  010C                     	;# 
  1612  010D                     	;# 
  1613  010E                     	;# 
  1614  0111                     	;# 
  1615  0112                     	;# 
  1616  0113                     	;# 
  1617  0114                     	;# 
  1618  0115                     	;# 
  1619  0116                     	;# 
  1620  0117                     	;# 
  1621  0118                     	;# 
  1622  0119                     	;# 
  1623  011D                     	;# 
  1624  018C                     	;# 
  1625  018D                     	;# 
  1626  018E                     	;# 
  1627  0191                     	;# 
  1628  0191                     	;# 
  1629  0192                     	;# 
  1630  0193                     	;# 
  1631  0193                     	;# 
  1632  0194                     	;# 
  1633  0195                     	;# 
  1634  0196                     	;# 
  1635  0197                     	;# 
  1636  0199                     	;# 
  1637  019A                     	;# 
  1638  019B                     	;# 
  1639  019B                     	;# 
  1640  019C                     	;# 
  1641  019D                     	;# 
  1642  019E                     	;# 
  1643  019F                     	;# 
  1644  020C                     	;# 
  1645  020D                     	;# 
  1646  0211                     	;# 
  1647  0211                     	;# 
  1648  0212                     	;# 
  1649  0212                     	;# 
  1650  0213                     	;# 
  1651  0213                     	;# 
  1652  0214                     	;# 
  1653  0214                     	;# 
  1654  0215                     	;# 
  1655  0215                     	;# 
  1656  0215                     	;# 
  1657  0216                     	;# 
  1658  0216                     	;# 
  1659  0217                     	;# 
  1660  0217                     	;# 
  1661  0391                     	;# 
  1662  0392                     	;# 
  1663  0393                     	;# 
  1664  0394                     	;# 
  1665  0395                     	;# 
  1666  0396                     	;# 
  1667  0498                     	;# 
  1668  0498                     	;# 
  1669  0499                     	;# 
  1670  049A                     	;# 
  1671  049B                     	;# 
  1672  049B                     	;# 
  1673  049C                     	;# 
  1674  049D                     	;# 
  1675  049E                     	;# 
  1676  049F                     	;# 
  1677  0611                     	;# 
  1678  0612                     	;# 
  1679  0613                     	;# 
  1680  0613                     	;# 
  1681  0614                     	;# 
  1682  0615                     	;# 
  1683  0616                     	;# 
  1684  0616                     	;# 
  1685  0617                     	;# 
  1686  0618                     	;# 
  1687  0619                     	;# 
  1688  0619                     	;# 
  1689  061A                     	;# 
  1690  061B                     	;# 
  1691  061C                     	;# 
  1692  061C                     	;# 
  1693  0691                     	;# 
  1694  0692                     	;# 
  1695  0693                     	;# 
  1696  0694                     	;# 
  1697  0695                     	;# 
  1698  0F0F                     	;# 
  1699  0F10                     	;# 
  1700  0F11                     	;# 
  1701  0F12                     	;# 
  1702  0F13                     	;# 
  1703  0F14                     	;# 
  1704  0F15                     	;# 
  1705  0F16                     	;# 
  1706  0F17                     	;# 
  1707  0F18                     	;# 
  1708  0F19                     	;# 
  1709  0F1A                     	;# 
  1710  0F1B                     	;# 
  1711  0F1C                     	;# 
  1712  0F1D                     	;# 
  1713  0F1E                     	;# 
  1714  0F1F                     	;# 
  1715  0F20                     	;# 
  1716  0F21                     	;# 
  1717  0F22                     	;# 
  1718  0F23                     	;# 
  1719  0F24                     	;# 
  1720  0F25                     	;# 
  1721  0F26                     	;# 
  1722  0F27                     	;# 
  1723  0F28                     	;# 
  1724  0F29                     	;# 
  1725  0F2A                     	;# 
  1726  0F2B                     	;# 
  1727  0F2C                     	;# 
  1728  0F2D                     	;# 
  1729  0F2E                     	;# 
  1730  0F2F                     	;# 
  1731  0F8C                     	;# 
  1732  0F8D                     	;# 
  1733  0F91                     	;# 
  1734  0F95                     	;# 
  1735  0F96                     	;# 
  1736  0F97                     	;# 
  1737  0F9C                     	;# 
  1738  0F9D                     	;# 
  1739  0F9E                     	;# 
  1740  0FE3                     	;# 
  1741  0FE4                     	;# 
  1742  0FE5                     	;# 
  1743  0FE6                     	;# 
  1744  0FE7                     	;# 
  1745  0FE8                     	;# 
  1746  0FE9                     	;# 
  1747  0FEA                     	;# 
  1748  0FEB                     	;# 
  1749  0FED                     	;# 
  1750  0FEE                     	;# 
  1751  0FEF                     	;# 
  1752  0000                     	;# 
  1753  0001                     	;# 
  1754  0002                     	;# 
  1755  0003                     	;# 
  1756  0004                     	;# 
  1757  0005                     	;# 
  1758  0006                     	;# 
  1759  0007                     	;# 
  1760  0008                     	;# 
  1761  0009                     	;# 
  1762  000A                     	;# 
  1763  000B                     	;# 
  1764  000C                     	;# 
  1765  000D                     	;# 
  1766  000E                     	;# 
  1767  0011                     	;# 
  1768  0012                     	;# 
  1769  0013                     	;# 
  1770  0015                     	;# 
  1771  0016                     	;# 
  1772  0016                     	;# 
  1773  0017                     	;# 
  1774  0018                     	;# 
  1775  0019                     	;# 
  1776  001A                     	;# 
  1777  001B                     	;# 
  1778  001C                     	;# 
  1779  008C                     	;# 
  1780  008D                     	;# 
  1781  008E                     	;# 
  1782  0091                     	;# 
  1783  0092                     	;# 
  1784  0093                     	;# 
  1785  0095                     	;# 
  1786  0096                     	;# 
  1787  0097                     	;# 
  1788  0099                     	;# 
  1789  009A                     	;# 
  1790  009B                     	;# 
  1791  009B                     	;# 
  1792  009C                     	;# 
  1793  009D                     	;# 
  1794  009E                     	;# 
  1795  009F                     	;# 
  1796  010C                     	;# 
  1797  010D                     	;# 
  1798  010E                     	;# 
  1799  0111                     	;# 
  1800  0112                     	;# 
  1801  0113                     	;# 
  1802  0114                     	;# 
  1803  0115                     	;# 
  1804  0116                     	;# 
  1805  0117                     	;# 
  1806  0118                     	;# 
  1807  0119                     	;# 
  1808  011D                     	;# 
  1809  018C                     	;# 
  1810  018D                     	;# 
  1811  018E                     	;# 
  1812  0191                     	;# 
  1813  0191                     	;# 
  1814  0192                     	;# 
  1815  0193                     	;# 
  1816  0193                     	;# 
  1817  0194                     	;# 
  1818  0195                     	;# 
  1819  0196                     	;# 
  1820  0197                     	;# 
  1821  0199                     	;# 
  1822  019A                     	;# 
  1823  019B                     	;# 
  1824  019B                     	;# 
  1825  019C                     	;# 
  1826  019D                     	;# 
  1827  019E                     	;# 
  1828  019F                     	;# 
  1829  020C                     	;# 
  1830  020D                     	;# 
  1831  0211                     	;# 
  1832  0211                     	;# 
  1833  0212                     	;# 
  1834  0212                     	;# 
  1835  0213                     	;# 
  1836  0213                     	;# 
  1837  0214                     	;# 
  1838  0214                     	;# 
  1839  0215                     	;# 
  1840  0215                     	;# 
  1841  0215                     	;# 
  1842  0216                     	;# 
  1843  0216                     	;# 
  1844  0217                     	;# 
  1845  0217                     	;# 
  1846  0391                     	;# 
  1847  0392                     	;# 
  1848  0393                     	;# 
  1849  0394                     	;# 
  1850  0395                     	;# 
  1851  0396                     	;# 
  1852  0498                     	;# 
  1853  0498                     	;# 
  1854  0499                     	;# 
  1855  049A                     	;# 
  1856  049B                     	;# 
  1857  049B                     	;# 
  1858  049C                     	;# 
  1859  049D                     	;# 
  1860  049E                     	;# 
  1861  049F                     	;# 
  1862  0611                     	;# 
  1863  0612                     	;# 
  1864  0613                     	;# 
  1865  0613                     	;# 
  1866  0614                     	;# 
  1867  0615                     	;# 
  1868  0616                     	;# 
  1869  0616                     	;# 
  1870  0617                     	;# 
  1871  0618                     	;# 
  1872  0619                     	;# 
  1873  0619                     	;# 
  1874  061A                     	;# 
  1875  061B                     	;# 
  1876  061C                     	;# 
  1877  061C                     	;# 
  1878  0691                     	;# 
  1879  0692                     	;# 
  1880  0693                     	;# 
  1881  0694                     	;# 
  1882  0695                     	;# 
  1883  0F0F                     	;# 
  1884  0F10                     	;# 
  1885  0F11                     	;# 
  1886  0F12                     	;# 
  1887  0F13                     	;# 
  1888  0F14                     	;# 
  1889  0F15                     	;# 
  1890  0F16                     	;# 
  1891  0F17                     	;# 
  1892  0F18                     	;# 
  1893  0F19                     	;# 
  1894  0F1A                     	;# 
  1895  0F1B                     	;# 
  1896  0F1C                     	;# 
  1897  0F1D                     	;# 
  1898  0F1E                     	;# 
  1899  0F1F                     	;# 
  1900  0F20                     	;# 
  1901  0F21                     	;# 
  1902  0F22                     	;# 
  1903  0F23                     	;# 
  1904  0F24                     	;# 
  1905  0F25                     	;# 
  1906  0F26                     	;# 
  1907  0F27                     	;# 
  1908  0F28                     	;# 
  1909  0F29                     	;# 
  1910  0F2A                     	;# 
  1911  0F2B                     	;# 
  1912  0F2C                     	;# 
  1913  0F2D                     	;# 
  1914  0F2E                     	;# 
  1915  0F2F                     	;# 
  1916  0F8C                     	;# 
  1917  0F8D                     	;# 
  1918  0F91                     	;# 
  1919  0F95                     	;# 
  1920  0F96                     	;# 
  1921  0F97                     	;# 
  1922  0F9C                     	;# 
  1923  0F9D                     	;# 
  1924  0F9E                     	;# 
  1925  0FE3                     	;# 
  1926  0FE4                     	;# 
  1927  0FE5                     	;# 
  1928  0FE6                     	;# 
  1929  0FE7                     	;# 
  1930  0FE8                     	;# 
  1931  0FE9                     	;# 
  1932  0FEA                     	;# 
  1933  0FEB                     	;# 
  1934  0FED                     	;# 
  1935  0FEE                     	;# 
  1936  0FEF                     	;# 
  1937  0000                     	;# 
  1938  0001                     	;# 
  1939  0002                     	;# 
  1940  0003                     	;# 
  1941  0004                     	;# 
  1942  0005                     	;# 
  1943  0006                     	;# 
  1944  0007                     	;# 
  1945  0008                     	;# 
  1946  0009                     	;# 
  1947  000A                     	;# 
  1948  000B                     	;# 
  1949  000C                     	;# 
  1950  000D                     	;# 
  1951  000E                     	;# 
  1952  0011                     	;# 
  1953  0012                     	;# 
  1954  0013                     	;# 
  1955  0015                     	;# 
  1956  0016                     	;# 
  1957  0016                     	;# 
  1958  0017                     	;# 
  1959  0018                     	;# 
  1960  0019                     	;# 
  1961  001A                     	;# 
  1962  001B                     	;# 
  1963  001C                     	;# 
  1964  008C                     	;# 
  1965  008D                     	;# 
  1966  008E                     	;# 
  1967  0091                     	;# 
  1968  0092                     	;# 
  1969  0093                     	;# 
  1970  0095                     	;# 
  1971  0096                     	;# 
  1972  0097                     	;# 
  1973  0099                     	;# 
  1974  009A                     	;# 
  1975  009B                     	;# 
  1976  009B                     	;# 
  1977  009C                     	;# 
  1978  009D                     	;# 
  1979  009E                     	;# 
  1980  009F                     	;# 
  1981  010C                     	;# 
  1982  010D                     	;# 
  1983  010E                     	;# 
  1984  0111                     	;# 
  1985  0112                     	;# 
  1986  0113                     	;# 
  1987  0114                     	;# 
  1988  0115                     	;# 
  1989  0116                     	;# 
  1990  0117                     	;# 
  1991  0118                     	;# 
  1992  0119                     	;# 
  1993  011D                     	;# 
  1994  018C                     	;# 
  1995  018D                     	;# 
  1996  018E                     	;# 
  1997  0191                     	;# 
  1998  0191                     	;# 
  1999  0192                     	;# 
  2000  0193                     	;# 
  2001  0193                     	;# 
  2002  0194                     	;# 
  2003  0195                     	;# 
  2004  0196                     	;# 
  2005  0197                     	;# 
  2006  0199                     	;# 
  2007  019A                     	;# 
  2008  019B                     	;# 
  2009  019B                     	;# 
  2010  019C                     	;# 
  2011  019D                     	;# 
  2012  019E                     	;# 
  2013  019F                     	;# 
  2014  020C                     	;# 
  2015  020D                     	;# 
  2016  0211                     	;# 
  2017  0211                     	;# 
  2018  0212                     	;# 
  2019  0212                     	;# 
  2020  0213                     	;# 
  2021  0213                     	;# 
  2022  0214                     	;# 
  2023  0214                     	;# 
  2024  0215                     	;# 
  2025  0215                     	;# 
  2026  0215                     	;# 
  2027  0216                     	;# 
  2028  0216                     	;# 
  2029  0217                     	;# 
  2030  0217                     	;# 
  2031  0391                     	;# 
  2032  0392                     	;# 
  2033  0393                     	;# 
  2034  0394                     	;# 
  2035  0395                     	;# 
  2036  0396                     	;# 
  2037  0498                     	;# 
  2038  0498                     	;# 
  2039  0499                     	;# 
  2040  049A                     	;# 
  2041  049B                     	;# 
  2042  049B                     	;# 
  2043  049C                     	;# 
  2044  049D                     	;# 
  2045  049E                     	;# 
  2046  049F                     	;# 
  2047  0611                     	;# 
  2048  0612                     	;# 
  2049  0613                     	;# 
  2050  0613                     	;# 
  2051  0614                     	;# 
  2052  0615                     	;# 
  2053  0616                     	;# 
  2054  0616                     	;# 
  2055  0617                     	;# 
  2056  0618                     	;# 
  2057  0619                     	;# 
  2058  0619                     	;# 
  2059  061A                     	;# 
  2060  061B                     	;# 
  2061  061C                     	;# 
  2062  061C                     	;# 
  2063  0691                     	;# 
  2064  0692                     	;# 
  2065  0693                     	;# 
  2066  0694                     	;# 
  2067  0695                     	;# 
  2068  0F0F                     	;# 
  2069  0F10                     	;# 
  2070  0F11                     	;# 
  2071  0F12                     	;# 
  2072  0F13                     	;# 
  2073  0F14                     	;# 
  2074  0F15                     	;# 
  2075  0F16                     	;# 
  2076  0F17                     	;# 
  2077  0F18                     	;# 
  2078  0F19                     	;# 
  2079  0F1A                     	;# 
  2080  0F1B                     	;# 
  2081  0F1C                     	;# 
  2082  0F1D                     	;# 
  2083  0F1E                     	;# 
  2084  0F1F                     	;# 
  2085  0F20                     	;# 
  2086  0F21                     	;# 
  2087  0F22                     	;# 
  2088  0F23                     	;# 
  2089  0F24                     	;# 
  2090  0F25                     	;# 
  2091  0F26                     	;# 
  2092  0F27                     	;# 
  2093  0F28                     	;# 
  2094  0F29                     	;# 
  2095  0F2A                     	;# 
  2096  0F2B                     	;# 
  2097  0F2C                     	;# 
  2098  0F2D                     	;# 
  2099  0F2E                     	;# 
  2100  0F2F                     	;# 
  2101  0F8C                     	;# 
  2102  0F8D                     	;# 
  2103  0F91                     	;# 
  2104  0F95                     	;# 
  2105  0F96                     	;# 
  2106  0F97                     	;# 
  2107  0F9C                     	;# 
  2108  0F9D                     	;# 
  2109  0F9E                     	;# 
  2110  0FE3                     	;# 
  2111  0FE4                     	;# 
  2112  0FE5                     	;# 
  2113  0FE6                     	;# 
  2114  0FE7                     	;# 
  2115  0FE8                     	;# 
  2116  0FE9                     	;# 
  2117  0FEA                     	;# 
  2118  0FEB                     	;# 
  2119  0FED                     	;# 
  2120  0FEE                     	;# 
  2121  0FEF                     	;# 
  2122                           
  2123                           	psect	idataBANK0
  2124  06EE                     __pidataBANK0:	
  2125                           
  2126                           ;initializer for AutoMode@flag
  2127  06EE  3401               	retlw	1
  2128  0015                     _TMR0	set	21
  2129  001B                     _PR2	set	27
  2130  001A                     _TMR2	set	26
  2131  001C                     _T2CONbits	set	28
  2132  0019                     _T1GCONbits	set	25
  2133  0018                     _T1CONbits	set	24
  2134  0011                     _PIR1bits	set	17
  2135  000B                     _INTCONbits	set	11
  2136  005A                     _TMR0IF	set	90
  2137  006F                     _RB7	set	111
  2138  008B                     _SSP1IF	set	139
  2139  009A                     _OSCSTATbits	set	154
  2140  0099                     _OSCCONbits	set	153
  2141  0091                     _PIE1bits	set	145
  2142  0095                     _OPTION_REG	set	149
  2143  008E                     _TRISCbits	set	142
  2144  008D                     _TRISBbits	set	141
  2145  008C                     _TRISAbits	set	140
  2146  010E                     _LATCbits	set	270
  2147  010C                     _LATAbits	set	268
  2148  018E                     _ANSELC	set	398
  2149  018D                     _ANSELB	set	397
  2150  018C                     _ANSELA	set	396
  2151  0211                     _SSP1BUF	set	529
  2152  0216                     _SSP1CON2bits	set	534
  2153  0212                     _SSP1ADD	set	530
  2154  0217                     _SSP1CON3bits	set	535
  2155  0215                     _SSP1CON1bits	set	533
  2156  0214                     _SSP1STATbits	set	532
  2157  020D                     _WPUBbits	set	525
  2158  0396                     _IOCBFbits	set	918
  2159  0396                     _IOCBF	set	918
  2160  0393                     _IOCAF	set	915
  2161  0394                     _IOCBPbits	set	916
  2162  0395                     _IOCBNbits	set	917
  2163  061A                     _PWM4DCL	set	1562
  2164  061B                     _PWM4DCH	set	1563
  2165  061C                     _PWM4CONbits	set	1564
  2166  0617                     _PWM3DCL	set	1559
  2167  0618                     _PWM3DCH	set	1560
  2168  0619                     _PWM3CONbits	set	1561
  2169  0614                     _PWM2DCL	set	1556
  2170  0615                     _PWM2DCH	set	1557
  2171  0616                     _PWM2CONbits	set	1558
  2172  0611                     _PWM1DCL	set	1553
  2173  0612                     _PWM1DCH	set	1554
  2174  0613                     _PWM1CONbits	set	1555
  2175                           
  2176                           ; #config settings
  2177  0000                     
  2178                           	psect	cinit
  2179  001F                     start_initialization:	
  2180  001F                     __initialization:	
  2181                           
  2182                           ; Initialize objects allocated to BANK0
  2183  001F  3186  26EE  3180   	fcall	__pidataBANK0	;fetch initializer
  2184  0022  00EB               	movwf	__pdataBANK0& (0+127)
  2185                           
  2186                           ; Clear objects allocated to COMMON
  2187  0023  01F9               	clrf	__pbssCOMMON& (0+127)
  2188  0024  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  2189  0025  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  2190  0026  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  2191  0027  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  2192                           
  2193                           ; Clear objects allocated to BANK0
  2194  0028  3020               	movlw	low __pbssBANK0
  2195  0029  0084               	movwf	4
  2196  002A  3000               	movlw	high __pbssBANK0
  2197  002B  0085               	movwf	5
  2198  002C  302D               	movlw	45
  2199  002D  3186  26CD         	fcall	clear_ram0
  2200  002F                     end_of_initialization:	
  2201                           ;End of C runtime variable initialization code
  2202                           
  2203  002F                     __end_of__initialization:	
  2204  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2205  0030  0020               	movlb	0
  2206  0031  3185  2D70         	ljmp	_main	;jump to C main() function
  2207                           
  2208                           	psect	bssCOMMON
  2209  0079                     __pbssCOMMON:	
  2210  0079                     _gRunPara:	
  2211  0079                     	ds	3
  2212  007C                     _index:	
  2213  007C                     	ds	1
  2214  007D                     _state:	
  2215  007D                     	ds	1
  2216                           
  2217                           	psect	bssBANK0
  2218  0020                     __pbssBANK0:	
  2219  0020                     _gLedRunPara:	
  2220  0020                     	ds	14
  2221  002E                     _gCurrentTime:	
  2222  002E                     	ds	4
  2223  0032                     _rcv:	
  2224  0032                     	ds	1
  2225  0033                     _gRunState:	
  2226  0033                     	ds	1
  2227  0034                     _IR_ReveiveDataStructure:	
  2228  0034                     	ds	14
  2229  0042                     _gLedPara:	
  2230  0042                     	ds	11
  2231                           
  2232                           	psect	dataBANK0
  2233  006B                     __pdataBANK0:	
  2234  006B                     AutoMode@flag:	
  2235  006B                     	ds	1
  2236                           
  2237                           	psect	clrtext
  2238  06CD                     clear_ram0:	
  2239                           ;	Called with FSR0 containing the base address, and
  2240                           ;	WREG with the size to clear
  2241                           
  2242  06CD  0064               	clrwdt	;clear the watchdog before getting into this loop
  2243  06CE                     clrloop0:	
  2244  06CE  0180               	clrf	0	;clear RAM location pointed to by FSR
  2245  06CF  3101               	addfsr 0,1
  2246  06D0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2247  06D1  2ECE               	goto	clrloop0	;have we reached the end yet?
  2248  06D2  3400               	retlw	0	;all done for this memory range, return
  2249                           
  2250                           	psect	cstackCOMMON
  2251  0070                     __pcstackCOMMON:	
  2252  0070                     ?_SYSTEM_Initialize:	
  2253  0070                     ?_LedParaInit:	
  2254                           ; 1 bytes @ 0x0
  2255                           
  2256  0070                     ?_TMR1_StartTimer:	
  2257                           ; 1 bytes @ 0x0
  2258                           
  2259  0070                     ?_TMR2_StartTimer:	
  2260                           ; 1 bytes @ 0x0
  2261                           
  2262  0070                     ?_ResetState:	
  2263                           ; 1 bytes @ 0x0
  2264                           
  2265  0070                     ?_LedUpdate:	
  2266                           ; 1 bytes @ 0x0
  2267                           
  2268  0070                     ?_UpdateRTC:	
  2269                           ; 1 bytes @ 0x0
  2270                           
  2271  0070                     ?_manualMode:	
  2272                           ; 1 bytes @ 0x0
  2273                           
  2274  0070                     ?_AutoMode:	
  2275                           ; 1 bytes @ 0x0
  2276                           
  2277  0070                     ?_Decode:	
  2278                           ; 1 bytes @ 0x0
  2279                           
  2280  0070                     ?_RunRTC:	
  2281                           ; 1 bytes @ 0x0
  2282                           
  2283  0070                     ??_RunRTC:	
  2284                           ; 1 bytes @ 0x0
  2285                           
  2286  0070                     ?_main:	
  2287                           ; 1 bytes @ 0x0
  2288                           
  2289  0070                     ?_PIN_Initialize:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292  0070                     ?_PWM1_Initialize:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295  0070                     ?_PWM1_Enable:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298  0070                     ?_PWM1_Disable:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301  0070                     ?_PWM2_Initialize:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304  0070                     ?_PWM2_Enable:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307  0070                     ?_PWM2_Disable:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310  0070                     ?_PWM3_Initialize:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313  0070                     ?_PWM4_Initialize:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316  0070                     ?_TMR0_Initialize:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319  0070                     ?_TMR1_Initialize:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322  0070                     ?_TMR2_Initialize:	
  2323                           ; 1 bytes @ 0x0
  2324                           
  2325  0070                     ?_I2C_Initialize:	
  2326                           ; 1 bytes @ 0x0
  2327                           
  2328  0070                     ?_CheckSSPIF:	
  2329                           ; 1 bytes @ 0x0
  2330                           
  2331  0070                     ?_InterruptOnChange_Initialize:	
  2332                           ; 1 bytes @ 0x0
  2333                           
  2334  0070                     ?_OSCCON_Initialize:	
  2335                           ; 1 bytes @ 0x0
  2336                           
  2337  0070                     ?_INTERRUPT_interruptManager:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340  0070                     ?_UpdatePWM:	
  2341                           ; 1 bytes @ 0x0
  2342                           
  2343  0070                     ?_SaveLedPara:	
  2344                           ; 1 bytes @ 0x0
  2345                           
  2346  0070                     ?_LedUpdatePara:	
  2347                           ; 1 bytes @ 0x0
  2348                           
  2349  0070                     ?_TimeChangeSec:	
  2350                           ; 1 bytes @ 0x0
  2351                           
  2352  0070                     ?_CheckSum:	
  2353                           ; 1 bytes @ 0x0
  2354                           
  2355  0070                     CheckSum@len:	
  2356                           ; 1 bytes @ 0x0
  2357                           
  2358                           
  2359                           ; 1 bytes @ 0x0
  2360  0070                     	ds	1
  2361  0071                     ??_CheckSum:	
  2362                           
  2363                           ; 1 bytes @ 0x1
  2364  0071                     	ds	2
  2365  0073                     CheckSum@pbuf:	
  2366                           
  2367                           ; 1 bytes @ 0x3
  2368  0073                     	ds	1
  2369  0074                     CheckSum@result:	
  2370                           
  2371                           ; 1 bytes @ 0x4
  2372  0074                     	ds	1
  2373  0075                     CheckSum@i:	
  2374                           
  2375                           ; 1 bytes @ 0x5
  2376  0075                     	ds	1
  2377  0076                     ??_Decode:	
  2378                           
  2379                           ; 1 bytes @ 0x6
  2380  0076                     	ds	2
  2381  0078                     ??_INTERRUPT_interruptManager:	
  2382                           
  2383                           ; 1 bytes @ 0x8
  2384  0078                     	ds	1
  2385                           
  2386                           	psect	cstackBANK0
  2387  004D                     __pcstackBANK0:	
  2388  004D                     ??_SYSTEM_Initialize:	
  2389  004D                     ??_TMR1_StartTimer:	
  2390                           ; 1 bytes @ 0x0
  2391                           
  2392  004D                     ??_TMR2_StartTimer:	
  2393                           ; 1 bytes @ 0x0
  2394                           
  2395  004D                     ??_ResetState:	
  2396                           ; 1 bytes @ 0x0
  2397                           
  2398  004D                     ??_UpdateRTC:	
  2399                           ; 1 bytes @ 0x0
  2400                           
  2401  004D                     ??_PIN_Initialize:	
  2402                           ; 1 bytes @ 0x0
  2403                           
  2404  004D                     ??_PWM1_Initialize:	
  2405                           ; 1 bytes @ 0x0
  2406                           
  2407  004D                     ??_PWM1_Enable:	
  2408                           ; 1 bytes @ 0x0
  2409                           
  2410  004D                     ??_PWM1_Disable:	
  2411                           ; 1 bytes @ 0x0
  2412                           
  2413  004D                     ?_PWM1_LoadDutyValue:	
  2414                           ; 1 bytes @ 0x0
  2415                           
  2416  004D                     ??_PWM2_Initialize:	
  2417                           ; 1 bytes @ 0x0
  2418                           
  2419  004D                     ??_PWM2_Enable:	
  2420                           ; 1 bytes @ 0x0
  2421                           
  2422  004D                     ??_PWM2_Disable:	
  2423                           ; 1 bytes @ 0x0
  2424                           
  2425  004D                     ?_PWM2_LoadDutyValue:	
  2426                           ; 1 bytes @ 0x0
  2427                           
  2428  004D                     ??_PWM3_Initialize:	
  2429                           ; 1 bytes @ 0x0
  2430                           
  2431  004D                     ??_PWM4_Initialize:	
  2432                           ; 1 bytes @ 0x0
  2433                           
  2434  004D                     ??_TMR0_Initialize:	
  2435                           ; 1 bytes @ 0x0
  2436                           
  2437  004D                     ??_TMR1_Initialize:	
  2438                           ; 1 bytes @ 0x0
  2439                           
  2440  004D                     ??_TMR2_Initialize:	
  2441                           ; 1 bytes @ 0x0
  2442                           
  2443  004D                     ??_I2C_Initialize:	
  2444                           ; 1 bytes @ 0x0
  2445                           
  2446  004D                     ??_CheckSSPIF:	
  2447                           ; 1 bytes @ 0x0
  2448                           
  2449  004D                     ?_I2C_WriteBuffer:	
  2450                           ; 1 bytes @ 0x0
  2451                           
  2452  004D                     ?_I2C_ReadBuffer:	
  2453                           ; 1 bytes @ 0x0
  2454                           
  2455  004D                     ??_InterruptOnChange_Initialize:	
  2456                           ; 1 bytes @ 0x0
  2457                           
  2458  004D                     ??_OSCCON_Initialize:	
  2459                           ; 1 bytes @ 0x0
  2460                           
  2461  004D                     ?___wmul:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464  004D                     I2C_WriteBuffer@pbuf:	
  2465                           ; 2 bytes @ 0x0
  2466                           
  2467  004D                     I2C_ReadBuffer@pbuf:	
  2468                           ; 1 bytes @ 0x0
  2469                           
  2470  004D                     PWM1_LoadDutyValue@dutyValue:	
  2471                           ; 1 bytes @ 0x0
  2472                           
  2473  004D                     PWM2_LoadDutyValue@dutyValue:	
  2474                           ; 2 bytes @ 0x0
  2475                           
  2476  004D                     ___wmul@multiplier:	
  2477                           ; 2 bytes @ 0x0
  2478                           
  2479                           
  2480                           ; 2 bytes @ 0x0
  2481  004D                     	ds	1
  2482  004E                     I2C_WriteBuffer@len:	
  2483  004E                     I2C_ReadBuffer@len:	
  2484                           ; 1 bytes @ 0x1
  2485                           
  2486                           
  2487                           ; 1 bytes @ 0x1
  2488  004E                     	ds	1
  2489  004F                     ??_PWM1_LoadDutyValue:	
  2490  004F                     ??_PWM2_LoadDutyValue:	
  2491                           ; 1 bytes @ 0x2
  2492                           
  2493  004F                     ??_I2C_WriteBuffer:	
  2494                           ; 1 bytes @ 0x2
  2495                           
  2496  004F                     ??_I2C_ReadBuffer:	
  2497                           ; 1 bytes @ 0x2
  2498                           
  2499  004F                     ___wmul@multiplicand:	
  2500                           ; 1 bytes @ 0x2
  2501                           
  2502                           
  2503                           ; 2 bytes @ 0x2
  2504  004F                     	ds	1
  2505  0050                     I2C_WriteBuffer@suba:	
  2506                           
  2507                           ; 1 bytes @ 0x3
  2508  0050                     	ds	1
  2509  0051                     ??_UpdatePWM:	
  2510  0051                     ??_LedUpdatePara:	
  2511                           ; 1 bytes @ 0x4
  2512                           
  2513  0051                     ??___wmul:	
  2514                           ; 1 bytes @ 0x4
  2515                           
  2516  0051                     I2C_WriteBuffer@n:	
  2517                           ; 1 bytes @ 0x4
  2518                           
  2519  0051                     I2C_ReadBuffer@suba:	
  2520                           ; 1 bytes @ 0x4
  2521                           
  2522  0051                     ___wmul@product:	
  2523                           ; 1 bytes @ 0x4
  2524                           
  2525                           
  2526                           ; 2 bytes @ 0x4
  2527  0051                     	ds	1
  2528  0052                     I2C_WriteBuffer@i:	
  2529  0052                     I2C_ReadBuffer@n:	
  2530                           ; 1 bytes @ 0x5
  2531                           
  2532                           
  2533                           ; 1 bytes @ 0x5
  2534  0052                     	ds	1
  2535  0053                     ??_SaveLedPara:	
  2536  0053                     ??_TimeChangeSec:	
  2537                           ; 1 bytes @ 0x6
  2538                           
  2539  0053                     I2C_ReadBuffer@i:	
  2540                           ; 1 bytes @ 0x6
  2541                           
  2542                           
  2543                           ; 1 bytes @ 0x6
  2544  0053                     	ds	1
  2545  0054                     ??_LedParaInit:	
  2546                           
  2547                           ; 1 bytes @ 0x7
  2548  0054                     	ds	1
  2549  0055                     _SaveLedPara$1128:	
  2550                           
  2551                           ; 2 bytes @ 0x8
  2552  0055                     	ds	1
  2553  0056                     LedParaInit@i:	
  2554                           
  2555                           ; 1 bytes @ 0x9
  2556  0056                     	ds	1
  2557  0057                     SaveLedPara@pbuf:	
  2558  0057                     LedUpdatePara@i:	
  2559                           ; 1 bytes @ 0xA
  2560                           
  2561                           
  2562                           ; 1 bytes @ 0xA
  2563  0057                     	ds	1
  2564  0058                     ??_manualMode:	
  2565  0058                     SaveLedPara@offset:	
  2566                           ; 1 bytes @ 0xB
  2567                           
  2568                           
  2569                           ; 1 bytes @ 0xB
  2570  0058                     	ds	1
  2571  0059                     SaveLedPara@cnt:	
  2572  0059                     _TimeChangeSec$1583:	
  2573                           ; 1 bytes @ 0xC
  2574                           
  2575                           
  2576                           ; 2 bytes @ 0xC
  2577  0059                     	ds	1
  2578  005A                     SaveLedPara@len:	
  2579                           
  2580                           ; 1 bytes @ 0xD
  2581  005A                     	ds	1
  2582  005B                     ??_LedUpdate:	
  2583  005B                     ??_AutoMode:	
  2584                           ; 1 bytes @ 0xE
  2585                           
  2586                           
  2587                           ; 1 bytes @ 0xE
  2588  005B                     	ds	1
  2589  005C                     LedUpdate@i:	
  2590                           
  2591                           ; 1 bytes @ 0xF
  2592  005C                     	ds	8
  2593  0064                     AutoMode@dTime:	
  2594                           
  2595                           ; 4 bytes @ 0x17
  2596  0064                     	ds	4
  2597  0068                     AutoMode@pstartBright:	
  2598                           
  2599                           ; 1 bytes @ 0x1B
  2600  0068                     	ds	1
  2601  0069                     AutoMode@pendBright:	
  2602                           
  2603                           ; 1 bytes @ 0x1C
  2604  0069                     	ds	1
  2605  006A                     AutoMode@i:	
  2606                           
  2607                           ; 1 bytes @ 0x1D
  2608  006A                     	ds	1
  2609  006B                     ??_main:	
  2610                           
  2611                           	psect	maintext
  2612  0570                     __pmaintext:	
  2613                           ; 1 bytes @ 0x1E
  2614 ;;
  2615 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2616 ;;
  2617 ;; *************** function _main *****************
  2618 ;; Defined at:
  2619 ;;		line 35 in file "main.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : B1F/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2633 ;;      Params:         0       0       0       0
  2634 ;;      Locals:         0       0       0       0
  2635 ;;      Temps:          0       0       0       0
  2636 ;;      Totals:         0       0       0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels required when called:    7
  2639 ;; This function calls:
  2640 ;;		_AutoMode
  2641 ;;		_LedParaInit
  2642 ;;		_LedUpdate
  2643 ;;		_ResetState
  2644 ;;		_SYSTEM_Initialize
  2645 ;;		_TMR1_StartTimer
  2646 ;;		_TMR2_StartTimer
  2647 ;;		_UpdateRTC
  2648 ;;		_manualMode
  2649 ;; This function is called by:
  2650 ;;		Startup code after reset
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           
  2655                           ;psect for function _main
  2656  0570                     _main:	
  2657                           
  2658                           ;main.c: 37: SYSTEM_Initialize();
  2659                           
  2660                           ;incstack = 0
  2661                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2662  0570  3185  259E  3185   	fcall	_SYSTEM_Initialize
  2663                           
  2664                           ;main.c: 38: LedParaInit();
  2665  0573  3183  23F1  3185   	fcall	_LedParaInit
  2666                           
  2667                           ;main.c: 40: TMR1_StartTimer();
  2668  0576  3186  26E5  3185   	fcall	_TMR1_StartTimer
  2669                           
  2670                           ;main.c: 41: TMR2_StartTimer();
  2671  0579  3186  26E2  3185   	fcall	_TMR2_StartTimer
  2672                           
  2673                           ;main.c: 43: (INTCONbits.GIE = 1);
  2674  057C  178B               	bsf	11,7	;volatile
  2675                           
  2676                           ;main.c: 44: (INTCONbits.PEIE = 1);
  2677  057D  170B               	bsf	11,6	;volatile
  2678  057E                     l29:	
  2679                           ;main.c: 46: while(1)
  2680                           
  2681  057E  0064               	clrwdt	;# 
  2682                           
  2683                           ;main.c: 49: if(INTCONbits.TMR0IF)
  2684  057F  1D0B               	btfss	11,2	;volatile
  2685  0580  2D85               	goto	l2128
  2686                           
  2687                           ;main.c: 50: {
  2688                           ;main.c: 51: INTCONbits.TMR0IF = 0;
  2689  0581  110B               	bcf	11,2	;volatile
  2690                           
  2691                           ;main.c: 52: ResetState();
  2692  0582  3186  26A2  3185   	fcall	_ResetState
  2693  0585                     l2128:	
  2694                           
  2695                           ;main.c: 53: }
  2696                           ;main.c: 54: if(gRunState.fRecKey)
  2697  0585  0020               	movlb	0	; select bank0
  2698  0586  1C33               	btfss	_gRunState,0
  2699  0587  2D8F               	goto	l2136
  2700                           
  2701                           ;main.c: 55: {
  2702                           ;main.c: 56: gRunState.fRecKey = 0;
  2703  0588  1033               	bcf	_gRunState,0
  2704                           
  2705                           ;main.c: 57: LedUpdate();
  2706  0589  3184  244E  3185   	fcall	_LedUpdate
  2707                           
  2708                           ;main.c: 58: UpdateRTC();
  2709  058C  3186  2686  3185   	fcall	_UpdateRTC
  2710  058F                     l2136:	
  2711                           
  2712                           ;main.c: 59: }
  2713                           ;main.c: 60: if(PIR1bits.TMR2IF)
  2714  058F  0020               	movlb	0	; select bank0
  2715  0590  1C91               	btfss	17,1	;volatile
  2716  0591  2D96               	goto	l2142
  2717                           
  2718                           ;main.c: 61: {
  2719                           ;main.c: 62: PIR1bits.TMR2IF = 0;
  2720  0592  1091               	bcf	17,1	;volatile
  2721                           
  2722                           ;main.c: 63: manualMode();
  2723  0593  3184  24F1  3185   	fcall	_manualMode
  2724  0596                     l2142:	
  2725                           
  2726                           ;main.c: 64: }
  2727                           ;main.c: 65: if(gCurrentTime.datatime.fSec)
  2728  0596  0020               	movlb	0	; select bank0
  2729  0597  1C2E               	btfss	_gCurrentTime,0	;volatile
  2730  0598  2D7E               	goto	l29
  2731                           
  2732                           ;main.c: 66: {
  2733                           ;main.c: 67: gCurrentTime.datatime.fSec = 0;
  2734  0599  102E               	bcf	_gCurrentTime,0	;volatile
  2735                           
  2736                           ;main.c: 68: AutoMode();
  2737  059A  3180  2033  3185   	fcall	_AutoMode
  2738  059D  2D7E               	goto	l29
  2739  059E                     __end_of_main:	
  2740                           
  2741                           	psect	text1
  2742  04F1                     __ptext1:	
  2743 ;; *************** function _manualMode *****************
  2744 ;; Defined at:
  2745 ;;		line 82 in file "led.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2759 ;;      Params:         0       0       0       0
  2760 ;;      Locals:         0       0       0       0
  2761 ;;      Temps:          0       2       0       0
  2762 ;;      Totals:         0       2       0       0
  2763 ;;Total ram usage:        2 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    6
  2766 ;; This function calls:
  2767 ;;		_LedUpdatePara
  2768 ;;		_PWM1_Disable
  2769 ;;		_PWM1_Enable
  2770 ;;		_PWM2_Disable
  2771 ;;		_PWM2_Enable
  2772 ;;		___wmul
  2773 ;; This function is called by:
  2774 ;;		_main
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           
  2779                           ;psect for function _manualMode
  2780  04F1                     _manualMode:	
  2781                           
  2782                           ;led.c: 84: if(gLedPara.fAuto)
  2783                           
  2784                           ;incstack = 0
  2785                           ; Regs used in _manualMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2786  04F1  0020               	movlb	0	; select bank0
  2787  04F2  1C42               	btfss	_gLedPara,0
  2788  04F3  0008               	return
  2789                           
  2790                           ;led.c: 85: {
  2791                           ;led.c: 86: if (gLedPara.fWhiteOn)
  2792  04F4  1CC2               	btfss	_gLedPara,1
  2793  04F5  2D0E               	goto	l1940
  2794                           
  2795                           ;led.c: 87: {
  2796                           ;led.c: 88: PWM1_Enable();
  2797  04F6  3186  26EB  3184   	fcall	_PWM1_Enable
  2798                           
  2799                           ;led.c: 89: gLedRunPara.nTargetLum[0] = (unsigned int)gLedPara.bright[0] * 10;
  2800  04F9  0020               	movlb	0	; select bank0
  2801  04FA  0843               	movf	_gLedPara+1,w
  2802  04FB  00D8               	movwf	??_manualMode
  2803  04FC  01D9               	clrf	??_manualMode+1
  2804  04FD  0858               	movf	??_manualMode,w
  2805  04FE  00CD               	movwf	___wmul@multiplier
  2806  04FF  0859               	movf	??_manualMode+1,w
  2807  0500  00CE               	movwf	___wmul@multiplier+1
  2808  0501  300A               	movlw	10
  2809  0502  00CF               	movwf	___wmul@multiplicand
  2810  0503  3000               	movlw	0
  2811  0504  00D0               	movwf	___wmul@multiplicand+1
  2812  0505  3185  25DC  3184   	fcall	___wmul
  2813  0508  0020               	movlb	0	; select bank0
  2814  0509  084E               	movf	?___wmul+1,w
  2815  050A  00A7               	movwf	_gLedRunPara+7
  2816  050B  084D               	movf	?___wmul,w
  2817  050C  00A6               	movwf	_gLedRunPara+6
  2818                           
  2819                           ;led.c: 90: }
  2820  050D  2D14               	goto	l1944
  2821  050E                     l1940:	
  2822                           
  2823                           ;led.c: 91: else
  2824                           ;led.c: 92: {
  2825                           ;led.c: 93: PWM1_Disable();
  2826  050E  3186  26DF  3184   	fcall	_PWM1_Disable
  2827                           
  2828                           ;led.c: 94: gLedRunPara.nTargetLum[0] = 0;
  2829  0511  0020               	movlb	0	; select bank0
  2830  0512  01A6               	clrf	_gLedRunPara+6
  2831  0513  01A7               	clrf	_gLedRunPara+7
  2832  0514                     l1944:	
  2833                           
  2834                           ;led.c: 95: }
  2835                           ;led.c: 96: if (gLedPara.fBlueOn)
  2836  0514  1D42               	btfss	_gLedPara,2
  2837  0515  2D2E               	goto	l1950
  2838                           
  2839                           ;led.c: 97: {
  2840                           ;led.c: 98: PWM2_Enable();
  2841  0516  3186  26E8  3184   	fcall	_PWM2_Enable
  2842                           
  2843                           ;led.c: 99: gLedRunPara.nTargetLum[1] = (unsigned int)gLedPara.bright[1] * 10;
  2844  0519  0020               	movlb	0	; select bank0
  2845  051A  0844               	movf	_gLedPara+2,w
  2846  051B  00D8               	movwf	??_manualMode
  2847  051C  01D9               	clrf	??_manualMode+1
  2848  051D  0858               	movf	??_manualMode,w
  2849  051E  00CD               	movwf	___wmul@multiplier
  2850  051F  0859               	movf	??_manualMode+1,w
  2851  0520  00CE               	movwf	___wmul@multiplier+1
  2852  0521  300A               	movlw	10
  2853  0522  00CF               	movwf	___wmul@multiplicand
  2854  0523  3000               	movlw	0
  2855  0524  00D0               	movwf	___wmul@multiplicand+1
  2856  0525  3185  25DC  3184   	fcall	___wmul
  2857  0528  0020               	movlb	0	; select bank0
  2858  0529  084E               	movf	?___wmul+1,w
  2859  052A  00A9               	movwf	_gLedRunPara+9
  2860  052B  084D               	movf	?___wmul,w
  2861  052C  00A8               	movwf	_gLedRunPara+8
  2862                           
  2863                           ;led.c: 100: }
  2864  052D  2D34               	goto	l1954
  2865  052E                     l1950:	
  2866                           
  2867                           ;led.c: 101: else
  2868                           ;led.c: 102: {
  2869                           ;led.c: 103: PWM2_Disable();
  2870  052E  3186  26DC  3184   	fcall	_PWM2_Disable
  2871                           
  2872                           ;led.c: 104: gLedRunPara.nTargetLum[1] = 0;
  2873  0531  0020               	movlb	0	; select bank0
  2874  0532  01A8               	clrf	_gLedRunPara+8
  2875  0533  01A9               	clrf	_gLedRunPara+9
  2876  0534                     l1954:	
  2877                           
  2878                           ;led.c: 105: }
  2879                           ;led.c: 106: LedUpdatePara();
  2880  0534  3183  2383         	fcall	_LedUpdatePara
  2881  0536  0008               	return
  2882  0537                     __end_of_manualMode:	
  2883                           
  2884                           	psect	text2
  2885  06DC                     __ptext2:	
  2886 ;; *************** function _PWM2_Disable *****************
  2887 ;; Defined at:
  2888 ;;		line 38 in file "pwm.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		None
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2902 ;;      Params:         0       0       0       0
  2903 ;;      Locals:         0       0       0       0
  2904 ;;      Temps:          0       0       0       0
  2905 ;;      Totals:         0       0       0       0
  2906 ;;Total ram usage:        0 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    3
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_manualMode
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           
  2917                           ;psect for function _PWM2_Disable
  2918  06DC                     _PWM2_Disable:	
  2919                           
  2920                           ;pwm.c: 40: PWM2CONbits.PWM2EN = 0;
  2921                           
  2922                           ;incstack = 0
  2923                           ; Regs used in _PWM2_Disable: []
  2924  06DC  002C               	movlb	12	; select bank12
  2925  06DD  1396               	bcf	22,7	;volatile
  2926  06DE  0008               	return
  2927  06DF                     __end_of_PWM2_Disable:	
  2928                           
  2929                           	psect	text3
  2930  06DF                     __ptext3:	
  2931 ;; *************** function _PWM1_Disable *****************
  2932 ;; Defined at:
  2933 ;;		line 16 in file "pwm.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;		None
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		None
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2947 ;;      Params:         0       0       0       0
  2948 ;;      Locals:         0       0       0       0
  2949 ;;      Temps:          0       0       0       0
  2950 ;;      Totals:         0       0       0       0
  2951 ;;Total ram usage:        0 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; Hardware stack levels required when called:    3
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_manualMode
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           
  2962                           ;psect for function _PWM1_Disable
  2963  06DF                     _PWM1_Disable:	
  2964                           
  2965                           ;pwm.c: 18: PWM1CONbits.PWM1EN = 0;
  2966                           
  2967                           ;incstack = 0
  2968                           ; Regs used in _PWM1_Disable: []
  2969  06DF  002C               	movlb	12	; select bank12
  2970  06E0  1393               	bcf	19,7	;volatile
  2971  06E1  0008               	return
  2972  06E2                     __end_of_PWM1_Disable:	
  2973                           
  2974                           	psect	text4
  2975  0383                     __ptext4:	
  2976 ;; *************** function _LedUpdatePara *****************
  2977 ;; Defined at:
  2978 ;;		line 61 in file "led.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  i               1   10[BANK0 ] unsigned char 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2992 ;;      Params:         0       0       0       0
  2993 ;;      Locals:         0       1       0       0
  2994 ;;      Temps:          0       6       0       0
  2995 ;;      Totals:         0       7       0       0
  2996 ;;Total ram usage:        7 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; Hardware stack levels required when called:    5
  2999 ;; This function calls:
  3000 ;;		_UpdatePWM
  3001 ;; This function is called by:
  3002 ;;		_manualMode
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           
  3007                           ;psect for function _LedUpdatePara
  3008  0383                     _LedUpdatePara:	
  3009                           
  3010                           ;led.c: 63: unsigned char i;
  3011                           ;led.c: 65: for (i = 0; i < 2; i++)
  3012                           
  3013                           ;incstack = 0
  3014                           ; Regs used in _LedUpdatePara: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3015  0383  0020               	movlb	0	; select bank0
  3016  0384  01D7               	clrf	LedUpdatePara@i
  3017  0385  3002               	movlw	2
  3018  0386  0257               	subwf	LedUpdatePara@i,w
  3019  0387  1803               	btfsc	3,0
  3020  0388  2BEE               	goto	l1832
  3021  0389                     l1818:	
  3022                           
  3023                           ;led.c: 66: {
  3024                           ;led.c: 67: if (gLedRunPara.nCurrentLum[i] + 1 < gLedRunPara.nTargetLum[i])
  3025  0389  3557               	lslf	LedUpdatePara@i,w
  3026  038A  3E26               	addlw	(low ((_gLedRunPara| 0+6)))& (0+255)
  3027  038B  0086               	movwf	6
  3028  038C  0187               	clrf	7
  3029  038D  3F40               	moviw [0]fsr1
  3030  038E  00D1               	movwf	??_LedUpdatePara
  3031  038F  3F41               	moviw [1]fsr1
  3032  0390  00D2               	movwf	??_LedUpdatePara+1
  3033  0391  3557               	lslf	LedUpdatePara@i,w
  3034  0392  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  3035  0393  0086               	movwf	6
  3036  0394  0187               	clrf	7
  3037  0395  3F40               	moviw [0]fsr1
  3038  0396  00D3               	movwf	??_LedUpdatePara+2
  3039  0397  3F41               	moviw [1]fsr1
  3040  0398  00D4               	movwf	??_LedUpdatePara+3
  3041  0399  0853               	movf	??_LedUpdatePara+2,w
  3042  039A  3E01               	addlw	1
  3043  039B  00D5               	movwf	??_LedUpdatePara+4
  3044  039C  3000               	movlw	0
  3045  039D  3D54               	addwfc	??_LedUpdatePara+3,w
  3046  039E  00D6               	movwf	??_LedUpdatePara+5
  3047  039F  0852               	movf	??_LedUpdatePara+1,w
  3048  03A0  0256               	subwf	??_LedUpdatePara+5,w
  3049  03A1  1D03               	skipz
  3050  03A2  2BA5               	goto	u1115
  3051  03A3  0851               	movf	??_LedUpdatePara,w
  3052  03A4  0255               	subwf	??_LedUpdatePara+4,w
  3053  03A5                     u1115:	
  3054  03A5  1803               	skipnc
  3055  03A6  2BB1               	goto	l1822
  3056                           
  3057                           ;led.c: 68: {
  3058                           ;led.c: 69: gLedRunPara.nCurrentLum[i] += 1;
  3059  03A7  3557               	lslf	LedUpdatePara@i,w
  3060  03A8  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  3061  03A9  0086               	movwf	6
  3062  03AA  0187               	clrf	7
  3063  03AB  3001               	movlw	1
  3064  03AC  0781               	addwf	1,f
  3065  03AD  3141               	addfsr 1,1
  3066  03AE  1803               	skipnc
  3067  03AF  0A81               	incf	1,f
  3068                           
  3069                           ;led.c: 70: }
  3070  03B0  2BE6               	goto	l1828
  3071  03B1                     l1822:	
  3072                           
  3073                           ;led.c: 71: else if (gLedRunPara.nCurrentLum[i] > gLedRunPara.nTargetLum[i] + 1)
  3074  03B1  3557               	lslf	LedUpdatePara@i,w
  3075  03B2  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  3076  03B3  0086               	movwf	6
  3077  03B4  0187               	clrf	7
  3078  03B5  3F40               	moviw [0]fsr1
  3079  03B6  00D1               	movwf	??_LedUpdatePara
  3080  03B7  3F41               	moviw [1]fsr1
  3081  03B8  00D2               	movwf	??_LedUpdatePara+1
  3082  03B9  3557               	lslf	LedUpdatePara@i,w
  3083  03BA  3E26               	addlw	(low ((_gLedRunPara| 0+6)))& (0+255)
  3084  03BB  0086               	movwf	6
  3085  03BC  0187               	clrf	7
  3086  03BD  3F40               	moviw [0]fsr1
  3087  03BE  00D3               	movwf	??_LedUpdatePara+2
  3088  03BF  3F41               	moviw [1]fsr1
  3089  03C0  00D4               	movwf	??_LedUpdatePara+3
  3090  03C1  0853               	movf	??_LedUpdatePara+2,w
  3091  03C2  3E01               	addlw	1
  3092  03C3  00D5               	movwf	??_LedUpdatePara+4
  3093  03C4  3000               	movlw	0
  3094  03C5  3D54               	addwfc	??_LedUpdatePara+3,w
  3095  03C6  00D6               	movwf	??_LedUpdatePara+5
  3096  03C7  0852               	movf	??_LedUpdatePara+1,w
  3097  03C8  0256               	subwf	??_LedUpdatePara+5,w
  3098  03C9  1D03               	skipz
  3099  03CA  2BCD               	goto	u1125
  3100  03CB  0851               	movf	??_LedUpdatePara,w
  3101  03CC  0255               	subwf	??_LedUpdatePara+4,w
  3102  03CD                     u1125:	
  3103  03CD  1803               	skipnc
  3104  03CE  2BDA               	goto	l1826
  3105                           
  3106                           ;led.c: 72: {
  3107                           ;led.c: 73: gLedRunPara.nCurrentLum[i] -= 1;
  3108  03CF  3557               	lslf	LedUpdatePara@i,w
  3109  03D0  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  3110  03D1  0086               	movwf	6
  3111  03D2  0187               	clrf	7
  3112  03D3  3001               	movlw	1
  3113  03D4  0281               	subwf	1,f
  3114  03D5  3141               	addfsr 1,1
  3115  03D6  3000               	movlw	0
  3116  03D7  3B81               	subwfb	1,f
  3117  03D8  317F               	addfsr 1,-1
  3118                           
  3119                           ;led.c: 74: }
  3120  03D9  2BE6               	goto	l1828
  3121  03DA                     l1826:	
  3122                           
  3123                           ;led.c: 75: else
  3124                           ;led.c: 76: {
  3125                           ;led.c: 77: gLedRunPara.nCurrentLum[i] = gLedRunPara.nTargetLum[i];
  3126  03DA  3557               	lslf	LedUpdatePara@i,w
  3127  03DB  3E26               	addlw	(low ((_gLedRunPara| 0+6)))& (0+255)
  3128  03DC  0086               	movwf	6
  3129  03DD  0187               	clrf	7
  3130  03DE  3557               	lslf	LedUpdatePara@i,w
  3131  03DF  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  3132  03E0  0084               	movwf	4
  3133  03E1  0185               	clrf	5
  3134  03E2  3F40               	moviw [0]fsr1
  3135  03E3  3F80               	movwi [0]fsr0
  3136  03E4  3F41               	moviw [1]fsr1
  3137  03E5  3F81               	movwi [1]fsr0
  3138  03E6                     l1828:	
  3139  03E6  3001               	movlw	1
  3140  03E7  00D1               	movwf	??_LedUpdatePara
  3141  03E8  0851               	movf	??_LedUpdatePara,w
  3142  03E9  07D7               	addwf	LedUpdatePara@i,f
  3143  03EA  3002               	movlw	2
  3144  03EB  0257               	subwf	LedUpdatePara@i,w
  3145  03EC  1C03               	skipc
  3146  03ED  2B89               	goto	l1818
  3147  03EE                     l1832:	
  3148                           
  3149                           ;led.c: 78: }
  3150                           ;led.c: 79: }
  3151                           ;led.c: 80: UpdatePWM();
  3152  03EE  3186  265A         	fcall	_UpdatePWM
  3153  03F0  0008               	return
  3154  03F1                     __end_of_LedUpdatePara:	
  3155                           
  3156                           	psect	text5
  3157  0686                     __ptext5:	
  3158 ;; *************** function _UpdateRTC *****************
  3159 ;; Defined at:
  3160 ;;		line 6 in file "rtc.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;		None
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      void 
  3167 ;; Registers used:
  3168 ;;		wreg
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3174 ;;      Params:         0       0       0       0
  3175 ;;      Locals:         0       0       0       0
  3176 ;;      Temps:          0       1       0       0
  3177 ;;      Totals:         0       1       0       0
  3178 ;;Total ram usage:        1 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    3
  3181 ;; This function calls:
  3182 ;;		Nothing
  3183 ;; This function is called by:
  3184 ;;		_main
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           
  3189                           ;psect for function _UpdateRTC
  3190  0686                     _UpdateRTC:	
  3191                           
  3192                           ;rtc.c: 8: gCurrentTime.datatime.hour = IR_ReveiveDataStructure.TimeHour;
  3193                           
  3194                           ;incstack = 0
  3195                           ; Regs used in _UpdateRTC: [wreg]
  3196  0686  0020               	movlb	0	; select bank0
  3197  0687  0835               	movf	_IR_ReveiveDataStructure+1,w
  3198  0688  00CD               	movwf	??_UpdateRTC
  3199  0689  084D               	movf	??_UpdateRTC,w
  3200  068A  00B1               	movwf	_gCurrentTime+3	;volatile
  3201                           
  3202                           ;rtc.c: 9: gCurrentTime.datatime.minute = IR_ReveiveDataStructure.TimeMinute;
  3203  068B  0836               	movf	_IR_ReveiveDataStructure+2,w
  3204  068C  00CD               	movwf	??_UpdateRTC
  3205  068D  084D               	movf	??_UpdateRTC,w
  3206  068E  00B0               	movwf	_gCurrentTime+2	;volatile
  3207  068F  0008               	return
  3208  0690                     __end_of_UpdateRTC:	
  3209                           
  3210                           	psect	text6
  3211  06E2                     __ptext6:	
  3212 ;; *************** function _TMR2_StartTimer *****************
  3213 ;; Defined at:
  3214 ;;		line 35 in file "tmr.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;		None
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		None
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3228 ;;      Params:         0       0       0       0
  3229 ;;      Locals:         0       0       0       0
  3230 ;;      Temps:          0       0       0       0
  3231 ;;      Totals:         0       0       0       0
  3232 ;;Total ram usage:        0 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    3
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_main
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           
  3243                           ;psect for function _TMR2_StartTimer
  3244  06E2                     _TMR2_StartTimer:	
  3245                           
  3246                           ;tmr.c: 37: T2CONbits.TMR2ON = 1;
  3247                           
  3248                           ;incstack = 0
  3249                           ; Regs used in _TMR2_StartTimer: []
  3250  06E2  0020               	movlb	0	; select bank0
  3251  06E3  151C               	bsf	28,2	;volatile
  3252  06E4  0008               	return
  3253  06E5                     __end_of_TMR2_StartTimer:	
  3254                           
  3255                           	psect	text7
  3256  06E5                     __ptext7:	
  3257 ;; *************** function _TMR1_StartTimer *****************
  3258 ;; Defined at:
  3259 ;;		line 27 in file "tmr.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		None
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3273 ;;      Params:         0       0       0       0
  3274 ;;      Locals:         0       0       0       0
  3275 ;;      Temps:          0       0       0       0
  3276 ;;      Totals:         0       0       0       0
  3277 ;;Total ram usage:        0 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    3
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_main
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           
  3288                           ;psect for function _TMR1_StartTimer
  3289  06E5                     _TMR1_StartTimer:	
  3290                           
  3291                           ;tmr.c: 29: T1CONbits.TMR1ON = 1;
  3292                           
  3293                           ;incstack = 0
  3294                           ; Regs used in _TMR1_StartTimer: []
  3295  06E5  0020               	movlb	0	; select bank0
  3296  06E6  1418               	bsf	24,0	;volatile
  3297  06E7  0008               	return
  3298  06E8                     __end_of_TMR1_StartTimer:	
  3299                           
  3300                           	psect	text8
  3301  059E                     __ptext8:	
  3302 ;; *************** function _SYSTEM_Initialize *****************
  3303 ;; Defined at:
  3304 ;;		line 11 in file "command.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;		None
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;		None
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  1    wreg      void 
  3311 ;; Registers used:
  3312 ;;		wreg, status,2, status,0, pclath, cstack
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3318 ;;      Params:         0       0       0       0
  3319 ;;      Locals:         0       0       0       0
  3320 ;;      Temps:          0       0       0       0
  3321 ;;      Totals:         0       0       0       0
  3322 ;;Total ram usage:        0 bytes
  3323 ;; Hardware stack levels used:    1
  3324 ;; Hardware stack levels required when called:    4
  3325 ;; This function calls:
  3326 ;;		_I2C_Initialize
  3327 ;;		_InterruptOnChange_Initialize
  3328 ;;		_OSCCON_Initialize
  3329 ;;		_PIN_Initialize
  3330 ;;		_PWM1_Initialize
  3331 ;;		_PWM2_Initialize
  3332 ;;		_PWM3_Initialize
  3333 ;;		_PWM4_Initialize
  3334 ;;		_TMR0_Initialize
  3335 ;;		_TMR1_Initialize
  3336 ;;		_TMR2_Initialize
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           
  3343                           ;psect for function _SYSTEM_Initialize
  3344  059E                     _SYSTEM_Initialize:	
  3345                           
  3346                           ;command.c: 13: OSCCON_Initialize();
  3347                           
  3348                           ;incstack = 0
  3349                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3350  059E  3186  269A  3185   	fcall	_OSCCON_Initialize
  3351                           
  3352                           ;command.c: 14: PIN_Initialize();
  3353  05A1  3186  262A  3185   	fcall	_PIN_Initialize
  3354                           
  3355                           ;command.c: 15: PWM1_Initialize();
  3356  05A4  3186  26BF  3185   	fcall	_PWM1_Initialize
  3357                           
  3358                           ;command.c: 16: PWM2_Initialize();
  3359  05A7  3186  26B8  3185   	fcall	_PWM2_Initialize
  3360                           
  3361                           ;command.c: 17: PWM3_Initialize();
  3362  05AA  3186  26B1  3185   	fcall	_PWM3_Initialize
  3363                           
  3364                           ;command.c: 18: PWM4_Initialize();
  3365  05AD  3186  26AA  3185   	fcall	_PWM4_Initialize
  3366                           
  3367                           ;command.c: 19: TMR0_Initialize();
  3368  05B0  3186  26D8  3185   	fcall	_TMR0_Initialize
  3369                           
  3370                           ;command.c: 20: TMR1_Initialize();
  3371  05B3  3186  266A  3185   	fcall	_TMR1_Initialize
  3372                           
  3373                           ;command.c: 21: TMR2_Initialize();
  3374  05B6  3186  2690  3185   	fcall	_TMR2_Initialize
  3375                           
  3376                           ;command.c: 22: I2C_Initialize();
  3377  05B9  3186  2679  3185   	fcall	_I2C_Initialize
  3378                           
  3379                           ;command.c: 23: InterruptOnChange_Initialize();
  3380  05BC  3186  26C6         	fcall	_InterruptOnChange_Initialize
  3381  05BE  0008               	return
  3382  05BF                     __end_of_SYSTEM_Initialize:	
  3383                           
  3384                           	psect	text9
  3385  0690                     __ptext9:	
  3386 ;; *************** function _TMR2_Initialize *****************
  3387 ;; Defined at:
  3388 ;;		line 19 in file "tmr.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;		None
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;		None
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      void 
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3402 ;;      Params:         0       0       0       0
  3403 ;;      Locals:         0       0       0       0
  3404 ;;      Temps:          0       0       0       0
  3405 ;;      Totals:         0       0       0       0
  3406 ;;Total ram usage:        0 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    3
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_SYSTEM_Initialize
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function _TMR2_Initialize
  3418  0690                     _TMR2_Initialize:	
  3419                           
  3420                           ;tmr.c: 21: T2CONbits.T2OUTPS = 0x00;
  3421                           
  3422                           ;incstack = 0
  3423                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0]
  3424  0690  3087               	movlw	-121
  3425  0691  0020               	movlb	0	; select bank0
  3426  0692  059C               	andwf	28,f	;volatile
  3427                           
  3428                           ;tmr.c: 22: T2CONbits.T2CKPS = 0x03;
  3429  0693  3003               	movlw	3
  3430  0694  049C               	iorwf	28,f	;volatile
  3431                           
  3432                           ;tmr.c: 23: T2CONbits.TMR2ON = 0;
  3433  0695  111C               	bcf	28,2	;volatile
  3434                           
  3435                           ;tmr.c: 24: TMR2 = 0;
  3436  0696  019A               	clrf	26	;volatile
  3437                           
  3438                           ;tmr.c: 25: PR2 = 249;
  3439  0697  30F9               	movlw	249
  3440  0698  009B               	movwf	27	;volatile
  3441  0699  0008               	return
  3442  069A                     __end_of_TMR2_Initialize:	
  3443                           
  3444                           	psect	text10
  3445  066A                     __ptext10:	
  3446 ;; *************** function _TMR1_Initialize *****************
  3447 ;; Defined at:
  3448 ;;		line 7 in file "tmr.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;		None
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;		None
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  1    wreg      void 
  3455 ;; Registers used:
  3456 ;;		wreg, status,2, status,0
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3462 ;;      Params:         0       0       0       0
  3463 ;;      Locals:         0       0       0       0
  3464 ;;      Temps:          0       0       0       0
  3465 ;;      Totals:         0       0       0       0
  3466 ;;Total ram usage:        0 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:    3
  3469 ;; This function calls:
  3470 ;;		Nothing
  3471 ;; This function is called by:
  3472 ;;		_SYSTEM_Initialize
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           
  3477                           ;psect for function _TMR1_Initialize
  3478  066A                     _TMR1_Initialize:	
  3479                           
  3480                           ;tmr.c: 9: T1CONbits.TMR1CS = 0x02;
  3481                           
  3482                           ;incstack = 0
  3483                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0]
  3484  066A  0020               	movlb	0	; select bank0
  3485  066B  0818               	movf	24,w	;volatile
  3486  066C  393F               	andlw	-193
  3487  066D  3880               	iorlw	128
  3488  066E  0098               	movwf	24	;volatile
  3489                           
  3490                           ;tmr.c: 10: T1CONbits.T1CKPS = 0x00;
  3491  066F  30CF               	movlw	-49
  3492  0670  0598               	andwf	24,f	;volatile
  3493                           
  3494                           ;tmr.c: 11: T1CONbits.T1OSCEN = 1;
  3495  0671  1598               	bsf	24,3	;volatile
  3496                           
  3497                           ;tmr.c: 12: T1CONbits.nT1SYNC = 0;
  3498  0672  1118               	bcf	24,2	;volatile
  3499                           
  3500                           ;tmr.c: 13: T1CONbits.TMR1ON = 0;
  3501  0673  1018               	bcf	24,0	;volatile
  3502                           
  3503                           ;tmr.c: 14: T1GCONbits.TMR1GE = 0;
  3504  0674  1399               	bcf	25,7	;volatile
  3505                           
  3506                           ;tmr.c: 16: PIR1bits.TMR1IF = 0;
  3507  0675  1011               	bcf	17,0	;volatile
  3508                           
  3509                           ;tmr.c: 17: PIE1bits.TMR1IE = 1;
  3510  0676  0021               	movlb	1	; select bank1
  3511  0677  1411               	bsf	17,0	;volatile
  3512  0678  0008               	return
  3513  0679                     __end_of_TMR1_Initialize:	
  3514                           
  3515                           	psect	text11
  3516  06D8                     __ptext11:	
  3517 ;; *************** function _TMR0_Initialize *****************
  3518 ;; Defined at:
  3519 ;;		line 3 in file "tmr.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3533 ;;      Params:         0       0       0       0
  3534 ;;      Locals:         0       0       0       0
  3535 ;;      Temps:          0       0       0       0
  3536 ;;      Totals:         0       0       0       0
  3537 ;;Total ram usage:        0 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    3
  3540 ;; This function calls:
  3541 ;;		Nothing
  3542 ;; This function is called by:
  3543 ;;		_SYSTEM_Initialize
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           
  3548                           ;psect for function _TMR0_Initialize
  3549  06D8                     _TMR0_Initialize:	
  3550                           
  3551                           ;tmr.c: 5: OPTION_REG = 0x06;
  3552                           
  3553                           ;incstack = 0
  3554                           ; Regs used in _TMR0_Initialize: [wreg]
  3555  06D8  3006               	movlw	6
  3556  06D9  0021               	movlb	1	; select bank1
  3557  06DA  0095               	movwf	21	;volatile
  3558  06DB  0008               	return
  3559  06DC                     __end_of_TMR0_Initialize:	
  3560                           
  3561                           	psect	text12
  3562  06AA                     __ptext12:	
  3563 ;; *************** function _PWM4_Initialize *****************
  3564 ;; Defined at:
  3565 ;;		line 69 in file "pwm.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;		None
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;		None
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      void 
  3572 ;; Registers used:
  3573 ;;		status,2
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3579 ;;      Params:         0       0       0       0
  3580 ;;      Locals:         0       0       0       0
  3581 ;;      Temps:          0       0       0       0
  3582 ;;      Totals:         0       0       0       0
  3583 ;;Total ram usage:        0 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:    3
  3586 ;; This function calls:
  3587 ;;		Nothing
  3588 ;; This function is called by:
  3589 ;;		_SYSTEM_Initialize
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function _PWM4_Initialize
  3595  06AA                     _PWM4_Initialize:	
  3596                           
  3597                           ;pwm.c: 71: PWM4CONbits.PWM4EN = 1;
  3598                           
  3599                           ;incstack = 0
  3600                           ; Regs used in _PWM4_Initialize: [status,2]
  3601  06AA  002C               	movlb	12	; select bank12
  3602  06AB  179C               	bsf	28,7	;volatile
  3603                           
  3604                           ;pwm.c: 72: PWM4CONbits.PWM4OE = 1;
  3605  06AC  171C               	bsf	28,6	;volatile
  3606                           
  3607                           ;pwm.c: 73: PWM4CONbits.PWM4POL = 0;
  3608  06AD  121C               	bcf	28,4	;volatile
  3609                           
  3610                           ;pwm.c: 75: PWM4DCH = 0x00;
  3611  06AE  019B               	clrf	27	;volatile
  3612                           
  3613                           ;pwm.c: 76: PWM4DCL = 0x00;
  3614  06AF  019A               	clrf	26	;volatile
  3615  06B0  0008               	return
  3616  06B1                     __end_of_PWM4_Initialize:	
  3617                           
  3618                           	psect	text13
  3619  06B1                     __ptext13:	
  3620 ;; *************** function _PWM3_Initialize *****************
  3621 ;; Defined at:
  3622 ;;		line 47 in file "pwm.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		status,2
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3636 ;;      Params:         0       0       0       0
  3637 ;;      Locals:         0       0       0       0
  3638 ;;      Temps:          0       0       0       0
  3639 ;;      Totals:         0       0       0       0
  3640 ;;Total ram usage:        0 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; Hardware stack levels required when called:    3
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_SYSTEM_Initialize
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           
  3651                           ;psect for function _PWM3_Initialize
  3652  06B1                     _PWM3_Initialize:	
  3653                           
  3654                           ;pwm.c: 49: PWM3CONbits.PWM3EN = 1;
  3655                           
  3656                           ;incstack = 0
  3657                           ; Regs used in _PWM3_Initialize: [status,2]
  3658  06B1  002C               	movlb	12	; select bank12
  3659  06B2  1799               	bsf	25,7	;volatile
  3660                           
  3661                           ;pwm.c: 50: PWM3CONbits.PWM3OE = 1;
  3662  06B3  1719               	bsf	25,6	;volatile
  3663                           
  3664                           ;pwm.c: 51: PWM3CONbits.PWM3POL = 0;
  3665  06B4  1219               	bcf	25,4	;volatile
  3666                           
  3667                           ;pwm.c: 53: PWM3DCH = 0x00;
  3668  06B5  0198               	clrf	24	;volatile
  3669                           
  3670                           ;pwm.c: 54: PWM3DCL = 0x00;
  3671  06B6  0197               	clrf	23	;volatile
  3672  06B7  0008               	return
  3673  06B8                     __end_of_PWM3_Initialize:	
  3674                           
  3675                           	psect	text14
  3676  06B8                     __ptext14:	
  3677 ;; *************** function _PWM2_Initialize *****************
  3678 ;; Defined at:
  3679 ;;		line 25 in file "pwm.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		status,2
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3693 ;;      Params:         0       0       0       0
  3694 ;;      Locals:         0       0       0       0
  3695 ;;      Temps:          0       0       0       0
  3696 ;;      Totals:         0       0       0       0
  3697 ;;Total ram usage:        0 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    3
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_SYSTEM_Initialize
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           
  3708                           ;psect for function _PWM2_Initialize
  3709  06B8                     _PWM2_Initialize:	
  3710                           
  3711                           ;pwm.c: 27: PWM2CONbits.PWM2EN = 1;
  3712                           
  3713                           ;incstack = 0
  3714                           ; Regs used in _PWM2_Initialize: [status,2]
  3715  06B8  002C               	movlb	12	; select bank12
  3716  06B9  1796               	bsf	22,7	;volatile
  3717                           
  3718                           ;pwm.c: 28: PWM2CONbits.PWM2OE = 1;
  3719  06BA  1716               	bsf	22,6	;volatile
  3720                           
  3721                           ;pwm.c: 29: PWM2CONbits.PWM2POL = 0;
  3722  06BB  1216               	bcf	22,4	;volatile
  3723                           
  3724                           ;pwm.c: 31: PWM2DCH = 0x00;
  3725  06BC  0195               	clrf	21	;volatile
  3726                           
  3727                           ;pwm.c: 32: PWM2DCL = 0x00;
  3728  06BD  0194               	clrf	20	;volatile
  3729  06BE  0008               	return
  3730  06BF                     __end_of_PWM2_Initialize:	
  3731                           
  3732                           	psect	text15
  3733  06BF                     __ptext15:	
  3734 ;; *************** function _PWM1_Initialize *****************
  3735 ;; Defined at:
  3736 ;;		line 3 in file "pwm.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;		None
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;		None
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1    wreg      void 
  3743 ;; Registers used:
  3744 ;;		status,2
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3750 ;;      Params:         0       0       0       0
  3751 ;;      Locals:         0       0       0       0
  3752 ;;      Temps:          0       0       0       0
  3753 ;;      Totals:         0       0       0       0
  3754 ;;Total ram usage:        0 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:    3
  3757 ;; This function calls:
  3758 ;;		Nothing
  3759 ;; This function is called by:
  3760 ;;		_SYSTEM_Initialize
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           
  3765                           ;psect for function _PWM1_Initialize
  3766  06BF                     _PWM1_Initialize:	
  3767                           
  3768                           ;pwm.c: 5: PWM1CONbits.PWM1EN = 1;
  3769                           
  3770                           ;incstack = 0
  3771                           ; Regs used in _PWM1_Initialize: [status,2]
  3772  06BF  002C               	movlb	12	; select bank12
  3773  06C0  1793               	bsf	19,7	;volatile
  3774                           
  3775                           ;pwm.c: 6: PWM1CONbits.PWM1OE = 1;
  3776  06C1  1713               	bsf	19,6	;volatile
  3777                           
  3778                           ;pwm.c: 7: PWM1CONbits.PWM1POL = 0;
  3779  06C2  1213               	bcf	19,4	;volatile
  3780                           
  3781                           ;pwm.c: 9: PWM1DCH = 0x00;
  3782  06C3  0192               	clrf	18	;volatile
  3783                           
  3784                           ;pwm.c: 10: PWM1DCL = 0x00;
  3785  06C4  0191               	clrf	17	;volatile
  3786  06C5  0008               	return
  3787  06C6                     __end_of_PWM1_Initialize:	
  3788                           
  3789                           	psect	text16
  3790  062A                     __ptext16:	
  3791 ;; *************** function _PIN_Initialize *****************
  3792 ;; Defined at:
  3793 ;;		line 3 in file "pin.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;		None
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		status,2
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3807 ;;      Params:         0       0       0       0
  3808 ;;      Locals:         0       0       0       0
  3809 ;;      Temps:          0       0       0       0
  3810 ;;      Totals:         0       0       0       0
  3811 ;;Total ram usage:        0 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    3
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		_SYSTEM_Initialize
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           
  3822                           ;psect for function _PIN_Initialize
  3823  062A                     _PIN_Initialize:	
  3824                           
  3825                           ;pin.c: 6: TRISAbits.TRISA2 = 0;
  3826                           
  3827                           ;incstack = 0
  3828                           ; Regs used in _PIN_Initialize: [status,2]
  3829  062A  0021               	movlb	1	; select bank1
  3830  062B  110C               	bcf	12,2	;volatile
  3831                           
  3832                           ;pin.c: 7: TRISAbits.TRISA4 = 1;
  3833  062C  160C               	bsf	12,4	;volatile
  3834                           
  3835                           ;pin.c: 8: TRISAbits.TRISA5 = 1;
  3836  062D  168C               	bsf	12,5	;volatile
  3837                           
  3838                           ;pin.c: 9: TRISBbits.TRISB4 = 1;
  3839  062E  160D               	bsf	13,4	;volatile
  3840                           
  3841                           ;pin.c: 10: TRISBbits.TRISB6 = 1;
  3842  062F  170D               	bsf	13,6	;volatile
  3843                           
  3844                           ;pin.c: 11: TRISBbits.TRISB7 = 1;
  3845  0630  178D               	bsf	13,7	;volatile
  3846                           
  3847                           ;pin.c: 12: TRISCbits.TRISC1 = 0;
  3848  0631  108E               	bcf	14,1	;volatile
  3849                           
  3850                           ;pin.c: 13: TRISCbits.TRISC3 = 0;
  3851  0632  118E               	bcf	14,3	;volatile
  3852                           
  3853                           ;pin.c: 14: TRISCbits.TRISC5 = 0;
  3854  0633  128E               	bcf	14,5	;volatile
  3855                           
  3856                           ;pin.c: 17: ANSELA = 0;
  3857  0634  0023               	movlb	3	; select bank3
  3858  0635  018C               	clrf	12	;volatile
  3859                           
  3860                           ;pin.c: 18: ANSELB = 0;
  3861  0636  018D               	clrf	13	;volatile
  3862                           
  3863                           ;pin.c: 19: ANSELC = 0;
  3864  0637  018E               	clrf	14	;volatile
  3865                           
  3866                           ;pin.c: 22: LATAbits.LATA2 = 0;
  3867  0638  0022               	movlb	2	; select bank2
  3868  0639  110C               	bcf	12,2	;volatile
  3869                           
  3870                           ;pin.c: 23: LATCbits.LATC1 = 0;
  3871  063A  108E               	bcf	14,1	;volatile
  3872                           
  3873                           ;pin.c: 24: LATCbits.LATC3 = 0;
  3874  063B  118E               	bcf	14,3	;volatile
  3875                           
  3876                           ;pin.c: 25: LATCbits.LATC5 = 0;
  3877  063C  128E               	bcf	14,5	;volatile
  3878                           
  3879                           ;pin.c: 28: WPUBbits.WPUB7 = 1;
  3880  063D  0024               	movlb	4	; select bank4
  3881  063E  178D               	bsf	13,7	;volatile
  3882                           
  3883                           ;pin.c: 29: WPUBbits.WPUB4 = 0;
  3884  063F  120D               	bcf	13,4	;volatile
  3885                           
  3886                           ;pin.c: 30: WPUBbits.WPUB6 = 0;
  3887  0640  130D               	bcf	13,6	;volatile
  3888  0641  0008               	return
  3889  0642                     __end_of_PIN_Initialize:	
  3890                           
  3891                           	psect	text17
  3892  069A                     __ptext17:	
  3893 ;; *************** function _OSCCON_Initialize *****************
  3894 ;; Defined at:
  3895 ;;		line 3 in file "osccon.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;		None
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;		None
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  1    wreg      void 
  3902 ;; Registers used:
  3903 ;;		wreg, status,2, status,0
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3909 ;;      Params:         0       0       0       0
  3910 ;;      Locals:         0       0       0       0
  3911 ;;      Temps:          0       0       0       0
  3912 ;;      Totals:         0       0       0       0
  3913 ;;Total ram usage:        0 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:    3
  3916 ;; This function calls:
  3917 ;;		Nothing
  3918 ;; This function is called by:
  3919 ;;		_SYSTEM_Initialize
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           
  3924                           ;psect for function _OSCCON_Initialize
  3925  069A                     _OSCCON_Initialize:	
  3926                           
  3927                           ;osccon.c: 5: OSCCONbits.IRCF = 0x0F;
  3928                           
  3929                           ;incstack = 0
  3930                           ; Regs used in _OSCCON_Initialize: [wreg+status,2+status,0]
  3931  069A  3078               	movlw	120
  3932  069B  0021               	movlb	1	; select bank1
  3933  069C  0499               	iorwf	25,f	;volatile
  3934                           
  3935                           ;osccon.c: 6: OSCCONbits.SCS = 0x00;
  3936  069D  30FC               	movlw	-4
  3937  069E  0599               	andwf	25,f	;volatile
  3938  069F                     l253:	
  3939                           ;osccon.c: 7: while(!OSCSTATbits.HFIOFS);
  3940                           
  3941  069F  181A               	btfsc	26,0	;volatile
  3942  06A0  0008               	return
  3943  06A1  2E9F               	goto	l253
  3944  06A2                     __end_of_OSCCON_Initialize:	
  3945                           
  3946                           	psect	text18
  3947  06C6                     __ptext18:	
  3948 ;; *************** function _InterruptOnChange_Initialize *****************
  3949 ;; Defined at:
  3950 ;;		line 3 in file "interruptOnChange.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      void 
  3957 ;; Registers used:
  3958 ;;		status,2
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3964 ;;      Params:         0       0       0       0
  3965 ;;      Locals:         0       0       0       0
  3966 ;;      Temps:          0       0       0       0
  3967 ;;      Totals:         0       0       0       0
  3968 ;;Total ram usage:        0 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:    3
  3971 ;; This function calls:
  3972 ;;		Nothing
  3973 ;; This function is called by:
  3974 ;;		_SYSTEM_Initialize
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           
  3979                           ;psect for function _InterruptOnChange_Initialize
  3980  06C6                     _InterruptOnChange_Initialize:	
  3981                           
  3982                           ;interruptOnChange.c: 6: IOCBNbits.IOCBN7 = 1;
  3983                           
  3984                           ;incstack = 0
  3985                           ; Regs used in _InterruptOnChange_Initialize: [status,2]
  3986  06C6  0027               	movlb	7	; select bank7
  3987  06C7  1795               	bsf	21,7	;volatile
  3988                           
  3989                           ;interruptOnChange.c: 7: IOCBPbits.IOCBP7 = 1;
  3990  06C8  1794               	bsf	20,7	;volatile
  3991                           
  3992                           ;interruptOnChange.c: 8: IOCAF = 0;
  3993  06C9  0193               	clrf	19	;volatile
  3994                           
  3995                           ;interruptOnChange.c: 9: IOCBF = 0;
  3996  06CA  0196               	clrf	22	;volatile
  3997                           
  3998                           ;interruptOnChange.c: 11: INTCONbits.IOCIE = 1;
  3999  06CB  158B               	bsf	11,3	;volatile
  4000  06CC  0008               	return
  4001  06CD                     __end_of_InterruptOnChange_Initialize:	
  4002                           
  4003                           	psect	text19
  4004  0679                     __ptext19:	
  4005 ;; *************** function _I2C_Initialize *****************
  4006 ;; Defined at:
  4007 ;;		line 9 in file "i2c.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;		None
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;		None
  4012 ;; Return value:  Size  Location     Type
  4013 ;;                  1    wreg      void 
  4014 ;; Registers used:
  4015 ;;		wreg, status,2, status,0
  4016 ;; Tracked objects:
  4017 ;;		On entry : 0/0
  4018 ;;		On exit  : 0/0
  4019 ;;		Unchanged: 0/0
  4020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4021 ;;      Params:         0       0       0       0
  4022 ;;      Locals:         0       0       0       0
  4023 ;;      Temps:          0       0       0       0
  4024 ;;      Totals:         0       0       0       0
  4025 ;;Total ram usage:        0 bytes
  4026 ;; Hardware stack levels used:    1
  4027 ;; Hardware stack levels required when called:    3
  4028 ;; This function calls:
  4029 ;;		Nothing
  4030 ;; This function is called by:
  4031 ;;		_SYSTEM_Initialize
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           
  4036                           ;psect for function _I2C_Initialize
  4037  0679                     _I2C_Initialize:	
  4038                           
  4039                           ;i2c.c: 11: SSP1STATbits.SMP = 0;
  4040                           
  4041                           ;incstack = 0
  4042                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0]
  4043  0679  0024               	movlb	4	; select bank4
  4044  067A  1394               	bcf	20,7	;volatile
  4045                           
  4046                           ;i2c.c: 12: SSP1STATbits.CKE = 1;
  4047  067B  1714               	bsf	20,6	;volatile
  4048                           
  4049                           ;i2c.c: 13: SSP1CON1bits.SSPEN = 1;
  4050  067C  1695               	bsf	21,5	;volatile
  4051                           
  4052                           ;i2c.c: 14: SSP1CON1bits.CKP = 0;
  4053  067D  1215               	bcf	21,4	;volatile
  4054                           
  4055                           ;i2c.c: 15: SSP1CON1bits.SSPM = 0x08;
  4056  067E  0815               	movf	21,w	;volatile
  4057  067F  39F0               	andlw	-16
  4058  0680  3808               	iorlw	8
  4059  0681  0095               	movwf	21	;volatile
  4060                           
  4061                           ;i2c.c: 16: SSP1CON3bits.SDAHT = 0;
  4062  0682  1197               	bcf	23,3	;volatile
  4063                           
  4064                           ;i2c.c: 17: SSP1ADD = 39;
  4065  0683  3027               	movlw	39
  4066  0684  0092               	movwf	18	;volatile
  4067  0685  0008               	return
  4068  0686                     __end_of_I2C_Initialize:	
  4069                           
  4070                           	psect	text20
  4071  06A2                     __ptext20:	
  4072 ;; *************** function _ResetState *****************
  4073 ;; Defined at:
  4074 ;;		line 31 in file "IR_Decode.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;		None
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;		None
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  1    wreg      void 
  4081 ;; Registers used:
  4082 ;;		status,2
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4088 ;;      Params:         0       0       0       0
  4089 ;;      Locals:         0       0       0       0
  4090 ;;      Temps:          0       0       0       0
  4091 ;;      Totals:         0       0       0       0
  4092 ;;Total ram usage:        0 bytes
  4093 ;; Hardware stack levels used:    1
  4094 ;; Hardware stack levels required when called:    3
  4095 ;; This function calls:
  4096 ;;		Nothing
  4097 ;; This function is called by:
  4098 ;;		_main
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           
  4103                           ;psect for function _ResetState
  4104  06A2                     _ResetState:	
  4105                           
  4106                           ;IR_Decode.c: 33: state = 0;
  4107                           
  4108                           ;incstack = 0
  4109                           ; Regs used in _ResetState: [status,2]
  4110  06A2  01FD               	clrf	_state
  4111                           
  4112                           ;IR_Decode.c: 34: gRunPara.HighCount = 0;
  4113  06A3  01F9               	clrf	_gRunPara
  4114                           
  4115                           ;IR_Decode.c: 35: gRunPara.LowCount = 0;
  4116  06A4  01FA               	clrf	_gRunPara+1
  4117                           
  4118                           ;IR_Decode.c: 36: gRunPara.nBit = 0;
  4119  06A5  01FB               	clrf	_gRunPara+2
  4120                           
  4121                           ;IR_Decode.c: 37: rcv = 0;
  4122  06A6  0020               	movlb	0	; select bank0
  4123  06A7  01B2               	clrf	_rcv
  4124                           
  4125                           ;IR_Decode.c: 38: index = 0;
  4126  06A8  01FC               	clrf	_index
  4127  06A9  0008               	return
  4128  06AA                     __end_of_ResetState:	
  4129                           
  4130                           	psect	text21
  4131  044E                     __ptext21:	
  4132 ;; *************** function _LedUpdate *****************
  4133 ;; Defined at:
  4134 ;;		line 41 in file "led.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;		None
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  i               1   15[BANK0 ] unsigned char 
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  1    wreg      void 
  4141 ;; Registers used:
  4142 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4148 ;;      Params:         0       0       0       0
  4149 ;;      Locals:         0       1       0       0
  4150 ;;      Temps:          0       1       0       0
  4151 ;;      Totals:         0       2       0       0
  4152 ;;Total ram usage:        2 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; Hardware stack levels required when called:    6
  4155 ;; This function calls:
  4156 ;;		_SaveLedPara
  4157 ;; This function is called by:
  4158 ;;		_main
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           
  4163                           ;psect for function _LedUpdate
  4164  044E                     _LedUpdate:	
  4165                           
  4166                           ;led.c: 43: unsigned char i;
  4167                           ;led.c: 45: gLedPara.fAuto = IR_ReveiveDataStructure.fModeAuto;
  4168                           
  4169                           ;incstack = 0
  4170                           ; Regs used in _LedUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4171  044E  0020               	movlb	0	; select bank0
  4172  044F  1042               	bcf	_gLedPara,0
  4173  0450  1BB4               	btfsc	_IR_ReveiveDataStructure,7
  4174  0451  1442               	bsf	_gLedPara,0
  4175                           
  4176                           ;led.c: 46: gLedPara.fWhiteOn = IR_ReveiveDataStructure.fWhiteOnOff;
  4177  0452  0020               	movlb	0	; select bank0
  4178  0453  10C2               	bcf	_gLedPara,1
  4179  0454  1AB4               	btfsc	_IR_ReveiveDataStructure,5
  4180  0455  14C2               	bsf	_gLedPara,1
  4181                           
  4182                           ;led.c: 47: gLedPara.fBlueOn = IR_ReveiveDataStructure.fBlueOnOff;
  4183  0456  0020               	movlb	0	; select bank0
  4184  0457  1142               	bcf	_gLedPara,2
  4185  0458  1B34               	btfsc	_IR_ReveiveDataStructure,6
  4186  0459  1542               	bsf	_gLedPara,2
  4187                           
  4188                           ;led.c: 48: gLedPara.sunriseHour = IR_ReveiveDataStructure.RiseTimeHour;
  4189  045A  0020               	movlb	0	; select bank0
  4190  045B  0837               	movf	_IR_ReveiveDataStructure+3,w
  4191  045C  00DB               	movwf	??_LedUpdate
  4192  045D  085B               	movf	??_LedUpdate,w
  4193  045E  00C5               	movwf	_gLedPara+3
  4194                           
  4195                           ;led.c: 49: gLedPara.sunriseMin = IR_ReveiveDataStructure.RiseTimeMinute;
  4196  045F  0838               	movf	_IR_ReveiveDataStructure+4,w
  4197  0460  00DB               	movwf	??_LedUpdate
  4198  0461  085B               	movf	??_LedUpdate,w
  4199  0462  00C6               	movwf	_gLedPara+4
  4200                           
  4201                           ;led.c: 50: gLedPara.sunsetHour = IR_ReveiveDataStructure.SunsetTimeHour;
  4202  0463  083B               	movf	_IR_ReveiveDataStructure+7,w
  4203  0464  00DB               	movwf	??_LedUpdate
  4204  0465  085B               	movf	??_LedUpdate,w
  4205  0466  00C9               	movwf	_gLedPara+7
  4206                           
  4207                           ;led.c: 51: gLedPara.sunsetMin = IR_ReveiveDataStructure.SunsetTimeMinute;
  4208  0467  083C               	movf	_IR_ReveiveDataStructure+8,w
  4209  0468  00DB               	movwf	??_LedUpdate
  4210  0469  085B               	movf	??_LedUpdate,w
  4211  046A  00CA               	movwf	_gLedPara+8
  4212                           
  4213                           ;led.c: 53: for(i = 0;i < 2;i++)
  4214  046B  01DC               	clrf	LedUpdate@i
  4215  046C  3002               	movlw	2
  4216  046D  025C               	subwf	LedUpdate@i,w
  4217  046E  1803               	btfsc	3,0
  4218  046F  2C9F               	goto	l1928
  4219  0470                     l1922:	
  4220                           
  4221                           ;led.c: 54: {
  4222                           ;led.c: 55: gLedPara.bright[i] = IR_ReveiveDataStructure.ManualBrightPercen[i];
  4223  0470  085C               	movf	LedUpdate@i,w
  4224  0471  3E0B               	addlw	11
  4225  0472  3E34               	addlw	(low (_IR_ReveiveDataStructure| 0))& (0+255)
  4226  0473  0086               	movwf	6
  4227  0474  0187               	clrf	7
  4228  0475  0801               	movf	1,w
  4229  0476  00DB               	movwf	??_LedUpdate
  4230  0477  085C               	movf	LedUpdate@i,w
  4231  0478  3E43               	addlw	(low ((_gLedPara| 0+1)))& (0+255)
  4232  0479  0086               	movwf	6
  4233  047A  0187               	clrf	7
  4234  047B  085B               	movf	??_LedUpdate,w
  4235  047C  0081               	movwf	1
  4236                           
  4237                           ;led.c: 56: gLedPara.dayBright[i] = IR_ReveiveDataStructure.RiseBrightPercen[i];
  4238  047D  085C               	movf	LedUpdate@i,w
  4239  047E  3E05               	addlw	5
  4240  047F  3E34               	addlw	(low (_IR_ReveiveDataStructure| 0))& (0+255)
  4241  0480  0086               	movwf	6
  4242  0481  0187               	clrf	7
  4243  0482  0801               	movf	1,w
  4244  0483  00DB               	movwf	??_LedUpdate
  4245  0484  085C               	movf	LedUpdate@i,w
  4246  0485  3E47               	addlw	(low ((_gLedPara| 0+5)))& (0+255)
  4247  0486  0086               	movwf	6
  4248  0487  0187               	clrf	7
  4249  0488  085B               	movf	??_LedUpdate,w
  4250  0489  0081               	movwf	1
  4251                           
  4252                           ;led.c: 57: gLedPara.nightBright[i] = IR_ReveiveDataStructure.SunsetBrightPercen[i];
  4253  048A  085C               	movf	LedUpdate@i,w
  4254  048B  3E09               	addlw	9
  4255  048C  3E34               	addlw	(low (_IR_ReveiveDataStructure| 0))& (0+255)
  4256  048D  0086               	movwf	6
  4257  048E  0187               	clrf	7
  4258  048F  0801               	movf	1,w
  4259  0490  00DB               	movwf	??_LedUpdate
  4260  0491  085C               	movf	LedUpdate@i,w
  4261  0492  3E4B               	addlw	(low ((_gLedPara| 0+9)))& (0+255)
  4262  0493  0086               	movwf	6
  4263  0494  0187               	clrf	7
  4264  0495  085B               	movf	??_LedUpdate,w
  4265  0496  0081               	movwf	1
  4266  0497  3001               	movlw	1
  4267  0498  00DB               	movwf	??_LedUpdate
  4268  0499  085B               	movf	??_LedUpdate,w
  4269  049A  07DC               	addwf	LedUpdate@i,f
  4270  049B  3002               	movlw	2
  4271  049C  025C               	subwf	LedUpdate@i,w
  4272  049D  1C03               	skipc
  4273  049E  2C70               	goto	l1922
  4274  049F                     l1928:	
  4275                           
  4276                           ;led.c: 58: }
  4277                           ;led.c: 59: SaveLedPara();
  4278  049F  3185  2537         	fcall	_SaveLedPara
  4279  04A1  0008               	return
  4280  04A2                     __end_of_LedUpdate:	
  4281                           
  4282                           	psect	text22
  4283  0537                     __ptext22:	
  4284 ;; *************** function _SaveLedPara *****************
  4285 ;; Defined at:
  4286 ;;		line 25 in file "led.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;		None
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;  len             1   13[BANK0 ] unsigned char 
  4291 ;;  cnt             1   12[BANK0 ] unsigned char 
  4292 ;;  offset          1   11[BANK0 ] unsigned char 
  4293 ;;  pbuf            1   10[BANK0 ] PTR unsigned char 
  4294 ;;		 -> gLedPara(11), 
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      void 
  4297 ;; Registers used:
  4298 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4304 ;;      Params:         0       0       0       0
  4305 ;;      Locals:         0       6       0       0
  4306 ;;      Temps:          0       2       0       0
  4307 ;;      Totals:         0       8       0       0
  4308 ;;Total ram usage:        8 bytes
  4309 ;; Hardware stack levels used:    1
  4310 ;; Hardware stack levels required when called:    5
  4311 ;; This function calls:
  4312 ;;		_I2C_WriteBuffer
  4313 ;; This function is called by:
  4314 ;;		_LedUpdate
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           
  4319                           ;psect for function _SaveLedPara
  4320  0537                     _SaveLedPara:	
  4321                           
  4322                           ;led.c: 27: unsigned char len = sizeof( gLedPara );
  4323                           
  4324                           ;incstack = 0
  4325                           ; Regs used in _SaveLedPara: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4326  0537  300B               	movlw	11
  4327  0538  0020               	movlb	0	; select bank0
  4328  0539  00D3               	movwf	??_SaveLedPara
  4329  053A  0853               	movf	??_SaveLedPara,w
  4330  053B  00DA               	movwf	SaveLedPara@len
  4331                           
  4332                           ;led.c: 28: unsigned char offset = 0;
  4333  053C  01D8               	clrf	SaveLedPara@offset
  4334                           
  4335                           ;led.c: 29: unsigned char cnt;
  4336                           ;led.c: 30: unsigned char *pbuf = (unsigned char *) &gLedPara;
  4337  053D  3042               	movlw	(low (_gLedPara| 0))& (0+255)
  4338  053E  00D3               	movwf	??_SaveLedPara
  4339  053F  0853               	movf	??_SaveLedPara,w
  4340  0540  00D7               	movwf	SaveLedPara@pbuf
  4341                           
  4342                           ;led.c: 31: (INTCONbits.GIE = 0);
  4343  0541  138B               	bcf	11,7	;volatile
  4344  0542                     l1810:	
  4345                           ;led.c: 32: while ( len > 0 )
  4346                           
  4347  0542  085A               	movf	SaveLedPara@len,w
  4348  0543  1903               	btfsc	3,2
  4349  0544  2D6E               	goto	l348
  4350                           
  4351                           ;led.c: 33: {
  4352                           ;led.c: 34: cnt = len >= 8 ? 8 : len;
  4353  0545  3008               	movlw	8
  4354  0546  025A               	subwf	SaveLedPara@len,w
  4355  0547  1803               	skipnc
  4356  0548  2D50               	goto	l1802
  4357  0549  085A               	movf	SaveLedPara@len,w
  4358  054A  00D3               	movwf	??_SaveLedPara
  4359  054B  01D4               	clrf	??_SaveLedPara+1
  4360  054C  0853               	movf	??_SaveLedPara,w
  4361  054D  00D5               	movwf	_SaveLedPara$1128
  4362  054E  0854               	movf	??_SaveLedPara+1,w
  4363  054F  2D53               	goto	L1
  4364  0550                     l1802:	
  4365  0550  3008               	movlw	8
  4366  0551  00D5               	movwf	_SaveLedPara$1128
  4367  0552  3000               	movlw	0
  4368  0553                     L1:	
  4369  0553  00D6               	movwf	_SaveLedPara$1128+1
  4370  0554  0855               	movf	_SaveLedPara$1128,w
  4371  0555  00D3               	movwf	??_SaveLedPara
  4372  0556  0853               	movf	??_SaveLedPara,w
  4373  0557  00D9               	movwf	SaveLedPara@cnt
  4374                           
  4375                           ;led.c: 35: I2C_WriteBuffer( 0x20 + offset , pbuf + offset, cnt);
  4376  0558  0857               	movf	SaveLedPara@pbuf,w
  4377  0559  0758               	addwf	SaveLedPara@offset,w
  4378  055A  00D3               	movwf	??_SaveLedPara
  4379  055B  0853               	movf	??_SaveLedPara,w
  4380  055C  00CD               	movwf	I2C_WriteBuffer@pbuf
  4381  055D  0859               	movf	SaveLedPara@cnt,w
  4382  055E  00D4               	movwf	??_SaveLedPara+1
  4383  055F  0854               	movf	??_SaveLedPara+1,w
  4384  0560  00CE               	movwf	I2C_WriteBuffer@len
  4385  0561  0858               	movf	SaveLedPara@offset,w
  4386  0562  3E20               	addlw	32
  4387  0563  3184  24A2  3185   	fcall	_I2C_WriteBuffer
  4388                           
  4389                           ;led.c: 36: offset += cnt;
  4390  0566  0020               	movlb	0	; select bank0
  4391  0567  0859               	movf	SaveLedPara@cnt,w
  4392  0568  00D3               	movwf	??_SaveLedPara
  4393  0569  0853               	movf	??_SaveLedPara,w
  4394  056A  07D8               	addwf	SaveLedPara@offset,f
  4395                           
  4396                           ;led.c: 37: len -= cnt;
  4397  056B  0859               	movf	SaveLedPara@cnt,w
  4398  056C  02DA               	subwf	SaveLedPara@len,f
  4399  056D  2D42               	goto	l1810
  4400  056E                     l348:	
  4401                           
  4402                           ;led.c: 38: }
  4403                           ;led.c: 39: (INTCONbits.GIE = 1);
  4404  056E  178B               	bsf	11,7	;volatile
  4405  056F  0008               	return
  4406  0570                     __end_of_SaveLedPara:	
  4407                           
  4408                           	psect	text23
  4409  04A2                     __ptext23:	
  4410 ;; *************** function _I2C_WriteBuffer *****************
  4411 ;; Defined at:
  4412 ;;		line 66 in file "i2c.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;  suba            1    wreg     unsigned char 
  4415 ;;  pbuf            1    0[BANK0 ] PTR unsigned char 
  4416 ;;		 -> gLedPara(11), 
  4417 ;;  len             1    1[BANK0 ] unsigned char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  suba            1    3[BANK0 ] unsigned char 
  4420 ;;  i               1    5[BANK0 ] unsigned char 
  4421 ;;  n               1    4[BANK0 ] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      void 
  4424 ;; Registers used:
  4425 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4431 ;;      Params:         0       2       0       0
  4432 ;;      Locals:         0       3       0       0
  4433 ;;      Temps:          0       1       0       0
  4434 ;;      Totals:         0       6       0       0
  4435 ;;Total ram usage:        6 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    4
  4438 ;; This function calls:
  4439 ;;		_CheckSSPIF
  4440 ;; This function is called by:
  4441 ;;		_SaveLedPara
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           
  4446                           ;psect for function _I2C_WriteBuffer
  4447  04A2                     _I2C_WriteBuffer:	
  4448                           
  4449                           ;incstack = 0
  4450                           ; Regs used in _I2C_WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4451                           ;I2C_WriteBuffer@suba stored from wreg
  4452  04A2  0020               	movlb	0	; select bank0
  4453  04A3  00D0               	movwf	I2C_WriteBuffer@suba
  4454                           
  4455                           ;i2c.c: 68: unsigned char i = 0;
  4456  04A4  01D2               	clrf	I2C_WriteBuffer@i
  4457                           
  4458                           ;i2c.c: 69: unsigned char n = 0;
  4459  04A5  01D1               	clrf	I2C_WriteBuffer@n
  4460  04A6                     L2:	
  4461                           
  4462                           ;i2c.c: 71: SSP1CON2bits.SEN = 1;
  4463  04A6  0024               	movlb	4	; select bank4
  4464  04A7  1416               	bsf	22,0	;volatile
  4465                           
  4466                           ;i2c.c: 72: CheckSSPIF();
  4467  04A8  3186  26D3  3184   	fcall	_CheckSSPIF
  4468                           
  4469                           ;i2c.c: 74: SSP1BUF = 0xA0;
  4470  04AB  30A0               	movlw	160
  4471  04AC  0024               	movlb	4	; select bank4
  4472  04AD  0091               	movwf	17	;volatile
  4473                           
  4474                           ;i2c.c: 75: CheckSSPIF();
  4475  04AE  3186  26D3  3184   	fcall	_CheckSSPIF
  4476                           
  4477                           ;i2c.c: 76: while(SSP1CON2bits.ACKSTAT)
  4478  04B1  0024               	movlb	4	; select bank4
  4479  04B2  1F16               	btfss	22,6	;volatile
  4480  04B3  2CC7               	goto	l1594
  4481                           
  4482                           ;i2c.c: 77: {
  4483                           ;i2c.c: 78: n ++;
  4484  04B4  3001               	movlw	1
  4485  04B5  0020               	movlb	0	; select bank0
  4486  04B6  00CF               	movwf	??_I2C_WriteBuffer
  4487  04B7  084F               	movf	??_I2C_WriteBuffer,w
  4488  04B8  07D1               	addwf	I2C_WriteBuffer@n,f
  4489                           
  4490                           ;i2c.c: 79: if(n > 10)
  4491  04B9  300B               	movlw	11
  4492  04BA  0251               	subwf	I2C_WriteBuffer@n,w
  4493  04BB  1803               	btfsc	3,0
  4494  04BC  0008               	return
  4495                           
  4496                           ;i2c.c: 82: }
  4497                           ;i2c.c: 83: _delay((unsigned long)((1)*(16000000/4000.0)));
  4498                           
  4499                           ;i2c.c: 80: {
  4500                           ;i2c.c: 81: return ;
  4501  04BD  3006               	movlw	6
  4502  04BE  0020               	movlb	0	; select bank0
  4503  04BF  00CF               	movwf	??_I2C_WriteBuffer
  4504  04C0  3030               	movlw	48
  4505  04C1                     u1777:	
  4506  04C1  0B89               	decfsz	9,f
  4507  04C2  2CC1               	goto	u1777
  4508  04C3  0BCF               	decfsz	??_I2C_WriteBuffer,f
  4509  04C4  2CC1               	goto	u1777
  4510  04C5  0000               	nop
  4511  04C6  2CA6               	goto	L2
  4512  04C7                     l1594:	
  4513                           ;i2c.c: 87: CheckSSPIF();
  4514                           
  4515                           ;i2c.c: 86: SSP1BUF = 0xA0;
  4516                           
  4517                           ;i2c.c: 85: CheckSSPIF();
  4518                           
  4519                           ;i2c.c: 84: SSP1CON2bits.SEN = 1;
  4520                           
  4521                           
  4522                           ;i2c.c: 88: }
  4523                           ;i2c.c: 90: SSP1BUF = suba;
  4524  04C7  0020               	movlb	0	; select bank0
  4525  04C8  0850               	movf	I2C_WriteBuffer@suba,w
  4526  04C9  0024               	movlb	4	; select bank4
  4527  04CA  0091               	movwf	17	;volatile
  4528                           
  4529                           ;i2c.c: 91: CheckSSPIF();
  4530  04CB  3186  26D3  3184   	fcall	_CheckSSPIF
  4531                           
  4532                           ;i2c.c: 92: if(SSP1CON2bits.ACKSTAT)
  4533  04CE  0024               	movlb	4	; select bank4
  4534  04CF  1B16               	btfsc	22,6	;volatile
  4535  04D0  0008               	return
  4536                           
  4537                           ;i2c.c: 95: }
  4538                           ;i2c.c: 97: for(i = 0;i < len;i ++)
  4539                           
  4540                           ;i2c.c: 93: {
  4541                           ;i2c.c: 94: return ;
  4542  04D1  0020               	movlb	0	; select bank0
  4543  04D2  01D2               	clrf	I2C_WriteBuffer@i
  4544  04D3                     l1614:	
  4545  04D3  084E               	movf	I2C_WriteBuffer@len,w
  4546  04D4  0252               	subwf	I2C_WriteBuffer@i,w
  4547  04D5  1803               	btfsc	3,0
  4548  04D6  2CEC               	goto	l212
  4549                           
  4550                           ;i2c.c: 98: {
  4551                           ;i2c.c: 99: SSP1BUF = *(pbuf + i);
  4552  04D7  0852               	movf	I2C_WriteBuffer@i,w
  4553  04D8  074D               	addwf	I2C_WriteBuffer@pbuf,w
  4554  04D9  00CF               	movwf	??_I2C_WriteBuffer
  4555  04DA  084F               	movf	??_I2C_WriteBuffer,w
  4556  04DB  0086               	movwf	6
  4557  04DC  0187               	clrf	7
  4558  04DD  0801               	movf	1,w
  4559  04DE  0024               	movlb	4	; select bank4
  4560  04DF  0091               	movwf	17	;volatile
  4561                           
  4562                           ;i2c.c: 100: CheckSSPIF();
  4563  04E0  3186  26D3  3184   	fcall	_CheckSSPIF
  4564                           
  4565                           ;i2c.c: 101: if(SSP1CON2bits.ACKSTAT)
  4566  04E3  0024               	movlb	4	; select bank4
  4567  04E4  1B16               	btfsc	22,6	;volatile
  4568  04E5  0008               	return
  4569                           
  4570                           ;i2c.c: 102: {
  4571                           ;i2c.c: 103: return ;
  4572  04E6  3001               	movlw	1
  4573  04E7  0020               	movlb	0	; select bank0
  4574  04E8  00CF               	movwf	??_I2C_WriteBuffer
  4575  04E9  084F               	movf	??_I2C_WriteBuffer,w
  4576  04EA  07D2               	addwf	I2C_WriteBuffer@i,f
  4577  04EB  2CD3               	goto	l1614
  4578  04EC                     l212:	
  4579                           
  4580                           ;i2c.c: 104: }
  4581                           ;i2c.c: 105: }
  4582                           ;i2c.c: 107: SSP1CON2bits.PEN = 1;
  4583  04EC  0024               	movlb	4	; select bank4
  4584  04ED  1516               	bsf	22,2	;volatile
  4585                           
  4586                           ;i2c.c: 108: CheckSSPIF();
  4587  04EE  3186  26D3         	fcall	_CheckSSPIF
  4588  04F0  0008               	return
  4589  04F1                     __end_of_I2C_WriteBuffer:	
  4590                           
  4591                           	psect	text24
  4592  03F1                     __ptext24:	
  4593 ;; *************** function _LedParaInit *****************
  4594 ;; Defined at:
  4595 ;;		line 181 in file "led.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;		None
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;  i               1    9[BANK0 ] unsigned char 
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  1    wreg      void 
  4602 ;; Registers used:
  4603 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4609 ;;      Params:         0       0       0       0
  4610 ;;      Locals:         0       1       0       0
  4611 ;;      Temps:          0       2       0       0
  4612 ;;      Totals:         0       3       0       0
  4613 ;;Total ram usage:        3 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; Hardware stack levels required when called:    5
  4616 ;; This function calls:
  4617 ;;		_I2C_ReadBuffer
  4618 ;; This function is called by:
  4619 ;;		_main
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           
  4624                           ;psect for function _LedParaInit
  4625  03F1                     _LedParaInit:	
  4626                           
  4627                           ;led.c: 183: unsigned char i;
  4628                           ;led.c: 185: I2C_ReadBuffer(0x20, (unsigned char *) &gLedPara, sizeof (gLedPara));
  4629                           
  4630                           ;incstack = 0
  4631                           ; Regs used in _LedParaInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4632  03F1  3042               	movlw	(low (_gLedPara| 0))& (0+255)
  4633  03F2  0020               	movlb	0	; select bank0
  4634  03F3  00D4               	movwf	??_LedParaInit
  4635  03F4  0854               	movf	??_LedParaInit,w
  4636  03F5  00CD               	movwf	I2C_ReadBuffer@pbuf
  4637  03F6  300B               	movlw	11
  4638  03F7  00D5               	movwf	??_LedParaInit+1
  4639  03F8  0855               	movf	??_LedParaInit+1,w
  4640  03F9  00CE               	movwf	I2C_ReadBuffer@len
  4641  03FA  3020               	movlw	32
  4642  03FB  3181  21FA  3183   	fcall	_I2C_ReadBuffer
  4643                           
  4644                           ;led.c: 187: for (i = 0; i < 2; i++)
  4645  03FE  0020               	movlb	0	; select bank0
  4646  03FF  01D6               	clrf	LedParaInit@i
  4647  0400  3002               	movlw	2
  4648  0401  0256               	subwf	LedParaInit@i,w
  4649  0402  1803               	btfsc	3,0
  4650  0403  2C3C               	goto	l1890
  4651  0404                     l1878:	
  4652                           
  4653                           ;led.c: 188: {
  4654                           ;led.c: 189: if (gLedPara.bright[i] > 100)
  4655  0404  0856               	movf	LedParaInit@i,w
  4656  0405  3E43               	addlw	(low ((_gLedPara| 0+1)))& (0+255)
  4657  0406  0086               	movwf	6
  4658  0407  0187               	clrf	7
  4659  0408  3065               	movlw	101
  4660  0409  0201               	subwf	1,w
  4661  040A  1C03               	skipc
  4662  040B  2C14               	goto	l405
  4663                           
  4664                           ;led.c: 190: {
  4665                           ;led.c: 191: gLedPara.bright[i] = 100;
  4666  040C  3064               	movlw	100
  4667  040D  00D4               	movwf	??_LedParaInit
  4668  040E  0856               	movf	LedParaInit@i,w
  4669  040F  3E43               	addlw	(low ((_gLedPara| 0+1)))& (0+255)
  4670  0410  0086               	movwf	6
  4671  0411  0187               	clrf	7
  4672  0412  0854               	movf	??_LedParaInit,w
  4673  0413  0081               	movwf	1
  4674  0414                     l405:	
  4675                           
  4676                           ;led.c: 192: }
  4677                           ;led.c: 193: if (gLedPara.dayBright[i] > 100)
  4678  0414  0856               	movf	LedParaInit@i,w
  4679  0415  3E47               	addlw	(low ((_gLedPara| 0+5)))& (0+255)
  4680  0416  0086               	movwf	6
  4681  0417  0187               	clrf	7
  4682  0418  3065               	movlw	101
  4683  0419  0201               	subwf	1,w
  4684  041A  1C03               	skipc
  4685  041B  2C24               	goto	l406
  4686                           
  4687                           ;led.c: 194: {
  4688                           ;led.c: 195: gLedPara.dayBright[i] = 100;
  4689  041C  3064               	movlw	100
  4690  041D  00D4               	movwf	??_LedParaInit
  4691  041E  0856               	movf	LedParaInit@i,w
  4692  041F  3E47               	addlw	(low ((_gLedPara| 0+5)))& (0+255)
  4693  0420  0086               	movwf	6
  4694  0421  0187               	clrf	7
  4695  0422  0854               	movf	??_LedParaInit,w
  4696  0423  0081               	movwf	1
  4697  0424                     l406:	
  4698                           
  4699                           ;led.c: 196: }
  4700                           ;led.c: 197: if (gLedPara.nightBright[i] > 100)
  4701  0424  0856               	movf	LedParaInit@i,w
  4702  0425  3E4B               	addlw	(low ((_gLedPara| 0+9)))& (0+255)
  4703  0426  0086               	movwf	6
  4704  0427  0187               	clrf	7
  4705  0428  3065               	movlw	101
  4706  0429  0201               	subwf	1,w
  4707  042A  1C03               	skipc
  4708  042B  2C34               	goto	l1886
  4709                           
  4710                           ;led.c: 198: {
  4711                           ;led.c: 199: gLedPara.nightBright[i] = 100;
  4712  042C  3064               	movlw	100
  4713  042D  00D4               	movwf	??_LedParaInit
  4714  042E  0856               	movf	LedParaInit@i,w
  4715  042F  3E4B               	addlw	(low ((_gLedPara| 0+9)))& (0+255)
  4716  0430  0086               	movwf	6
  4717  0431  0187               	clrf	7
  4718  0432  0854               	movf	??_LedParaInit,w
  4719  0433  0081               	movwf	1
  4720  0434                     l1886:	
  4721  0434  3001               	movlw	1
  4722  0435  00D4               	movwf	??_LedParaInit
  4723  0436  0854               	movf	??_LedParaInit,w
  4724  0437  07D6               	addwf	LedParaInit@i,f
  4725  0438  3002               	movlw	2
  4726  0439  0256               	subwf	LedParaInit@i,w
  4727  043A  1C03               	skipc
  4728  043B  2C04               	goto	l1878
  4729  043C                     l1890:	
  4730                           
  4731                           ;led.c: 200: }
  4732                           ;led.c: 201: }
  4733                           ;led.c: 202: if(gLedPara.sunriseHour > 23)
  4734  043C  3018               	movlw	24
  4735  043D  0245               	subwf	_gLedPara+3,w
  4736  043E  1803               	btfsc	3,0
  4737                           
  4738                           ;led.c: 203: {
  4739                           ;led.c: 204: gLedPara.sunriseHour = 0;
  4740  043F  01C5               	clrf	_gLedPara+3
  4741                           
  4742                           ;led.c: 205: }
  4743                           ;led.c: 206: if(gLedPara.sunriseMin > 59)
  4744  0440  303C               	movlw	60
  4745  0441  0246               	subwf	_gLedPara+4,w
  4746  0442  1803               	btfsc	3,0
  4747                           
  4748                           ;led.c: 207: {
  4749                           ;led.c: 208: gLedPara.sunriseMin = 0;
  4750  0443  01C6               	clrf	_gLedPara+4
  4751                           
  4752                           ;led.c: 209: }
  4753                           ;led.c: 210: if(gLedPara.sunsetHour > 23)
  4754  0444  3018               	movlw	24
  4755  0445  0249               	subwf	_gLedPara+7,w
  4756  0446  1803               	btfsc	3,0
  4757                           
  4758                           ;led.c: 211: {
  4759                           ;led.c: 212: gLedPara.sunsetHour = 0;
  4760  0447  01C9               	clrf	_gLedPara+7
  4761                           
  4762                           ;led.c: 213: }
  4763                           ;led.c: 214: if(gLedPara.sunsetMin > 59)
  4764  0448  303C               	movlw	60
  4765  0449  024A               	subwf	_gLedPara+8,w
  4766  044A  1C03               	skipc
  4767  044B  0008               	return
  4768                           
  4769                           ;led.c: 215: {
  4770                           ;led.c: 216: gLedPara.sunsetMin = 0;
  4771  044C  01CA               	clrf	_gLedPara+8
  4772  044D  0008               	return
  4773  044E                     __end_of_LedParaInit:	
  4774                           
  4775                           	psect	text25
  4776  01FA                     __ptext25:	
  4777 ;; *************** function _I2C_ReadBuffer *****************
  4778 ;; Defined at:
  4779 ;;		line 162 in file "i2c.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  suba            1    wreg     unsigned char 
  4782 ;;  pbuf            1    0[BANK0 ] PTR unsigned char 
  4783 ;;		 -> gLedPara(11), 
  4784 ;;  len             1    1[BANK0 ] unsigned char 
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;  suba            1    4[BANK0 ] unsigned char 
  4787 ;;  i               1    6[BANK0 ] unsigned char 
  4788 ;;  n               1    5[BANK0 ] unsigned char 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      void 
  4791 ;; Registers used:
  4792 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4798 ;;      Params:         0       2       0       0
  4799 ;;      Locals:         0       3       0       0
  4800 ;;      Temps:          0       2       0       0
  4801 ;;      Totals:         0       7       0       0
  4802 ;;Total ram usage:        7 bytes
  4803 ;; Hardware stack levels used:    1
  4804 ;; Hardware stack levels required when called:    4
  4805 ;; This function calls:
  4806 ;;		_CheckSSPIF
  4807 ;; This function is called by:
  4808 ;;		_LedParaInit
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           
  4813                           ;psect for function _I2C_ReadBuffer
  4814  01FA                     _I2C_ReadBuffer:	
  4815                           
  4816                           ;incstack = 0
  4817                           ; Regs used in _I2C_ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4818                           ;I2C_ReadBuffer@suba stored from wreg
  4819  01FA  0020               	movlb	0	; select bank0
  4820  01FB  00D1               	movwf	I2C_ReadBuffer@suba
  4821                           
  4822                           ;i2c.c: 164: unsigned char i = 0;
  4823  01FC  01D3               	clrf	I2C_ReadBuffer@i
  4824                           
  4825                           ;i2c.c: 165: unsigned char n = 0;
  4826  01FD  01D2               	clrf	I2C_ReadBuffer@n
  4827  01FE                     L3:	
  4828                           
  4829                           ;i2c.c: 167: SSP1CON2bits.SEN = 1;
  4830  01FE  0024               	movlb	4	; select bank4
  4831  01FF  1416               	bsf	22,0	;volatile
  4832                           
  4833                           ;i2c.c: 168: CheckSSPIF();
  4834  0200  3186  26D3  3181   	fcall	_CheckSSPIF
  4835                           
  4836                           ;i2c.c: 170: SSP1BUF = 0xA0;
  4837  0203  30A0               	movlw	160
  4838  0204  0024               	movlb	4	; select bank4
  4839  0205  0091               	movwf	17	;volatile
  4840                           
  4841                           ;i2c.c: 171: CheckSSPIF();
  4842  0206  3186  26D3  3181   	fcall	_CheckSSPIF
  4843                           
  4844                           ;i2c.c: 172: while(SSP1CON2bits.ACKSTAT)
  4845  0209  0024               	movlb	4	; select bank4
  4846  020A  1F16               	btfss	22,6	;volatile
  4847  020B  2A1F               	goto	l1734
  4848                           
  4849                           ;i2c.c: 173: {
  4850                           ;i2c.c: 174: n ++;
  4851  020C  3001               	movlw	1
  4852  020D  0020               	movlb	0	; select bank0
  4853  020E  00CF               	movwf	??_I2C_ReadBuffer
  4854  020F  084F               	movf	??_I2C_ReadBuffer,w
  4855  0210  07D2               	addwf	I2C_ReadBuffer@n,f
  4856                           
  4857                           ;i2c.c: 175: if(n > 10)
  4858  0211  300B               	movlw	11
  4859  0212  0252               	subwf	I2C_ReadBuffer@n,w
  4860  0213  1803               	btfsc	3,0
  4861  0214  0008               	return
  4862                           
  4863                           ;i2c.c: 178: }
  4864                           ;i2c.c: 179: _delay((unsigned long)((1)*(16000000/4000.0)));
  4865                           
  4866                           ;i2c.c: 176: {
  4867                           ;i2c.c: 177: return ;
  4868  0215  3006               	movlw	6
  4869  0216  0020               	movlb	0	; select bank0
  4870  0217  00CF               	movwf	??_I2C_ReadBuffer
  4871  0218  3030               	movlw	48
  4872  0219                     u1787:	
  4873  0219  0B89               	decfsz	9,f
  4874  021A  2A19               	goto	u1787
  4875  021B  0BCF               	decfsz	??_I2C_ReadBuffer,f
  4876  021C  2A19               	goto	u1787
  4877  021D  0000               	nop
  4878  021E  29FE               	goto	L3
  4879  021F                     l1734:	
  4880                           ;i2c.c: 183: CheckSSPIF();
  4881                           
  4882                           ;i2c.c: 182: SSP1BUF = 0xA0;
  4883                           
  4884                           ;i2c.c: 181: CheckSSPIF();
  4885                           
  4886                           ;i2c.c: 180: SSP1CON2bits.SEN = 1;
  4887                           
  4888                           
  4889                           ;i2c.c: 184: }
  4890                           ;i2c.c: 186: SSP1BUF = suba;
  4891  021F  0020               	movlb	0	; select bank0
  4892  0220  0851               	movf	I2C_ReadBuffer@suba,w
  4893  0221  0024               	movlb	4	; select bank4
  4894  0222  0091               	movwf	17	;volatile
  4895                           
  4896                           ;i2c.c: 187: CheckSSPIF();
  4897  0223  3186  26D3  3181   	fcall	_CheckSSPIF
  4898                           
  4899                           ;i2c.c: 188: if(SSP1CON2bits.ACKSTAT)
  4900  0226  0024               	movlb	4	; select bank4
  4901  0227  1B16               	btfsc	22,6	;volatile
  4902  0228  0008               	return
  4903                           
  4904                           ;i2c.c: 191: }
  4905                           ;i2c.c: 193: SSP1CON2bits.RSEN = 1;
  4906                           
  4907                           ;i2c.c: 189: {
  4908                           ;i2c.c: 190: return ;
  4909  0229  1496               	bsf	22,1	;volatile
  4910                           
  4911                           ;i2c.c: 194: CheckSSPIF();
  4912  022A  3186  26D3  3181   	fcall	_CheckSSPIF
  4913                           
  4914                           ;i2c.c: 195: SSP1BUF = 0xA0 + 1;
  4915  022D  30A1               	movlw	161
  4916  022E  0024               	movlb	4	; select bank4
  4917  022F  0091               	movwf	17	;volatile
  4918                           
  4919                           ;i2c.c: 196: CheckSSPIF();
  4920  0230  3186  26D3  3181   	fcall	_CheckSSPIF
  4921                           
  4922                           ;i2c.c: 197: if(SSP1CON2bits.ACKSTAT)
  4923  0233  0024               	movlb	4	; select bank4
  4924  0234  1B16               	btfsc	22,6	;volatile
  4925  0235  0008               	return
  4926                           
  4927                           ;i2c.c: 200: }
  4928                           ;i2c.c: 202: for(i = 0;i < len - 1;i ++)
  4929                           
  4930                           ;i2c.c: 198: {
  4931                           ;i2c.c: 199: return ;
  4932  0236  0020               	movlb	0	; select bank0
  4933  0237  01D3               	clrf	I2C_ReadBuffer@i
  4934  0238                     l1766:	
  4935  0238  084E               	movf	I2C_ReadBuffer@len,w
  4936  0239  3EFF               	addlw	255
  4937  023A  00CF               	movwf	??_I2C_ReadBuffer
  4938  023B  30FF               	movlw	255
  4939  023C  1803               	skipnc
  4940  023D  3000               	movlw	0
  4941  023E  00D0               	movwf	??_I2C_ReadBuffer+1
  4942  023F  0850               	movf	??_I2C_ReadBuffer+1,w
  4943  0240  3A80               	xorlw	128
  4944  0241  3C80               	sublw	128
  4945  0242  1D03               	skipz
  4946  0243  2A46               	goto	u1065
  4947  0244  084F               	movf	??_I2C_ReadBuffer,w
  4948  0245  0253               	subwf	I2C_ReadBuffer@i,w
  4949  0246                     u1065:	
  4950  0246  1803               	btfsc	3,0
  4951  0247  2A65               	goto	l233
  4952                           
  4953                           ;i2c.c: 203: {
  4954                           ;i2c.c: 204: SSP1CON2bits.RCEN = 1;
  4955  0248  0024               	movlb	4	; select bank4
  4956  0249  1596               	bsf	22,3	;volatile
  4957                           
  4958                           ;i2c.c: 205: CheckSSPIF();
  4959  024A  3186  26D3  3181   	fcall	_CheckSSPIF
  4960                           
  4961                           ;i2c.c: 206: *(pbuf + i) = SSP1BUF;
  4962  024D  0024               	movlb	4	; select bank4
  4963  024E  0811               	movf	17,w	;volatile
  4964  024F  0020               	movlb	0	; select bank0
  4965  0250  00CF               	movwf	??_I2C_ReadBuffer
  4966  0251  0853               	movf	I2C_ReadBuffer@i,w
  4967  0252  074D               	addwf	I2C_ReadBuffer@pbuf,w
  4968  0253  00D0               	movwf	??_I2C_ReadBuffer+1
  4969  0254  0850               	movf	??_I2C_ReadBuffer+1,w
  4970  0255  0086               	movwf	6
  4971  0256  0187               	clrf	7
  4972  0257  084F               	movf	??_I2C_ReadBuffer,w
  4973  0258  0081               	movwf	1
  4974                           
  4975                           ;i2c.c: 207: SSP1CON2bits.ACKDT = 0;
  4976  0259  0024               	movlb	4	; select bank4
  4977  025A  1296               	bcf	22,5	;volatile
  4978                           
  4979                           ;i2c.c: 208: SSP1CON2bits.ACKEN = 1;
  4980  025B  1616               	bsf	22,4	;volatile
  4981                           
  4982                           ;i2c.c: 209: CheckSSPIF();
  4983  025C  3186  26D3  3181   	fcall	_CheckSSPIF
  4984  025F  3001               	movlw	1
  4985  0260  0020               	movlb	0	; select bank0
  4986  0261  00CF               	movwf	??_I2C_ReadBuffer
  4987  0262  084F               	movf	??_I2C_ReadBuffer,w
  4988  0263  07D3               	addwf	I2C_ReadBuffer@i,f
  4989  0264  2A38               	goto	l1766
  4990  0265                     l233:	
  4991                           
  4992                           ;i2c.c: 210: }
  4993                           ;i2c.c: 211: SSP1CON2bits.RCEN = 1;
  4994  0265  0024               	movlb	4	; select bank4
  4995  0266  1596               	bsf	22,3	;volatile
  4996                           
  4997                           ;i2c.c: 212: CheckSSPIF();
  4998  0267  3186  26D3  3181   	fcall	_CheckSSPIF
  4999                           
  5000                           ;i2c.c: 213: *(pbuf + len - 1) = SSP1BUF;
  5001  026A  0024               	movlb	4	; select bank4
  5002  026B  0811               	movf	17,w	;volatile
  5003  026C  0020               	movlb	0	; select bank0
  5004  026D  00CF               	movwf	??_I2C_ReadBuffer
  5005  026E  084E               	movf	I2C_ReadBuffer@len,w
  5006  026F  074D               	addwf	I2C_ReadBuffer@pbuf,w
  5007  0270  00D0               	movwf	??_I2C_ReadBuffer+1
  5008  0271  0850               	movf	??_I2C_ReadBuffer+1,w
  5009  0272  3EFF               	addlw	-1
  5010  0273  0086               	movwf	6
  5011  0274  0187               	clrf	7
  5012  0275  084F               	movf	??_I2C_ReadBuffer,w
  5013  0276  0081               	movwf	1
  5014                           
  5015                           ;i2c.c: 214: SSP1CON2bits.ACKDT = 1;
  5016  0277  0024               	movlb	4	; select bank4
  5017  0278  1696               	bsf	22,5	;volatile
  5018                           
  5019                           ;i2c.c: 215: SSP1CON2bits.ACKEN = 1;
  5020  0279  1616               	bsf	22,4	;volatile
  5021                           
  5022                           ;i2c.c: 216: CheckSSPIF();
  5023  027A  3186  26D3  3181   	fcall	_CheckSSPIF
  5024                           
  5025                           ;i2c.c: 218: SSP1CON2bits.PEN = 1;
  5026  027D  0024               	movlb	4	; select bank4
  5027  027E  1516               	bsf	22,2	;volatile
  5028                           
  5029                           ;i2c.c: 219: CheckSSPIF();
  5030  027F  3186  26D3         	fcall	_CheckSSPIF
  5031  0281  0008               	return
  5032  0282                     __end_of_I2C_ReadBuffer:	
  5033                           
  5034                           	psect	text26
  5035  06D3                     __ptext26:	
  5036 ;; *************** function _CheckSSPIF *****************
  5037 ;; Defined at:
  5038 ;;		line 20 in file "i2c.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		None
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5052 ;;      Params:         0       0       0       0
  5053 ;;      Locals:         0       0       0       0
  5054 ;;      Temps:          0       0       0       0
  5055 ;;      Totals:         0       0       0       0
  5056 ;;Total ram usage:        0 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    3
  5059 ;; This function calls:
  5060 ;;		Nothing
  5061 ;; This function is called by:
  5062 ;;		_I2C_WriteBuffer
  5063 ;;		_I2C_ReadBuffer
  5064 ;;		_I2C_WriteByte
  5065 ;;		_I2C_ReadByte
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           
  5070                           ;psect for function _CheckSSPIF
  5071  06D3                     _CheckSSPIF:	
  5072  06D3                     l188:	
  5073                           ;i2c.c: 22: while(!SSP1IF);
  5074                           
  5075                           ;incstack = 0
  5076                           ; Regs used in _CheckSSPIF: []
  5077                           
  5078  06D3  0020               	movlb	0	; select bank0
  5079  06D4  1D91               	btfss	17,3	;volatile
  5080  06D5  2ED3               	goto	l188
  5081                           
  5082                           ;i2c.c: 23: SSP1IF = 0;
  5083  06D6  1191               	bcf	17,3	;volatile
  5084  06D7  0008               	return
  5085  06D8                     __end_of_CheckSSPIF:	
  5086                           
  5087                           	psect	text27
  5088  0033                     __ptext27:	
  5089 ;; *************** function _AutoMode *****************
  5090 ;; Defined at:
  5091 ;;		line 115 in file "led.c"
  5092 ;; Parameters:    Size  Location     Type
  5093 ;;		None
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;  dTime           4   23[BANK0 ] long 
  5096 ;;  i               1   29[BANK0 ] unsigned char 
  5097 ;;  pendBright      1   28[BANK0 ] PTR unsigned char 
  5098 ;;		 -> gLedPara.nightBright(2), gLedPara.dayBright(2), gLedPara(11), 
  5099 ;;  pstartBright    1   27[BANK0 ] PTR unsigned char 
  5100 ;;		 -> gLedPara.nightBright(2), gLedPara.dayBright(2), gLedPara(11), 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      void 
  5103 ;; Registers used:
  5104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5110 ;;      Params:         0       0       0       0
  5111 ;;      Locals:         0       7       0       0
  5112 ;;      Temps:          0       9       0       0
  5113 ;;      Totals:         0      16       0       0
  5114 ;;Total ram usage:       16 bytes
  5115 ;; Hardware stack levels used:    1
  5116 ;; Hardware stack levels required when called:    5
  5117 ;; This function calls:
  5118 ;;		_PWM1_Enable
  5119 ;;		_PWM2_Enable
  5120 ;;		_TimeChangeSec
  5121 ;;		_UpdatePWM
  5122 ;;		___wmul
  5123 ;; This function is called by:
  5124 ;;		_main
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           
  5129                           ;psect for function _AutoMode
  5130  0033                     _AutoMode:	
  5131                           
  5132                           ;led.c: 117: unsigned char i;
  5133                           ;led.c: 118: unsigned char *pstartBright;
  5134                           ;led.c: 119: unsigned char *pendBright;
  5135                           ;led.c: 120: long signed int dTime;
  5136                           ;led.c: 121: static unsigned char flag = 1;
  5137                           ;led.c: 123: if(!gLedPara.fAuto)
  5138                           
  5139                           ;incstack = 0
  5140                           ; Regs used in _AutoMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5141  0033  0020               	movlb	0	; select bank0
  5142  0034  1842               	btfsc	_gLedPara,0
  5143  0035  0008               	return
  5144                           
  5145                           ;led.c: 124: {
  5146                           ;led.c: 125: PWM1_Enable();
  5147  0036  3186  26EB  3180   	fcall	_PWM1_Enable
  5148                           
  5149                           ;led.c: 126: PWM2_Enable();
  5150  0039  3186  26E8  3180   	fcall	_PWM2_Enable
  5151                           
  5152                           ;led.c: 127: TimeChangeSec();
  5153  003C  3182  2282  3180   	fcall	_TimeChangeSec
  5154                           
  5155                           ;led.c: 129: if(gLedRunPara.sunrisetime == gLedRunPara.sunsettime)
  5156  003F  0020               	movlb	0	; select bank0
  5157  0040  0825               	movf	_gLedRunPara+5,w
  5158  0041  0623               	xorwf	_gLedRunPara+3,w
  5159  0042  1D03               	skipz
  5160  0043  2846               	goto	u1335
  5161  0044  0824               	movf	_gLedRunPara+4,w
  5162  0045  0622               	xorwf	_gLedRunPara+2,w
  5163  0046                     u1335:	
  5164  0046  1D03               	skipz
  5165  0047  2870               	goto	l1974
  5166                           
  5167                           ;led.c: 130: {
  5168                           ;led.c: 131: for(i = 0;i < 2;i++)
  5169  0048  01EA               	clrf	AutoMode@i
  5170  0049  3002               	movlw	2
  5171  004A  026A               	subwf	AutoMode@i,w
  5172  004B  1803               	btfsc	3,0
  5173  004C  2870               	goto	l1974
  5174  004D                     l1968:	
  5175                           
  5176                           ;led.c: 132: {
  5177                           ;led.c: 133: gLedRunPara.nCurrentLum[i] = (unsigned int)gLedPara.nightBright[i] * 10;
  5178  004D  086A               	movf	AutoMode@i,w
  5179  004E  3E4B               	addlw	(low ((_gLedPara| 0+9)))& (0+255)
  5180  004F  0086               	movwf	6
  5181  0050  0187               	clrf	7
  5182  0051  0801               	movf	1,w
  5183  0052  00DB               	movwf	??_AutoMode
  5184  0053  01DC               	clrf	??_AutoMode+1
  5185  0054  085B               	movf	??_AutoMode,w
  5186  0055  00CD               	movwf	___wmul@multiplier
  5187  0056  085C               	movf	??_AutoMode+1,w
  5188  0057  00CE               	movwf	___wmul@multiplier+1
  5189  0058  300A               	movlw	10
  5190  0059  00CF               	movwf	___wmul@multiplicand
  5191  005A  3000               	movlw	0
  5192  005B  00D0               	movwf	___wmul@multiplicand+1
  5193  005C  3185  25DC  3180   	fcall	___wmul
  5194  005F  0020               	movlb	0	; select bank0
  5195  0060  356A               	lslf	AutoMode@i,w
  5196  0061  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  5197  0062  0086               	movwf	6
  5198  0063  0187               	clrf	7
  5199  0064  084D               	movf	?___wmul,w
  5200  0065  3FC0               	movwi [0]fsr1
  5201  0066  084E               	movf	?___wmul+1,w
  5202  0067  3FC1               	movwi [1]fsr1
  5203  0068  3001               	movlw	1
  5204  0069  00DB               	movwf	??_AutoMode
  5205  006A  085B               	movf	??_AutoMode,w
  5206  006B  07EA               	addwf	AutoMode@i,f
  5207  006C  3002               	movlw	2
  5208  006D  026A               	subwf	AutoMode@i,w
  5209  006E  1C03               	skipc
  5210  006F  284D               	goto	l1968
  5211  0070                     l1974:	
  5212                           
  5213                           ;led.c: 134: }
  5214                           ;led.c: 135: }
  5215                           ;led.c: 136: if(((gLedRunPara.sunrisetime < gLedRunPara.sunsettime) && (gLedRunPara.sunr
      +                          isetime <= gLedRunPara.nCurrentTime) && (gLedRunPara.nCurrentTime < gLedRunPara.sunsetti
      +                          me))
  5216                           ;led.c: 137: || ((gLedRunPara.sunrisetime > gLedRunPara.sunsettime) && ((gLedRunPara.nCu
      +                          rrentTime >= gLedRunPara.sunrisetime) || (gLedRunPara.nCurrentTime < gLedRunPara.sunsett
      +                          ime))))
  5217  0070  0825               	movf	_gLedRunPara+5,w
  5218  0071  0223               	subwf	_gLedRunPara+3,w
  5219  0072  1D03               	skipz
  5220  0073  2876               	goto	u1365
  5221  0074  0824               	movf	_gLedRunPara+4,w
  5222  0075  0222               	subwf	_gLedRunPara+2,w
  5223  0076                     u1365:	
  5224  0076  1803               	skipnc
  5225  0077  2888               	goto	l1980
  5226  0078  0823               	movf	_gLedRunPara+3,w
  5227  0079  0221               	subwf	_gLedRunPara+1,w
  5228  007A  1D03               	skipz
  5229  007B  287E               	goto	u1375
  5230  007C  0822               	movf	_gLedRunPara+2,w
  5231  007D  0220               	subwf	_gLedRunPara,w
  5232  007E                     u1375:	
  5233  007E  1C03               	skipc
  5234  007F  2888               	goto	l1980
  5235  0080  0825               	movf	_gLedRunPara+5,w
  5236  0081  0221               	subwf	_gLedRunPara+1,w
  5237  0082  1D03               	skipz
  5238  0083  2886               	goto	u1385
  5239  0084  0824               	movf	_gLedRunPara+4,w
  5240  0085  0220               	subwf	_gLedRunPara,w
  5241  0086                     u1385:	
  5242  0086  1C03               	skipc
  5243  0087  28A0               	goto	l1986
  5244  0088                     l1980:	
  5245  0088  0823               	movf	_gLedRunPara+3,w
  5246  0089  0225               	subwf	_gLedRunPara+5,w
  5247  008A  1D03               	skipz
  5248  008B  288E               	goto	u1395
  5249  008C  0822               	movf	_gLedRunPara+2,w
  5250  008D  0224               	subwf	_gLedRunPara+4,w
  5251  008E                     u1395:	
  5252  008E  1803               	skipnc
  5253  008F  28B5               	goto	l1992
  5254  0090  0823               	movf	_gLedRunPara+3,w
  5255  0091  0221               	subwf	_gLedRunPara+1,w
  5256  0092  1D03               	skipz
  5257  0093  2896               	goto	u1405
  5258  0094  0822               	movf	_gLedRunPara+2,w
  5259  0095  0220               	subwf	_gLedRunPara,w
  5260  0096                     u1405:	
  5261  0096  1803               	skipnc
  5262  0097  28A0               	goto	l1986
  5263  0098  0825               	movf	_gLedRunPara+5,w
  5264  0099  0221               	subwf	_gLedRunPara+1,w
  5265  009A  1D03               	skipz
  5266  009B  289E               	goto	u1415
  5267  009C  0824               	movf	_gLedRunPara+4,w
  5268  009D  0220               	subwf	_gLedRunPara,w
  5269  009E                     u1415:	
  5270  009E  1803               	skipnc
  5271  009F  28B5               	goto	l1992
  5272  00A0                     l1986:	
  5273                           
  5274                           ;led.c: 138: {
  5275                           ;led.c: 139: dTime = gLedRunPara.nCurrentTime - gLedRunPara.sunrisetime;
  5276  00A0  0922               	comf	_gLedRunPara+2,w
  5277  00A1  00DB               	movwf	??_AutoMode
  5278  00A2  0923               	comf	_gLedRunPara+3,w
  5279  00A3  00DC               	movwf	??_AutoMode+1
  5280  00A4  0ADB               	incf	??_AutoMode,f
  5281  00A5  1903               	skipnz
  5282  00A6  0ADC               	incf	??_AutoMode+1,f
  5283  00A7  0820               	movf	_gLedRunPara,w
  5284  00A8  075B               	addwf	??_AutoMode,w
  5285  00A9  00E4               	movwf	AutoMode@dTime
  5286  00AA  0821               	movf	_gLedRunPara+1,w
  5287  00AB  3D5C               	addwfc	??_AutoMode+1,w
  5288  00AC  00E5               	movwf	AutoMode@dTime+1
  5289  00AD  01E6               	clrf	AutoMode@dTime+2
  5290  00AE  01E7               	clrf	AutoMode@dTime+3
  5291                           
  5292                           ;led.c: 140: pstartBright = (unsigned char*)gLedPara.nightBright;
  5293  00AF  304B               	movlw	(low ((_gLedPara| 0+9)))& (0+255)
  5294  00B0  00DB               	movwf	??_AutoMode
  5295  00B1  085B               	movf	??_AutoMode,w
  5296  00B2  00E8               	movwf	AutoMode@pstartBright
  5297                           
  5298                           ;led.c: 141: pendBright = (unsigned char*)gLedPara.dayBright;
  5299  00B3  3047               	movlw	(low ((_gLedPara| 0+5)))& (0+255)
  5300  00B4  28D3               	goto	L4
  5301  00B5                     l1992:	
  5302                           ;led.c: 142: }
  5303                           
  5304                           
  5305                           ;led.c: 143: else
  5306                           ;led.c: 144: {
  5307                           ;led.c: 145: dTime = gLedRunPara.nCurrentTime - gLedRunPara.sunsettime;
  5308  00B5  0924               	comf	_gLedRunPara+4,w
  5309  00B6  00DB               	movwf	??_AutoMode
  5310  00B7  0925               	comf	_gLedRunPara+5,w
  5311  00B8  00DC               	movwf	??_AutoMode+1
  5312  00B9  0ADB               	incf	??_AutoMode,f
  5313  00BA  1903               	skipnz
  5314  00BB  0ADC               	incf	??_AutoMode+1,f
  5315  00BC  0820               	movf	_gLedRunPara,w
  5316  00BD  075B               	addwf	??_AutoMode,w
  5317  00BE  00E4               	movwf	AutoMode@dTime
  5318  00BF  0821               	movf	_gLedRunPara+1,w
  5319  00C0  3D5C               	addwfc	??_AutoMode+1,w
  5320  00C1  00E5               	movwf	AutoMode@dTime+1
  5321  00C2  01E6               	clrf	AutoMode@dTime+2
  5322  00C3  01E7               	clrf	AutoMode@dTime+3
  5323                           
  5324                           ;led.c: 146: if(dTime < 0)
  5325  00C4  1FE7               	btfss	AutoMode@dTime+3,7
  5326  00C5  28CE               	goto	l391
  5327                           
  5328                           ;led.c: 147: {
  5329                           ;led.c: 148: dTime += 43200;
  5330  00C6  30C0               	movlw	192
  5331  00C7  07E4               	addwf	AutoMode@dTime,f
  5332  00C8  30A8               	movlw	168
  5333  00C9  3DE5               	addwfc	AutoMode@dTime+1,f
  5334  00CA  3000               	movlw	0
  5335  00CB  3DE6               	addwfc	AutoMode@dTime+2,f
  5336  00CC  3000               	movlw	0
  5337  00CD  3DE7               	addwfc	AutoMode@dTime+3,f
  5338  00CE                     l391:	
  5339                           
  5340                           ;led.c: 149: }
  5341                           ;led.c: 150: pstartBright = (unsigned char*)gLedPara.dayBright;
  5342  00CE  3047               	movlw	(low ((_gLedPara| 0+5)))& (0+255)
  5343  00CF  00DB               	movwf	??_AutoMode
  5344  00D0  085B               	movf	??_AutoMode,w
  5345  00D1  00E8               	movwf	AutoMode@pstartBright
  5346                           
  5347                           ;led.c: 151: pendBright = (unsigned char*)gLedPara.nightBright;
  5348  00D2  304B               	movlw	(low ((_gLedPara| 0+9)))& (0+255)
  5349  00D3                     L4:	
  5350  00D3  00DB               	movwf	??_AutoMode
  5351  00D4  085B               	movf	??_AutoMode,w
  5352  00D5  00E9               	movwf	AutoMode@pendBright
  5353                           
  5354                           ;led.c: 152: }
  5355                           ;led.c: 153: for(i = 0;i < 2;i++)
  5356  00D6  01EA               	clrf	AutoMode@i
  5357  00D7  3002               	movlw	2
  5358  00D8  026A               	subwf	AutoMode@i,w
  5359  00D9  1803               	btfsc	3,0
  5360  00DA  29F7               	goto	l2022
  5361  00DB                     l2004:	
  5362                           
  5363                           ;led.c: 154: {
  5364                           ;led.c: 155: if(pstartBright[i] <= pendBright[i])
  5365  00DB  086A               	movf	AutoMode@i,w
  5366  00DC  0769               	addwf	AutoMode@pendBright,w
  5367  00DD  00DB               	movwf	??_AutoMode
  5368  00DE  085B               	movf	??_AutoMode,w
  5369  00DF  0086               	movwf	6
  5370  00E0  0187               	clrf	7
  5371  00E1  086A               	movf	AutoMode@i,w
  5372  00E2  0768               	addwf	AutoMode@pstartBright,w
  5373  00E3  00DC               	movwf	??_AutoMode+1
  5374  00E4  085C               	movf	??_AutoMode+1,w
  5375  00E5  0084               	movwf	4
  5376  00E6  0185               	clrf	5
  5377  00E7  0800               	movf	0,w
  5378  00E8  0201               	subwf	1,w
  5379  00E9  1C03               	skipc
  5380  00EA  296A               	goto	l2012
  5381                           
  5382                           ;led.c: 156: {
  5383                           ;led.c: 157: if(dTime < (unsigned int)(pendBright[i] - pstartBright[i]) * 10)
  5384  00EB  086A               	movf	AutoMode@i,w
  5385  00EC  0768               	addwf	AutoMode@pstartBright,w
  5386  00ED  00DB               	movwf	??_AutoMode
  5387  00EE  085B               	movf	??_AutoMode,w
  5388  00EF  0086               	movwf	6
  5389  00F0  0187               	clrf	7
  5390  00F1  0801               	movf	1,w
  5391  00F2  00DC               	movwf	??_AutoMode+1
  5392  00F3  01DD               	clrf	??_AutoMode+2
  5393  00F4  09DC               	comf	??_AutoMode+1,f
  5394  00F5  09DD               	comf	??_AutoMode+2,f
  5395  00F6  0ADC               	incf	??_AutoMode+1,f
  5396  00F7  1903               	skipnz
  5397  00F8  0ADD               	incf	??_AutoMode+2,f
  5398  00F9  086A               	movf	AutoMode@i,w
  5399  00FA  0769               	addwf	AutoMode@pendBright,w
  5400  00FB  00DE               	movwf	??_AutoMode+3
  5401  00FC  085E               	movf	??_AutoMode+3,w
  5402  00FD  0086               	movwf	6
  5403  00FE  0187               	clrf	7
  5404  00FF  0801               	movf	1,w
  5405  0100  075C               	addwf	??_AutoMode+1,w
  5406  0101  00CD               	movwf	___wmul@multiplier
  5407  0102  085D               	movf	??_AutoMode+2,w
  5408  0103  1803               	skipnc
  5409  0104  0A5D               	incf	??_AutoMode+2,w
  5410  0105  00CE               	movwf	___wmul@multiplier+1
  5411  0106  300A               	movlw	10
  5412  0107  00CF               	movwf	___wmul@multiplicand
  5413  0108  3000               	movlw	0
  5414  0109  00D0               	movwf	___wmul@multiplicand+1
  5415  010A  3185  25DC  3180   	fcall	___wmul
  5416  010D  0020               	movlb	0	; select bank0
  5417  010E  084D               	movf	?___wmul,w
  5418  010F  00DF               	movwf	??_AutoMode+4
  5419  0110  084E               	movf	?___wmul+1,w
  5420  0111  00E0               	movwf	??_AutoMode+5
  5421  0112  01E1               	clrf	??_AutoMode+6
  5422  0113  01E2               	clrf	??_AutoMode+7
  5423  0114  0867               	movf	AutoMode@dTime+3,w
  5424  0115  3A80               	xorlw	128
  5425  0116  00E3               	movwf	??_AutoMode+8
  5426  0117  0862               	movf	??_AutoMode+7,w
  5427  0118  3A80               	xorlw	128
  5428  0119  0263               	subwf	??_AutoMode+8,w
  5429  011A  1D03               	skipz
  5430  011B  2926               	goto	u1453
  5431  011C  0861               	movf	??_AutoMode+6,w
  5432  011D  0266               	subwf	AutoMode@dTime+2,w
  5433  011E  1D03               	skipz
  5434  011F  2926               	goto	u1453
  5435  0120  0860               	movf	??_AutoMode+5,w
  5436  0121  0265               	subwf	AutoMode@dTime+1,w
  5437  0122  1D03               	skipz
  5438  0123  2926               	goto	u1453
  5439  0124  085F               	movf	??_AutoMode+4,w
  5440  0125  0264               	subwf	AutoMode@dTime,w
  5441  0126                     u1453:	
  5442  0126  1803               	skipnc
  5443  0127  294C               	goto	l2010
  5444                           
  5445                           ;led.c: 158: {
  5446                           ;led.c: 159: gLedRunPara.nCurrentLum[i] = ((unsigned int)pstartBright[i] * 10) + dTime;
  5447  0128  086A               	movf	AutoMode@i,w
  5448  0129  0768               	addwf	AutoMode@pstartBright,w
  5449  012A  00DB               	movwf	??_AutoMode
  5450  012B  085B               	movf	??_AutoMode,w
  5451  012C  0086               	movwf	6
  5452  012D  0187               	clrf	7
  5453  012E  0801               	movf	1,w
  5454  012F  00DC               	movwf	??_AutoMode+1
  5455  0130  01DD               	clrf	??_AutoMode+2
  5456  0131  085C               	movf	??_AutoMode+1,w
  5457  0132  00CD               	movwf	___wmul@multiplier
  5458  0133  085D               	movf	??_AutoMode+2,w
  5459  0134  00CE               	movwf	___wmul@multiplier+1
  5460  0135  300A               	movlw	10
  5461  0136  00CF               	movwf	___wmul@multiplicand
  5462  0137  3000               	movlw	0
  5463  0138  00D0               	movwf	___wmul@multiplicand+1
  5464  0139  3185  25DC  3180   	fcall	___wmul
  5465  013C  0020               	movlb	0	; select bank0
  5466  013D  0864               	movf	AutoMode@dTime,w
  5467  013E  074D               	addwf	?___wmul,w
  5468  013F  00DE               	movwf	??_AutoMode+3
  5469  0140  0865               	movf	AutoMode@dTime+1,w
  5470  0141  3D4E               	addwfc	?___wmul+1,w
  5471  0142  00DF               	movwf	??_AutoMode+4
  5472  0143  356A               	lslf	AutoMode@i,w
  5473  0144  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  5474  0145  0086               	movwf	6
  5475  0146  0187               	clrf	7
  5476  0147  085E               	movf	??_AutoMode+3,w
  5477  0148  3FC0               	movwi [0]fsr1
  5478  0149  085F               	movf	??_AutoMode+4,w
  5479  014A  3FC1               	movwi [1]fsr1
  5480                           
  5481                           ;led.c: 160: }
  5482  014B  29EF               	goto	l2018
  5483  014C                     l2010:	
  5484                           
  5485                           ;led.c: 161: else
  5486                           ;led.c: 162: {
  5487                           ;led.c: 163: gLedRunPara.nCurrentLum[i] = (unsigned int)pendBright[i] * 10;
  5488  014C  086A               	movf	AutoMode@i,w
  5489  014D  0769               	addwf	AutoMode@pendBright,w
  5490  014E  00DB               	movwf	??_AutoMode
  5491  014F  085B               	movf	??_AutoMode,w
  5492  0150  0086               	movwf	6
  5493  0151  0187               	clrf	7
  5494  0152  0801               	movf	1,w
  5495  0153  00DC               	movwf	??_AutoMode+1
  5496  0154  01DD               	clrf	??_AutoMode+2
  5497  0155  085C               	movf	??_AutoMode+1,w
  5498  0156  00CD               	movwf	___wmul@multiplier
  5499  0157  085D               	movf	??_AutoMode+2,w
  5500  0158  00CE               	movwf	___wmul@multiplier+1
  5501  0159  300A               	movlw	10
  5502  015A  00CF               	movwf	___wmul@multiplicand
  5503  015B  3000               	movlw	0
  5504  015C  00D0               	movwf	___wmul@multiplicand+1
  5505  015D  3185  25DC  3180   	fcall	___wmul
  5506  0160  0020               	movlb	0	; select bank0
  5507  0161  356A               	lslf	AutoMode@i,w
  5508  0162  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  5509  0163  0086               	movwf	6
  5510  0164  0187               	clrf	7
  5511  0165  084D               	movf	?___wmul,w
  5512  0166  3FC0               	movwi [0]fsr1
  5513  0167  084E               	movf	?___wmul+1,w
  5514  0168  3FC1               	movwi [1]fsr1
  5515                           
  5516                           ;led.c: 164: }
  5517                           ;led.c: 165: }
  5518  0169  29EF               	goto	l2018
  5519  016A                     l2012:	
  5520                           
  5521                           ;led.c: 166: else
  5522                           ;led.c: 167: {
  5523                           ;led.c: 168: if(dTime < (unsigned int)(pstartBright[i] - pendBright[i]) * 10)
  5524  016A  086A               	movf	AutoMode@i,w
  5525  016B  0769               	addwf	AutoMode@pendBright,w
  5526  016C  00DB               	movwf	??_AutoMode
  5527  016D  085B               	movf	??_AutoMode,w
  5528  016E  0086               	movwf	6
  5529  016F  0187               	clrf	7
  5530  0170  0801               	movf	1,w
  5531  0171  00DC               	movwf	??_AutoMode+1
  5532  0172  01DD               	clrf	??_AutoMode+2
  5533  0173  09DC               	comf	??_AutoMode+1,f
  5534  0174  09DD               	comf	??_AutoMode+2,f
  5535  0175  0ADC               	incf	??_AutoMode+1,f
  5536  0176  1903               	skipnz
  5537  0177  0ADD               	incf	??_AutoMode+2,f
  5538  0178  086A               	movf	AutoMode@i,w
  5539  0179  0768               	addwf	AutoMode@pstartBright,w
  5540  017A  00DE               	movwf	??_AutoMode+3
  5541  017B  085E               	movf	??_AutoMode+3,w
  5542  017C  0086               	movwf	6
  5543  017D  0187               	clrf	7
  5544  017E  0801               	movf	1,w
  5545  017F  075C               	addwf	??_AutoMode+1,w
  5546  0180  00CD               	movwf	___wmul@multiplier
  5547  0181  085D               	movf	??_AutoMode+2,w
  5548  0182  1803               	skipnc
  5549  0183  0A5D               	incf	??_AutoMode+2,w
  5550  0184  00CE               	movwf	___wmul@multiplier+1
  5551  0185  300A               	movlw	10
  5552  0186  00CF               	movwf	___wmul@multiplicand
  5553  0187  3000               	movlw	0
  5554  0188  00D0               	movwf	___wmul@multiplicand+1
  5555  0189  3185  25DC  3180   	fcall	___wmul
  5556  018C  0020               	movlb	0	; select bank0
  5557  018D  084D               	movf	?___wmul,w
  5558  018E  00DF               	movwf	??_AutoMode+4
  5559  018F  084E               	movf	?___wmul+1,w
  5560  0190  00E0               	movwf	??_AutoMode+5
  5561  0191  01E1               	clrf	??_AutoMode+6
  5562  0192  01E2               	clrf	??_AutoMode+7
  5563  0193  0867               	movf	AutoMode@dTime+3,w
  5564  0194  3A80               	xorlw	128
  5565  0195  00E3               	movwf	??_AutoMode+8
  5566  0196  0862               	movf	??_AutoMode+7,w
  5567  0197  3A80               	xorlw	128
  5568  0198  0263               	subwf	??_AutoMode+8,w
  5569  0199  1D03               	skipz
  5570  019A  29A5               	goto	u1463
  5571  019B  0861               	movf	??_AutoMode+6,w
  5572  019C  0266               	subwf	AutoMode@dTime+2,w
  5573  019D  1D03               	skipz
  5574  019E  29A5               	goto	u1463
  5575  019F  0860               	movf	??_AutoMode+5,w
  5576  01A0  0265               	subwf	AutoMode@dTime+1,w
  5577  01A1  1D03               	skipz
  5578  01A2  29A5               	goto	u1463
  5579  01A3  085F               	movf	??_AutoMode+4,w
  5580  01A4  0264               	subwf	AutoMode@dTime,w
  5581  01A5                     u1463:	
  5582  01A5  1803               	skipnc
  5583  01A6  29D2               	goto	l2016
  5584                           
  5585                           ;led.c: 169: {
  5586                           ;led.c: 170: gLedRunPara.nCurrentLum[i] = ((unsigned int)pstartBright[i] * 10) - dTime;
  5587  01A7  0964               	comf	AutoMode@dTime,w
  5588  01A8  00DB               	movwf	??_AutoMode
  5589  01A9  0965               	comf	AutoMode@dTime+1,w
  5590  01AA  00DC               	movwf	??_AutoMode+1
  5591  01AB  0ADB               	incf	??_AutoMode,f
  5592  01AC  1903               	skipnz
  5593  01AD  0ADC               	incf	??_AutoMode+1,f
  5594  01AE  086A               	movf	AutoMode@i,w
  5595  01AF  0768               	addwf	AutoMode@pstartBright,w
  5596  01B0  00DD               	movwf	??_AutoMode+2
  5597  01B1  085D               	movf	??_AutoMode+2,w
  5598  01B2  0086               	movwf	6
  5599  01B3  0187               	clrf	7
  5600  01B4  0801               	movf	1,w
  5601  01B5  00DE               	movwf	??_AutoMode+3
  5602  01B6  01DF               	clrf	??_AutoMode+4
  5603  01B7  085E               	movf	??_AutoMode+3,w
  5604  01B8  00CD               	movwf	___wmul@multiplier
  5605  01B9  085F               	movf	??_AutoMode+4,w
  5606  01BA  00CE               	movwf	___wmul@multiplier+1
  5607  01BB  300A               	movlw	10
  5608  01BC  00CF               	movwf	___wmul@multiplicand
  5609  01BD  3000               	movlw	0
  5610  01BE  00D0               	movwf	___wmul@multiplicand+1
  5611  01BF  3185  25DC  3180   	fcall	___wmul
  5612  01C2  0020               	movlb	0	; select bank0
  5613  01C3  085B               	movf	??_AutoMode,w
  5614  01C4  074D               	addwf	?___wmul,w
  5615  01C5  00E0               	movwf	??_AutoMode+5
  5616  01C6  085C               	movf	??_AutoMode+1,w
  5617  01C7  3D4E               	addwfc	?___wmul+1,w
  5618  01C8  00E1               	movwf	??_AutoMode+6
  5619  01C9  356A               	lslf	AutoMode@i,w
  5620  01CA  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  5621  01CB  0086               	movwf	6
  5622  01CC  0187               	clrf	7
  5623  01CD  0860               	movf	??_AutoMode+5,w
  5624  01CE  3FC0               	movwi [0]fsr1
  5625  01CF  0861               	movf	??_AutoMode+6,w
  5626  01D0  3FC1               	movwi [1]fsr1
  5627                           
  5628                           ;led.c: 171: }
  5629  01D1  29EF               	goto	l2018
  5630  01D2                     l2016:	
  5631                           
  5632                           ;led.c: 172: else
  5633                           ;led.c: 173: {
  5634                           ;led.c: 174: gLedRunPara.nCurrentLum[i] = (unsigned int)pendBright[i] * 10;
  5635  01D2  086A               	movf	AutoMode@i,w
  5636  01D3  0769               	addwf	AutoMode@pendBright,w
  5637  01D4  00DB               	movwf	??_AutoMode
  5638  01D5  085B               	movf	??_AutoMode,w
  5639  01D6  0086               	movwf	6
  5640  01D7  0187               	clrf	7
  5641  01D8  0801               	movf	1,w
  5642  01D9  00DC               	movwf	??_AutoMode+1
  5643  01DA  01DD               	clrf	??_AutoMode+2
  5644  01DB  085C               	movf	??_AutoMode+1,w
  5645  01DC  00CD               	movwf	___wmul@multiplier
  5646  01DD  085D               	movf	??_AutoMode+2,w
  5647  01DE  00CE               	movwf	___wmul@multiplier+1
  5648  01DF  300A               	movlw	10
  5649  01E0  00CF               	movwf	___wmul@multiplicand
  5650  01E1  3000               	movlw	0
  5651  01E2  00D0               	movwf	___wmul@multiplicand+1
  5652  01E3  3185  25DC  3180   	fcall	___wmul
  5653  01E6  0020               	movlb	0	; select bank0
  5654  01E7  356A               	lslf	AutoMode@i,w
  5655  01E8  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  5656  01E9  0086               	movwf	6
  5657  01EA  0187               	clrf	7
  5658  01EB  084D               	movf	?___wmul,w
  5659  01EC  3FC0               	movwi [0]fsr1
  5660  01ED  084E               	movf	?___wmul+1,w
  5661  01EE  3FC1               	movwi [1]fsr1
  5662  01EF                     l2018:	
  5663  01EF  3001               	movlw	1
  5664  01F0  00DB               	movwf	??_AutoMode
  5665  01F1  085B               	movf	??_AutoMode,w
  5666  01F2  07EA               	addwf	AutoMode@i,f
  5667  01F3  3002               	movlw	2
  5668  01F4  026A               	subwf	AutoMode@i,w
  5669  01F5  1C03               	skipc
  5670  01F6  28DB               	goto	l2004
  5671  01F7                     l2022:	
  5672                           
  5673                           ;led.c: 175: }
  5674                           ;led.c: 176: }
  5675                           ;led.c: 177: }
  5676                           ;led.c: 178: UpdatePWM();
  5677  01F7  3186  265A         	fcall	_UpdatePWM
  5678  01F9  0008               	return
  5679  01FA                     __end_of_AutoMode:	
  5680                           
  5681                           	psect	text28
  5682  065A                     __ptext28:	
  5683 ;; *************** function _UpdatePWM *****************
  5684 ;; Defined at:
  5685 ;;		line 18 in file "led.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;		None
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;		None
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  1    wreg      void 
  5692 ;; Registers used:
  5693 ;;		wreg, status,2, status,0, pclath, cstack
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5699 ;;      Params:         0       0       0       0
  5700 ;;      Locals:         0       0       0       0
  5701 ;;      Temps:          0       0       0       0
  5702 ;;      Totals:         0       0       0       0
  5703 ;;Total ram usage:        0 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; Hardware stack levels required when called:    4
  5706 ;; This function calls:
  5707 ;;		_PWM1_LoadDutyValue
  5708 ;;		_PWM2_LoadDutyValue
  5709 ;; This function is called by:
  5710 ;;		_LedUpdatePara
  5711 ;;		_AutoMode
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           
  5716                           ;psect for function _UpdatePWM
  5717  065A                     _UpdatePWM:	
  5718                           
  5719                           ;led.c: 20: PWM1_LoadDutyValue(gLedRunPara.nCurrentLum[0]);
  5720                           
  5721                           ;incstack = 0
  5722                           ; Regs used in _UpdatePWM: [wreg+status,2+status,0+pclath+cstack]
  5723  065A  0020               	movlb	0	; select bank0
  5724  065B  082B               	movf	_gLedRunPara+11,w
  5725  065C  00CE               	movwf	PWM1_LoadDutyValue@dutyValue+1
  5726  065D  082A               	movf	_gLedRunPara+10,w
  5727  065E  00CD               	movwf	PWM1_LoadDutyValue@dutyValue
  5728  065F  3186  2611  3186   	fcall	_PWM1_LoadDutyValue
  5729                           
  5730                           ;led.c: 21: PWM2_LoadDutyValue(gLedRunPara.nCurrentLum[1]);
  5731  0662  0020               	movlb	0	; select bank0
  5732  0663  082D               	movf	_gLedRunPara+13,w
  5733  0664  00CE               	movwf	PWM2_LoadDutyValue@dutyValue+1
  5734  0665  082C               	movf	_gLedRunPara+12,w
  5735  0666  00CD               	movwf	PWM2_LoadDutyValue@dutyValue
  5736  0667  3185  25F8         	fcall	_PWM2_LoadDutyValue
  5737  0669  0008               	return
  5738  066A                     __end_of_UpdatePWM:	
  5739                           
  5740                           	psect	text29
  5741  05F8                     __ptext29:	
  5742 ;; *************** function _PWM2_LoadDutyValue *****************
  5743 ;; Defined at:
  5744 ;;		line 42 in file "pwm.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;  dutyValue       2    0[BANK0 ] unsigned int 
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;		None
  5749 ;; Return value:  Size  Location     Type
  5750 ;;                  1    wreg      void 
  5751 ;; Registers used:
  5752 ;;		wreg, status,2, status,0
  5753 ;; Tracked objects:
  5754 ;;		On entry : 0/0
  5755 ;;		On exit  : 0/0
  5756 ;;		Unchanged: 0/0
  5757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5758 ;;      Params:         0       2       0       0
  5759 ;;      Locals:         0       0       0       0
  5760 ;;      Temps:          0       2       0       0
  5761 ;;      Totals:         0       4       0       0
  5762 ;;Total ram usage:        4 bytes
  5763 ;; Hardware stack levels used:    1
  5764 ;; Hardware stack levels required when called:    3
  5765 ;; This function calls:
  5766 ;;		Nothing
  5767 ;; This function is called by:
  5768 ;;		_UpdatePWM
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           
  5773                           ;psect for function _PWM2_LoadDutyValue
  5774  05F8                     _PWM2_LoadDutyValue:	
  5775                           
  5776                           ;pwm.c: 44: PWM2DCL = (dutyValue & 0x03) << 6;
  5777                           
  5778                           ;incstack = 0
  5779                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2+status,0]
  5780  05F8  0020               	movlb	0	; select bank0
  5781  05F9  084D               	movf	PWM2_LoadDutyValue@dutyValue,w
  5782  05FA  3903               	andlw	3
  5783  05FB  00CF               	movwf	??_PWM2_LoadDutyValue
  5784  05FC  3005               	movlw	5
  5785  05FD                     u915:	
  5786  05FD  35CF               	lslf	??_PWM2_LoadDutyValue,f
  5787  05FE  3EFF               	addlw	-1
  5788  05FF  1D03               	skipz
  5789  0600  2DFD               	goto	u915
  5790  0601  354F               	lslf	??_PWM2_LoadDutyValue,w
  5791  0602  002C               	movlb	12	; select bank12
  5792  0603  0094               	movwf	20	;volatile
  5793                           
  5794                           ;pwm.c: 45: PWM2DCH = dutyValue >> 2;
  5795  0604  0020               	movlb	0	; select bank0
  5796  0605  084E               	movf	PWM2_LoadDutyValue@dutyValue+1,w
  5797  0606  00D0               	movwf	??_PWM2_LoadDutyValue+1
  5798  0607  084D               	movf	PWM2_LoadDutyValue@dutyValue,w
  5799  0608  00CF               	movwf	??_PWM2_LoadDutyValue
  5800  0609  36D0               	lsrf	??_PWM2_LoadDutyValue+1,f
  5801  060A  0CCF               	rrf	??_PWM2_LoadDutyValue,f
  5802  060B  36D0               	lsrf	??_PWM2_LoadDutyValue+1,f
  5803  060C  0CCF               	rrf	??_PWM2_LoadDutyValue,f
  5804  060D  084F               	movf	??_PWM2_LoadDutyValue,w
  5805  060E  002C               	movlb	12	; select bank12
  5806  060F  0095               	movwf	21	;volatile
  5807  0610  0008               	return
  5808  0611                     __end_of_PWM2_LoadDutyValue:	
  5809                           
  5810                           	psect	text30
  5811  0611                     __ptext30:	
  5812 ;; *************** function _PWM1_LoadDutyValue *****************
  5813 ;; Defined at:
  5814 ;;		line 20 in file "pwm.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;  dutyValue       2    0[BANK0 ] unsigned int 
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;		None
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  1    wreg      void 
  5821 ;; Registers used:
  5822 ;;		wreg, status,2, status,0
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5828 ;;      Params:         0       2       0       0
  5829 ;;      Locals:         0       0       0       0
  5830 ;;      Temps:          0       2       0       0
  5831 ;;      Totals:         0       4       0       0
  5832 ;;Total ram usage:        4 bytes
  5833 ;; Hardware stack levels used:    1
  5834 ;; Hardware stack levels required when called:    3
  5835 ;; This function calls:
  5836 ;;		Nothing
  5837 ;; This function is called by:
  5838 ;;		_UpdatePWM
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           
  5843                           ;psect for function _PWM1_LoadDutyValue
  5844  0611                     _PWM1_LoadDutyValue:	
  5845                           
  5846                           ;pwm.c: 22: PWM1DCL = (dutyValue & 0x03)<<6;
  5847                           
  5848                           ;incstack = 0
  5849                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
  5850  0611  0020               	movlb	0	; select bank0
  5851  0612  084D               	movf	PWM1_LoadDutyValue@dutyValue,w
  5852  0613  3903               	andlw	3
  5853  0614  00CF               	movwf	??_PWM1_LoadDutyValue
  5854  0615  3005               	movlw	5
  5855  0616                     u905:	
  5856  0616  35CF               	lslf	??_PWM1_LoadDutyValue,f
  5857  0617  3EFF               	addlw	-1
  5858  0618  1D03               	skipz
  5859  0619  2E16               	goto	u905
  5860  061A  354F               	lslf	??_PWM1_LoadDutyValue,w
  5861  061B  002C               	movlb	12	; select bank12
  5862  061C  0091               	movwf	17	;volatile
  5863                           
  5864                           ;pwm.c: 23: PWM1DCH = dutyValue >> 2;
  5865  061D  0020               	movlb	0	; select bank0
  5866  061E  084E               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  5867  061F  00D0               	movwf	??_PWM1_LoadDutyValue+1
  5868  0620  084D               	movf	PWM1_LoadDutyValue@dutyValue,w
  5869  0621  00CF               	movwf	??_PWM1_LoadDutyValue
  5870  0622  36D0               	lsrf	??_PWM1_LoadDutyValue+1,f
  5871  0623  0CCF               	rrf	??_PWM1_LoadDutyValue,f
  5872  0624  36D0               	lsrf	??_PWM1_LoadDutyValue+1,f
  5873  0625  0CCF               	rrf	??_PWM1_LoadDutyValue,f
  5874  0626  084F               	movf	??_PWM1_LoadDutyValue,w
  5875  0627  002C               	movlb	12	; select bank12
  5876  0628  0092               	movwf	18	;volatile
  5877  0629  0008               	return
  5878  062A                     __end_of_PWM1_LoadDutyValue:	
  5879                           
  5880                           	psect	text31
  5881  0282                     __ptext31:	
  5882 ;; *************** function _TimeChangeSec *****************
  5883 ;; Defined at:
  5884 ;;		line 109 in file "led.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;		None
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;		None
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  1    wreg      void 
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0, pclath, cstack
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5898 ;;      Params:         0       0       0       0
  5899 ;;      Locals:         0       2       0       0
  5900 ;;      Temps:          0       6       0       0
  5901 ;;      Totals:         0       8       0       0
  5902 ;;Total ram usage:        8 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    4
  5905 ;; This function calls:
  5906 ;;		___wmul
  5907 ;; This function is called by:
  5908 ;;		_AutoMode
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           
  5913                           ;psect for function _TimeChangeSec
  5914  0282                     _TimeChangeSec:	
  5915                           
  5916                           ;led.c: 111: gLedRunPara.nCurrentTime = (gCurrentTime.datatime.hour * 60 + gCurrentTime.
      +                          datatime.minute) * 30 + gCurrentTime.datatime.second;
  5917                           
  5918                           ;incstack = 0
  5919                           ; Regs used in _TimeChangeSec: [wreg+status,2+status,0+pclath+cstack]
  5920  0282  0020               	movlb	0	; select bank0
  5921  0283  0830               	movf	_gCurrentTime+2,w	;volatile
  5922  0284  00D3               	movwf	??_TimeChangeSec
  5923  0285  01D4               	clrf	??_TimeChangeSec+1
  5924  0286  0831               	movf	_gCurrentTime+3,w	;volatile
  5925  0287  00D5               	movwf	??_TimeChangeSec+2
  5926  0288  01D6               	clrf	??_TimeChangeSec+3
  5927  0289  0855               	movf	??_TimeChangeSec+2,w
  5928  028A  00CD               	movwf	___wmul@multiplier
  5929  028B  0856               	movf	??_TimeChangeSec+3,w
  5930  028C  00CE               	movwf	___wmul@multiplier+1
  5931  028D  303C               	movlw	60
  5932  028E  00CF               	movwf	___wmul@multiplicand
  5933  028F  3000               	movlw	0
  5934  0290  00D0               	movwf	___wmul@multiplicand+1
  5935  0291  3185  25DC  3182   	fcall	___wmul
  5936  0294  0020               	movlb	0	; select bank0
  5937  0295  0853               	movf	??_TimeChangeSec,w
  5938  0296  074D               	addwf	?___wmul,w
  5939  0297  00D7               	movwf	??_TimeChangeSec+4
  5940  0298  0854               	movf	??_TimeChangeSec+1,w
  5941  0299  3D4E               	addwfc	?___wmul+1,w
  5942  029A  00D8               	movwf	??_TimeChangeSec+5
  5943  029B  0857               	movf	??_TimeChangeSec+4,w
  5944  029C  00D9               	movwf	_TimeChangeSec$1583
  5945  029D  0858               	movf	??_TimeChangeSec+5,w
  5946  029E  00DA               	movwf	_TimeChangeSec$1583+1
  5947                           
  5948                           ;led.c: 111: gLedRunPara.nCurrentTime = (gCurrentTime.datatime.hour * 60 + gCurrentTime.
      +                          datatime.minute) * 30 + gCurrentTime.datatime.second;
  5949  029F  082F               	movf	_gCurrentTime+1,w	;volatile
  5950  02A0  00D3               	movwf	??_TimeChangeSec
  5951  02A1  01D4               	clrf	??_TimeChangeSec+1
  5952  02A2  085A               	movf	_TimeChangeSec$1583+1,w
  5953  02A3  00CE               	movwf	___wmul@multiplier+1
  5954  02A4  0859               	movf	_TimeChangeSec$1583,w
  5955  02A5  00CD               	movwf	___wmul@multiplier
  5956  02A6  301E               	movlw	30
  5957  02A7  00CF               	movwf	___wmul@multiplicand
  5958  02A8  3000               	movlw	0
  5959  02A9  00D0               	movwf	___wmul@multiplicand+1
  5960  02AA  3185  25DC  3182   	fcall	___wmul
  5961  02AD  0020               	movlb	0	; select bank0
  5962  02AE  0853               	movf	??_TimeChangeSec,w
  5963  02AF  074D               	addwf	?___wmul,w
  5964  02B0  00D5               	movwf	??_TimeChangeSec+2
  5965  02B1  0854               	movf	??_TimeChangeSec+1,w
  5966  02B2  3D4E               	addwfc	?___wmul+1,w
  5967  02B3  00D6               	movwf	??_TimeChangeSec+3
  5968  02B4  0855               	movf	??_TimeChangeSec+2,w
  5969  02B5  00A0               	movwf	_gLedRunPara
  5970  02B6  0856               	movf	??_TimeChangeSec+3,w
  5971  02B7  00A1               	movwf	_gLedRunPara+1
  5972                           
  5973                           ;led.c: 112: gLedRunPara.sunrisetime = (gLedPara.sunriseHour * 60 + gLedPara.sunriseMin)
      +                           * 30;
  5974  02B8  0846               	movf	_gLedPara+4,w
  5975  02B9  00D3               	movwf	??_TimeChangeSec
  5976  02BA  01D4               	clrf	??_TimeChangeSec+1
  5977  02BB  0845               	movf	_gLedPara+3,w
  5978  02BC  00D5               	movwf	??_TimeChangeSec+2
  5979  02BD  01D6               	clrf	??_TimeChangeSec+3
  5980  02BE  0855               	movf	??_TimeChangeSec+2,w
  5981  02BF  00CD               	movwf	___wmul@multiplier
  5982  02C0  0856               	movf	??_TimeChangeSec+3,w
  5983  02C1  00CE               	movwf	___wmul@multiplier+1
  5984  02C2  303C               	movlw	60
  5985  02C3  00CF               	movwf	___wmul@multiplicand
  5986  02C4  3000               	movlw	0
  5987  02C5  00D0               	movwf	___wmul@multiplicand+1
  5988  02C6  3185  25DC  3182   	fcall	___wmul
  5989  02C9  0020               	movlb	0	; select bank0
  5990  02CA  0853               	movf	??_TimeChangeSec,w
  5991  02CB  074D               	addwf	?___wmul,w
  5992  02CC  00D9               	movwf	_TimeChangeSec$1583
  5993  02CD  0854               	movf	??_TimeChangeSec+1,w
  5994  02CE  3D4E               	addwfc	?___wmul+1,w
  5995  02CF  00DA               	movwf	_TimeChangeSec$1583+1
  5996                           
  5997                           ;led.c: 112: gLedRunPara.sunrisetime = (gLedPara.sunriseHour * 60 + gLedPara.sunriseMin)
      +                           * 30;
  5998  02D0  085A               	movf	_TimeChangeSec$1583+1,w
  5999  02D1  00CE               	movwf	___wmul@multiplier+1
  6000  02D2  0859               	movf	_TimeChangeSec$1583,w
  6001  02D3  00CD               	movwf	___wmul@multiplier
  6002  02D4  301E               	movlw	30
  6003  02D5  00CF               	movwf	___wmul@multiplicand
  6004  02D6  3000               	movlw	0
  6005  02D7  00D0               	movwf	___wmul@multiplicand+1
  6006  02D8  3185  25DC  3182   	fcall	___wmul
  6007  02DB  0020               	movlb	0	; select bank0
  6008  02DC  084E               	movf	?___wmul+1,w
  6009  02DD  00A3               	movwf	_gLedRunPara+3
  6010  02DE  084D               	movf	?___wmul,w
  6011  02DF  00A2               	movwf	_gLedRunPara+2
  6012                           
  6013                           ;led.c: 113: gLedRunPara.sunsettime = (gLedPara.sunsetHour * 60 + gLedPara.sunsetMin) * 
      +                          30;
  6014  02E0  084A               	movf	_gLedPara+8,w
  6015  02E1  00D3               	movwf	??_TimeChangeSec
  6016  02E2  01D4               	clrf	??_TimeChangeSec+1
  6017  02E3  0849               	movf	_gLedPara+7,w
  6018  02E4  00D5               	movwf	??_TimeChangeSec+2
  6019  02E5  01D6               	clrf	??_TimeChangeSec+3
  6020  02E6  0855               	movf	??_TimeChangeSec+2,w
  6021  02E7  00CD               	movwf	___wmul@multiplier
  6022  02E8  0856               	movf	??_TimeChangeSec+3,w
  6023  02E9  00CE               	movwf	___wmul@multiplier+1
  6024  02EA  303C               	movlw	60
  6025  02EB  00CF               	movwf	___wmul@multiplicand
  6026  02EC  3000               	movlw	0
  6027  02ED  00D0               	movwf	___wmul@multiplicand+1
  6028  02EE  3185  25DC  3182   	fcall	___wmul
  6029  02F1  0020               	movlb	0	; select bank0
  6030  02F2  0853               	movf	??_TimeChangeSec,w
  6031  02F3  074D               	addwf	?___wmul,w
  6032  02F4  00D9               	movwf	_TimeChangeSec$1583
  6033  02F5  0854               	movf	??_TimeChangeSec+1,w
  6034  02F6  3D4E               	addwfc	?___wmul+1,w
  6035  02F7  00DA               	movwf	_TimeChangeSec$1583+1
  6036                           
  6037                           ;led.c: 113: gLedRunPara.sunsettime = (gLedPara.sunsetHour * 60 + gLedPara.sunsetMin) * 
      +                          30;
  6038  02F8  085A               	movf	_TimeChangeSec$1583+1,w
  6039  02F9  00CE               	movwf	___wmul@multiplier+1
  6040  02FA  0859               	movf	_TimeChangeSec$1583,w
  6041  02FB  00CD               	movwf	___wmul@multiplier
  6042  02FC  301E               	movlw	30
  6043  02FD  00CF               	movwf	___wmul@multiplicand
  6044  02FE  3000               	movlw	0
  6045  02FF  00D0               	movwf	___wmul@multiplicand+1
  6046  0300  3185  25DC         	fcall	___wmul
  6047  0302  0020               	movlb	0	; select bank0
  6048  0303  084E               	movf	?___wmul+1,w
  6049  0304  00A5               	movwf	_gLedRunPara+5
  6050  0305  084D               	movf	?___wmul,w
  6051  0306  00A4               	movwf	_gLedRunPara+4
  6052  0307  0008               	return
  6053  0308                     __end_of_TimeChangeSec:	
  6054                           
  6055                           	psect	text32
  6056  05DC                     __ptext32:	
  6057 ;; *************** function ___wmul *****************
  6058 ;; Defined at:
  6059 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.41\sources\common\Umul16.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6062 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;  product         2    4[BANK0 ] unsigned int 
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  2    0[BANK0 ] unsigned int 
  6067 ;; Registers used:
  6068 ;;		wreg, status,2, status,0
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6074 ;;      Params:         0       4       0       0
  6075 ;;      Locals:         0       2       0       0
  6076 ;;      Temps:          0       0       0       0
  6077 ;;      Totals:         0       6       0       0
  6078 ;;Total ram usage:        6 bytes
  6079 ;; Hardware stack levels used:    1
  6080 ;; Hardware stack levels required when called:    3
  6081 ;; This function calls:
  6082 ;;		Nothing
  6083 ;; This function is called by:
  6084 ;;		_manualMode
  6085 ;;		_TimeChangeSec
  6086 ;;		_AutoMode
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           
  6091                           ;psect for function ___wmul
  6092  05DC                     ___wmul:	
  6093                           
  6094                           ;incstack = 0
  6095                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6096  05DC  0020               	movlb	0	; select bank0
  6097  05DD  01D1               	clrf	___wmul@product
  6098  05DE  01D2               	clrf	___wmul@product+1
  6099  05DF                     l1622:	
  6100  05DF  1C4D               	btfss	___wmul@multiplier,0
  6101  05E0  2DE5               	goto	l466
  6102  05E1  084F               	movf	___wmul@multiplicand,w
  6103  05E2  07D1               	addwf	___wmul@product,f
  6104  05E3  0850               	movf	___wmul@multiplicand+1,w
  6105  05E4  3DD2               	addwfc	___wmul@product+1,f
  6106  05E5                     l466:	
  6107  05E5  3001               	movlw	1
  6108  05E6                     u995:	
  6109  05E6  35CF               	lslf	___wmul@multiplicand,f
  6110  05E7  0DD0               	rlf	___wmul@multiplicand+1,f
  6111  05E8  0B89               	decfsz	9,f
  6112  05E9  2DE6               	goto	u995
  6113  05EA  3001               	movlw	1
  6114  05EB                     u1005:	
  6115  05EB  36CE               	lsrf	___wmul@multiplier+1,f
  6116  05EC  0CCD               	rrf	___wmul@multiplier,f
  6117  05ED  0B89               	decfsz	9,f
  6118  05EE  2DEB               	goto	u1005
  6119  05EF  084D               	movf	___wmul@multiplier,w
  6120  05F0  044E               	iorwf	___wmul@multiplier+1,w
  6121  05F1  1D03               	btfss	3,2
  6122  05F2  2DDF               	goto	l1622
  6123  05F3  0852               	movf	___wmul@product+1,w
  6124  05F4  00CE               	movwf	?___wmul+1
  6125  05F5  0851               	movf	___wmul@product,w
  6126  05F6  00CD               	movwf	?___wmul
  6127  05F7  0008               	return
  6128  05F8                     __end_of___wmul:	
  6129                           
  6130                           	psect	text33
  6131  06E8                     __ptext33:	
  6132 ;; *************** function _PWM2_Enable *****************
  6133 ;; Defined at:
  6134 ;;		line 34 in file "pwm.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;		None
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;		None
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1    wreg      void 
  6141 ;; Registers used:
  6142 ;;		None
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6148 ;;      Params:         0       0       0       0
  6149 ;;      Locals:         0       0       0       0
  6150 ;;      Temps:          0       0       0       0
  6151 ;;      Totals:         0       0       0       0
  6152 ;;Total ram usage:        0 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; Hardware stack levels required when called:    3
  6155 ;; This function calls:
  6156 ;;		Nothing
  6157 ;; This function is called by:
  6158 ;;		_manualMode
  6159 ;;		_AutoMode
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           
  6164                           ;psect for function _PWM2_Enable
  6165  06E8                     _PWM2_Enable:	
  6166                           
  6167                           ;pwm.c: 36: PWM2CONbits.PWM2EN = 1;
  6168                           
  6169                           ;incstack = 0
  6170                           ; Regs used in _PWM2_Enable: []
  6171  06E8  002C               	movlb	12	; select bank12
  6172  06E9  1796               	bsf	22,7	;volatile
  6173  06EA  0008               	return
  6174  06EB                     __end_of_PWM2_Enable:	
  6175                           
  6176                           	psect	text34
  6177  06EB                     __ptext34:	
  6178 ;; *************** function _PWM1_Enable *****************
  6179 ;; Defined at:
  6180 ;;		line 12 in file "pwm.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;		None
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;		None
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  1    wreg      void 
  6187 ;; Registers used:
  6188 ;;		None
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6194 ;;      Params:         0       0       0       0
  6195 ;;      Locals:         0       0       0       0
  6196 ;;      Temps:          0       0       0       0
  6197 ;;      Totals:         0       0       0       0
  6198 ;;Total ram usage:        0 bytes
  6199 ;; Hardware stack levels used:    1
  6200 ;; Hardware stack levels required when called:    3
  6201 ;; This function calls:
  6202 ;;		Nothing
  6203 ;; This function is called by:
  6204 ;;		_manualMode
  6205 ;;		_AutoMode
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           
  6210                           ;psect for function _PWM1_Enable
  6211  06EB                     _PWM1_Enable:	
  6212                           
  6213                           ;pwm.c: 14: PWM1CONbits.PWM1EN = 1;
  6214                           
  6215                           ;incstack = 0
  6216                           ; Regs used in _PWM1_Enable: []
  6217  06EB  002C               	movlb	12	; select bank12
  6218  06EC  1793               	bsf	19,7	;volatile
  6219  06ED  0008               	return
  6220  06EE                     __end_of_PWM1_Enable:	
  6221                           
  6222                           	psect	intentry
  6223  0004                     __pintentry:	
  6224 ;; *************** function _INTERRUPT_interruptManager *****************
  6225 ;; Defined at:
  6226 ;;		line 25 in file "command.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;		None
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;		None
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  1    wreg      void 
  6233 ;; Registers used:
  6234 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6240 ;;      Params:         0       0       0       0
  6241 ;;      Locals:         0       0       0       0
  6242 ;;      Temps:          1       0       0       0
  6243 ;;      Totals:         1       0       0       0
  6244 ;;Total ram usage:        1 bytes
  6245 ;; Hardware stack levels used:    1
  6246 ;; Hardware stack levels required when called:    2
  6247 ;; This function calls:
  6248 ;;		_Decode
  6249 ;;		_RunRTC
  6250 ;; This function is called by:
  6251 ;;		Interrupt level 1
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255  0004                     _INTERRUPT_interruptManager:	
  6256                           
  6257                           ;incstack = 0
  6258  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6259                           
  6260                           ; Regs used in _INTERRUPT_interruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6261  0005  3180               	pagesel	$
  6262  0006  0020               	movlb	0	; select bank0
  6263  0007  087F               	movf	127,w
  6264  0008  00F8               	movwf	??_INTERRUPT_interruptManager
  6265                           
  6266                           ;command.c: 27: if(IOCBFbits.IOCBF7)
  6267  0009  0027               	movlb	7	; select bank7
  6268  000A  1F96               	btfss	22,7	;volatile
  6269  000B  2811               	goto	i1l294
  6270                           
  6271                           ;command.c: 28: {
  6272                           ;command.c: 29: IOCBFbits.IOCBF7 = 0;
  6273  000C  1396               	bcf	22,7	;volatile
  6274                           
  6275                           ;command.c: 30: Decode();
  6276  000D  3183  2308  3180   	fcall	_Decode
  6277                           
  6278                           ;command.c: 31: }
  6279  0010  2818               	goto	i1l297
  6280  0011                     i1l294:	
  6281                           
  6282                           ;command.c: 32: else if(PIR1bits.TMR1IF)
  6283  0011  0020               	movlb	0	; select bank0
  6284  0012  1C11               	btfss	17,0	;volatile
  6285  0013  2818               	goto	i1l297
  6286                           
  6287                           ;command.c: 33: {
  6288                           ;command.c: 34: PIR1bits.TMR1IF = 0;
  6289  0014  1011               	bcf	17,0	;volatile
  6290                           
  6291                           ;command.c: 35: gCurrentTime.datatime.fSec = 1;
  6292  0015  142E               	bsf	_gCurrentTime,0	;volatile
  6293                           
  6294                           ;command.c: 36: RunRTC();
  6295  0016  3185  25BF         	fcall	_RunRTC
  6296  0018                     i1l297:	
  6297  0018  0878               	movf	??_INTERRUPT_interruptManager,w
  6298  0019  0020               	movlb	0	; select bank0
  6299  001A  00FF               	movwf	127
  6300  001B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6301  001C  0009               	retfie
  6302  001D                     __end_of_INTERRUPT_interruptManager:	
  6303                           
  6304                           	psect	text36
  6305  05BF                     __ptext36:	
  6306 ;; *************** function _RunRTC *****************
  6307 ;; Defined at:
  6308 ;;		line 11 in file "rtc.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;		None
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;		None
  6313 ;; Return value:  Size  Location     Type
  6314 ;;                  1    wreg      void 
  6315 ;; Registers used:
  6316 ;;		wreg, status,2, status,0
  6317 ;; Tracked objects:
  6318 ;;		On entry : 0/0
  6319 ;;		On exit  : 0/0
  6320 ;;		Unchanged: 0/0
  6321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6322 ;;      Params:         0       0       0       0
  6323 ;;      Locals:         0       0       0       0
  6324 ;;      Temps:          1       0       0       0
  6325 ;;      Totals:         1       0       0       0
  6326 ;;Total ram usage:        1 bytes
  6327 ;; Hardware stack levels used:    1
  6328 ;; This function calls:
  6329 ;;		Nothing
  6330 ;; This function is called by:
  6331 ;;		_INTERRUPT_interruptManager
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           
  6336                           ;psect for function _RunRTC
  6337  05BF                     _RunRTC:	
  6338                           
  6339                           ;rtc.c: 13: gCurrentTime.datatime.second ++;
  6340                           
  6341                           ;incstack = 0
  6342                           ; Regs used in _RunRTC: [wreg+status,2+status,0]
  6343  05BF  3001               	movlw	1
  6344  05C0  00F0               	movwf	??_RunRTC
  6345  05C1  0870               	movf	??_RunRTC,w
  6346  05C2  0020               	movlb	0	; select bank0
  6347  05C3  07AF               	addwf	_gCurrentTime+1,f	;volatile
  6348                           
  6349                           ;rtc.c: 14: if(gCurrentTime.datatime.second > 29)
  6350  05C4  301E               	movlw	30
  6351  05C5  022F               	subwf	_gCurrentTime+1,w	;volatile
  6352  05C6  1C03               	skipc
  6353  05C7  0008               	return
  6354                           
  6355                           ;rtc.c: 15: {
  6356                           ;rtc.c: 16: gCurrentTime.datatime.second = 0;
  6357  05C8  01AF               	clrf	_gCurrentTime+1	;volatile
  6358                           
  6359                           ;rtc.c: 17: gCurrentTime.datatime.minute ++;
  6360  05C9  3001               	movlw	1
  6361  05CA  00F0               	movwf	??_RunRTC
  6362  05CB  0870               	movf	??_RunRTC,w
  6363  05CC  07B0               	addwf	_gCurrentTime+2,f	;volatile
  6364                           
  6365                           ;rtc.c: 18: if(gCurrentTime.datatime.minute > 59)
  6366  05CD  303C               	movlw	60
  6367  05CE  0230               	subwf	_gCurrentTime+2,w	;volatile
  6368  05CF  1C03               	skipc
  6369  05D0  0008               	return
  6370                           
  6371                           ;rtc.c: 19: {
  6372                           ;rtc.c: 20: gCurrentTime.datatime.minute = 0;
  6373  05D1  01B0               	clrf	_gCurrentTime+2	;volatile
  6374                           
  6375                           ;rtc.c: 21: gCurrentTime.datatime.hour ++;
  6376  05D2  3001               	movlw	1
  6377  05D3  00F0               	movwf	??_RunRTC
  6378  05D4  0870               	movf	??_RunRTC,w
  6379  05D5  07B1               	addwf	_gCurrentTime+3,f	;volatile
  6380                           
  6381                           ;rtc.c: 22: if(gCurrentTime.datatime.hour > 23)
  6382  05D6  3018               	movlw	24
  6383  05D7  0231               	subwf	_gCurrentTime+3,w	;volatile
  6384  05D8  1C03               	skipc
  6385  05D9  0008               	return
  6386                           
  6387                           ;rtc.c: 23: {
  6388                           ;rtc.c: 24: gCurrentTime.datatime.hour = 0;
  6389  05DA  01B1               	clrf	_gCurrentTime+3	;volatile
  6390  05DB  0008               	return
  6391  05DC                     __end_of_RunRTC:	
  6392                           
  6393                           	psect	text37
  6394  0308                     __ptext37:	
  6395 ;; *************** function _Decode *****************
  6396 ;; Defined at:
  6397 ;;		line 40 in file "IR_Decode.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;		None
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;		None
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  1    wreg      void 
  6404 ;; Registers used:
  6405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6411 ;;      Params:         0       0       0       0
  6412 ;;      Locals:         0       0       0       0
  6413 ;;      Temps:          2       0       0       0
  6414 ;;      Totals:         2       0       0       0
  6415 ;;Total ram usage:        2 bytes
  6416 ;; Hardware stack levels used:    1
  6417 ;; Hardware stack levels required when called:    1
  6418 ;; This function calls:
  6419 ;;		_CheckSum
  6420 ;; This function is called by:
  6421 ;;		_INTERRUPT_interruptManager
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           
  6425                           
  6426                           ;psect for function _Decode
  6427  0308                     _Decode:	
  6428                           
  6429                           ;IR_Decode.c: 42: if(RB7)
  6430                           
  6431                           ;incstack = 0
  6432                           ; Regs used in _Decode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6433  0308  0020               	movlb	0	; select bank0
  6434  0309  1F8D               	btfss	13,7	;volatile
  6435  030A  2B0E               	goto	i1l2030
  6436                           
  6437                           ;IR_Decode.c: 43: {
  6438                           ;IR_Decode.c: 44: INTCONbits.TMR0IF = 0;
  6439  030B  110B               	bcf	11,2	;volatile
  6440                           
  6441                           ;IR_Decode.c: 45: TMR0 = 0;
  6442  030C  0195               	clrf	21	;volatile
  6443                           
  6444                           ;IR_Decode.c: 46: }
  6445  030D  0008               	return
  6446  030E                     i1l2030:	
  6447                           
  6448                           ;IR_Decode.c: 47: else
  6449                           ;IR_Decode.c: 48: {
  6450                           ;IR_Decode.c: 49: gRunPara.HighCount = TMR0;
  6451  030E  0815               	movf	21,w	;volatile
  6452  030F  00F6               	movwf	??_Decode
  6453  0310  0876               	movf	??_Decode,w
  6454  0311  00F9               	movwf	_gRunPara
  6455                           
  6456                           ;IR_Decode.c: 50: TMR0 = 0;
  6457  0312  0195               	clrf	21	;volatile
  6458                           
  6459                           ;IR_Decode.c: 51: TMR0IF = 0;
  6460  0313  110B               	bcf	11,2	;volatile
  6461                           
  6462                           ;IR_Decode.c: 52: switch(state)
  6463  0314  2B76               	goto	i1l2090
  6464  0315                     i1l447:	
  6465                           ;IR_Decode.c: 53: {
  6466                           ;IR_Decode.c: 54: case 0:
  6467                           
  6468                           
  6469                           ;IR_Decode.c: 55: state = 1;
  6470  0315  01FD               	clrf	_state
  6471  0316  0AFD               	incf	_state,f
  6472                           
  6473                           ;IR_Decode.c: 56: break;
  6474  0317  0008               	return
  6475  0318                     i1l2036:	
  6476                           ;IR_Decode.c: 57: case 1:
  6477                           
  6478                           
  6479                           ;IR_Decode.c: 58: if((gRunPara.HighCount >= 140) && (gRunPara.HighCount <= 175))
  6480  0318  308C               	movlw	140
  6481  0319  0279               	subwf	_gRunPara,w
  6482  031A  1C03               	skipc
  6483  031B  2B26               	goto	i1l2044
  6484  031C  30B0               	movlw	176
  6485  031D  0279               	subwf	_gRunPara,w
  6486  031E  1803               	skipnc
  6487  031F  2B26               	goto	i1l2044
  6488                           
  6489                           ;IR_Decode.c: 59: {
  6490                           ;IR_Decode.c: 60: gRunPara.HighCount = 0;
  6491  0320  01F9               	clrf	_gRunPara
  6492                           
  6493                           ;IR_Decode.c: 61: state = 2;
  6494  0321  3002               	movlw	2
  6495  0322  00F6               	movwf	??_Decode
  6496  0323  0876               	movf	??_Decode,w
  6497  0324  00FD               	movwf	_state
  6498                           
  6499                           ;IR_Decode.c: 62: }
  6500  0325  0008               	return
  6501  0326                     i1l2044:	
  6502                           
  6503                           ;IR_Decode.c: 63: else
  6504                           ;IR_Decode.c: 64: {
  6505                           ;IR_Decode.c: 65: state = 0;
  6506  0326  01FD               	clrf	_state
  6507                           
  6508                           ;IR_Decode.c: 66: }
  6509                           ;IR_Decode.c: 67: break;
  6510  0327  0008               	return
  6511  0328                     i1l2046:	
  6512                           ;IR_Decode.c: 68: case 2:
  6513                           
  6514                           
  6515                           ;IR_Decode.c: 69: if((gRunPara.HighCount > 38) && (gRunPara.HighCount < 54))
  6516  0328  3027               	movlw	39
  6517  0329  0279               	subwf	_gRunPara,w
  6518  032A  1C03               	skipc
  6519  032B  2B32               	goto	i1l2054
  6520  032C  3036               	movlw	54
  6521  032D  0279               	subwf	_gRunPara,w
  6522  032E  1803               	skipnc
  6523  032F  2B32               	goto	i1l2054
  6524                           
  6525                           ;IR_Decode.c: 70: {
  6526                           ;IR_Decode.c: 71: gRunPara.HighCount = 0;
  6527  0330  01F9               	clrf	_gRunPara
  6528  0331  2B46               	goto	i1l2062
  6529  0332                     i1l2054:	
  6530                           ;IR_Decode.c: 73: }
  6531                           
  6532                           ;IR_Decode.c: 72: gRunPara.nBit ++;
  6533                           
  6534                           
  6535                           ;IR_Decode.c: 74: else if((gRunPara.HighCount > 15) && (gRunPara.HighCount < 31))
  6536  0332  3010               	movlw	16
  6537  0333  0279               	subwf	_gRunPara,w
  6538  0334  1C03               	skipc
  6539  0335  2B4B               	goto	i1l2064
  6540  0336  301F               	movlw	31
  6541  0337  0279               	subwf	_gRunPara,w
  6542  0338  1803               	skipnc
  6543  0339  2B4B               	goto	i1l2064
  6544                           
  6545                           ;IR_Decode.c: 75: {
  6546                           ;IR_Decode.c: 76: gRunPara.HighCount = 0;
  6547  033A  01F9               	clrf	_gRunPara
  6548                           
  6549                           ;IR_Decode.c: 77: rcv |= 1 << gRunPara.nBit;
  6550  033B  3001               	movlw	1
  6551  033C  00F6               	movwf	??_Decode
  6552  033D  0A7B               	incf	_gRunPara+2,w
  6553  033E  2B40               	goto	u155_24
  6554  033F                     u155_25:	
  6555  033F  35F6               	lslf	??_Decode,f
  6556  0340                     u155_24:	
  6557  0340  0B89               	decfsz	9,f
  6558  0341  2B3F               	goto	u155_25
  6559  0342  0876               	movf	??_Decode,w
  6560  0343  00F7               	movwf	??_Decode+1
  6561  0344  0877               	movf	??_Decode+1,w
  6562  0345  04B2               	iorwf	_rcv,f
  6563  0346                     i1l2062:	
  6564                           
  6565                           ;IR_Decode.c: 78: gRunPara.nBit ++;
  6566  0346  3001               	movlw	1
  6567  0347  00F6               	movwf	??_Decode
  6568  0348  0876               	movf	??_Decode,w
  6569  0349  07FB               	addwf	_gRunPara+2,f
  6570                           
  6571                           ;IR_Decode.c: 79: }
  6572  034A  2B4C               	goto	i1l2066
  6573  034B                     i1l2064:	
  6574                           
  6575                           ;IR_Decode.c: 80: else
  6576                           ;IR_Decode.c: 81: {
  6577                           ;IR_Decode.c: 82: state = 0;
  6578  034B  01FD               	clrf	_state
  6579  034C                     i1l2066:	
  6580                           
  6581                           ;IR_Decode.c: 83: }
  6582                           ;IR_Decode.c: 84: if(gRunPara.nBit >= 8)
  6583  034C  3008               	movlw	8
  6584  034D  027B               	subwf	_gRunPara+2,w
  6585  034E  1C03               	skipc
  6586  034F  0008               	return
  6587                           
  6588                           ;IR_Decode.c: 85: {
  6589                           ;IR_Decode.c: 86: gRunPara.nBit = 0;
  6590  0350  01FB               	clrf	_gRunPara+2
  6591                           
  6592                           ;IR_Decode.c: 87: IR_ReveiveDataStructure.array[index] = rcv;
  6593  0351  0832               	movf	_rcv,w
  6594  0352  00F6               	movwf	??_Decode
  6595  0353  087C               	movf	_index,w
  6596  0354  3E34               	addlw	(low (_IR_ReveiveDataStructure| 0))& (0+255)
  6597  0355  0086               	movwf	6
  6598  0356  0187               	clrf	7
  6599  0357  0876               	movf	??_Decode,w
  6600  0358  0081               	movwf	1
  6601                           
  6602                           ;IR_Decode.c: 88: rcv = 0;
  6603  0359  01B2               	clrf	_rcv
  6604                           
  6605                           ;IR_Decode.c: 89: index ++;
  6606  035A  3001               	movlw	1
  6607  035B  00F6               	movwf	??_Decode
  6608  035C  0876               	movf	??_Decode,w
  6609  035D  07FC               	addwf	_index,f
  6610                           
  6611                           ;IR_Decode.c: 90: if(index >= 14)
  6612  035E  300E               	movlw	14
  6613  035F  027C               	subwf	_index,w
  6614  0360  1C03               	skipc
  6615  0361  0008               	return
  6616                           
  6617                           ;IR_Decode.c: 91: {
  6618                           ;IR_Decode.c: 92: rcv = 0;
  6619  0362  01B2               	clrf	_rcv
  6620                           
  6621                           ;IR_Decode.c: 93: index = 0;
  6622  0363  01FC               	clrf	_index
  6623                           
  6624                           ;IR_Decode.c: 94: if(IR_ReveiveDataStructure.UserCode == 0x0A)
  6625  0364  0834               	movf	_IR_ReveiveDataStructure,w
  6626  0365  390F               	andlw	15
  6627  0366  3A0A               	xorlw	10
  6628  0367  1D03               	skipz
  6629  0368  2B74               	goto	i1l2086
  6630                           
  6631                           ;IR_Decode.c: 95: {
  6632                           ;IR_Decode.c: 96: if(CheckSum((unsigned char*)IR_ReveiveDataStructure.array,sizeof(IR_Re
      +                          veiveDataStructure.array) - 1) == IR_ReveiveDataStructure.array[13])
  6633  0369  300D               	movlw	13
  6634  036A  00F6               	movwf	??_Decode
  6635  036B  0876               	movf	??_Decode,w
  6636  036C  00F0               	movwf	CheckSum@len
  6637  036D  3034               	movlw	(low (_IR_ReveiveDataStructure| 0))& (0+255)
  6638  036E  3186  2642         	fcall	_CheckSum
  6639  0370  0020               	movlb	0	; select bank0
  6640  0371  0641               	xorwf	_IR_ReveiveDataStructure+13,w
  6641  0372  1903               	btfsc	3,2
  6642                           
  6643                           ;IR_Decode.c: 97: {
  6644                           ;IR_Decode.c: 98: gRunState.fRecKey = 1;
  6645  0373  1433               	bsf	_gRunState,0
  6646  0374                     i1l2086:	
  6647                           
  6648                           ;IR_Decode.c: 99: }
  6649                           ;IR_Decode.c: 100: }
  6650                           ;IR_Decode.c: 101: state = 0;
  6651  0374  01FD               	clrf	_state
  6652                           
  6653                           ;IR_Decode.c: 107: }
  6654                           
  6655                           ;IR_Decode.c: 106: break;
  6656                           
  6657                           ;IR_Decode.c: 105: default:
  6658                           
  6659                           ;IR_Decode.c: 102: }
  6660                           ;IR_Decode.c: 103: }
  6661                           ;IR_Decode.c: 104: break;
  6662  0375  0008               	return
  6663  0376                     i1l2090:	
  6664  0376  087D               	movf	_state,w
  6665                           
  6666                           ; Switch size 1, requested type "space"
  6667                           ; Number of cases is 3, Range of values is 0 to 2
  6668                           ; switch strategies available:
  6669                           ; Name         Instructions Cycles
  6670                           ; simple_byte           10     6 (average)
  6671                           ; direct_byte           12     6 (fixed)
  6672                           ; jumptable            260     6 (fixed)
  6673                           ;	Chosen strategy is simple_byte
  6674  0377  3A00               	xorlw	0	; case 0
  6675  0378  1903               	skipnz
  6676  0379  2B15               	goto	i1l447
  6677  037A  3A01               	xorlw	1	; case 1
  6678  037B  1903               	skipnz
  6679  037C  2B18               	goto	i1l2036
  6680  037D  3A03               	xorlw	3	; case 2
  6681  037E  1903               	skipnz
  6682  037F  2B28               	goto	i1l2046
  6683  0380  2B82               	goto	i1l462
  6684  0381  0008               	return
  6685  0382                     i1l462:	
  6686  0382  0008               	return
  6687  0383                     __end_of_Decode:	
  6688                           
  6689                           	psect	text38
  6690  0642                     __ptext38:	
  6691 ;; *************** function _CheckSum *****************
  6692 ;; Defined at:
  6693 ;;		line 21 in file "IR_Decode.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;  pbuf            1    wreg     PTR unsigned char 
  6696 ;;		 -> IR_ReveiveDataStructure(14), 
  6697 ;;  len             1    0[COMMON] unsigned char 
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  pbuf            1    3[COMMON] PTR unsigned char 
  6700 ;;		 -> IR_ReveiveDataStructure(14), 
  6701 ;;  i               1    5[COMMON] unsigned char 
  6702 ;;  result          1    4[COMMON] unsigned char 
  6703 ;; Return value:  Size  Location     Type
  6704 ;;                  1    wreg      unsigned char 
  6705 ;; Registers used:
  6706 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6712 ;;      Params:         1       0       0       0
  6713 ;;      Locals:         3       0       0       0
  6714 ;;      Temps:          2       0       0       0
  6715 ;;      Totals:         6       0       0       0
  6716 ;;Total ram usage:        6 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; This function calls:
  6719 ;;		Nothing
  6720 ;; This function is called by:
  6721 ;;		_Decode
  6722 ;; This function uses a non-reentrant model
  6723 ;;
  6724                           
  6725                           
  6726                           ;psect for function _CheckSum
  6727  0642                     _CheckSum:	
  6728                           
  6729                           ;incstack = 0
  6730                           ; Regs used in _CheckSum: [wreg+fsr1l+fsr1h+status,2+status,0]
  6731                           ;CheckSum@pbuf stored from wreg
  6732  0642  00F3               	movwf	CheckSum@pbuf
  6733                           
  6734                           ;IR_Decode.c: 23: unsigned char result = 0x00;
  6735  0643  01F4               	clrf	CheckSum@result
  6736                           
  6737                           ;IR_Decode.c: 24: unsigned char i;
  6738                           ;IR_Decode.c: 25: for(i = 0;i < len;i ++)
  6739  0644  01F5               	clrf	CheckSum@i
  6740  0645                     i1l1842:	
  6741  0645  0870               	movf	CheckSum@len,w
  6742  0646  0275               	subwf	CheckSum@i,w
  6743  0647  1803               	btfsc	3,0
  6744  0648  2E58               	goto	i1l1844
  6745                           
  6746                           ;IR_Decode.c: 26: {
  6747                           ;IR_Decode.c: 27: result += *(pbuf + i);
  6748  0649  0875               	movf	CheckSum@i,w
  6749  064A  0773               	addwf	CheckSum@pbuf,w
  6750  064B  00F1               	movwf	??_CheckSum
  6751  064C  0871               	movf	??_CheckSum,w
  6752  064D  0086               	movwf	6
  6753  064E  0187               	clrf	7
  6754  064F  0801               	movf	1,w
  6755  0650  00F2               	movwf	??_CheckSum+1
  6756  0651  0872               	movf	??_CheckSum+1,w
  6757  0652  07F4               	addwf	CheckSum@result,f
  6758  0653  3001               	movlw	1
  6759  0654  00F1               	movwf	??_CheckSum
  6760  0655  0871               	movf	??_CheckSum,w
  6761  0656  07F5               	addwf	CheckSum@i,f
  6762  0657  2E45               	goto	i1l1842
  6763  0658                     i1l1844:	
  6764                           
  6765                           ;IR_Decode.c: 28: }
  6766                           ;IR_Decode.c: 29: return result;
  6767  0658  0874               	movf	CheckSum@result,w
  6768  0659  0008               	return
  6769  065A                     __end_of_CheckSum:	
  6770  007E                     btemp	set	126	;btemp
  6771  007E                     int$flags	set	126
  6772  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     30      76
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    CheckSum@pbuf	PTR unsigned char  size(1) Largest target is 14
		 -> IR_ReveiveDataStructure(BANK0[14]), 

    AutoMode@pendBright	PTR unsigned char  size(1) Largest target is 11
		 -> gLedPara.nightBright(BANK0[2]), gLedPara.dayBright(BANK0[2]), gLedPara(BANK0[11]), 

    AutoMode@pstartBright	PTR unsigned char  size(1) Largest target is 11
		 -> gLedPara.nightBright(BANK0[2]), gLedPara.dayBright(BANK0[2]), gLedPara(BANK0[11]), 

    SaveLedPara@pbuf	PTR unsigned char  size(1) Largest target is 11
		 -> gLedPara(BANK0[11]), 

    I2C_ReadBuffer@pbuf	PTR unsigned char  size(1) Largest target is 11
		 -> gLedPara(BANK0[11]), 

    I2C_WriteBuffer@pbuf	PTR unsigned char  size(1) Largest target is 11
		 -> gLedPara(BANK0[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_interruptManager in COMMON

    _INTERRUPT_interruptManager->_Decode
    _Decode->_CheckSum

Critical Paths under _main in BANK0

    _main->_AutoMode
    _manualMode->_LedUpdatePara
    _LedUpdate->_SaveLedPara
    _SaveLedPara->_I2C_WriteBuffer
    _LedParaInit->_I2C_ReadBuffer
    _AutoMode->_TimeChangeSec
    _UpdatePWM->_PWM1_LoadDutyValue
    _UpdatePWM->_PWM2_LoadDutyValue
    _TimeChangeSec->___wmul

Critical Paths under _INTERRUPT_interruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_interruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_interruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8836
                           _AutoMode
                        _LedParaInit
                          _LedUpdate
                         _ResetState
                  _SYSTEM_Initialize
                    _TMR1_StartTimer
                    _TMR2_StartTimer
                          _UpdateRTC
                         _manualMode
 ---------------------------------------------------------------------------------
 (1) _manualMode                                           2     2      0    2450
                                             11 BANK0      2     2      0
                      _LedUpdatePara
                       _PWM1_Disable
                        _PWM1_Enable
                       _PWM2_Disable
                        _PWM2_Enable
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _PWM2_Disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LedUpdatePara                                        7     7      0     438
                                              4 BANK0      7     7      0
                          _UpdatePWM
 ---------------------------------------------------------------------------------
 (1) _UpdateRTC                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _I2C_Initialize
       _InterruptOnChange_Initialize
                  _OSCCON_Initialize
                     _PIN_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCCON_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InterruptOnChange_Initialize                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ResetState                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LedUpdate                                            2     2      0     671
                                             14 BANK0      2     2      0
                        _SaveLedPara
 ---------------------------------------------------------------------------------
 (2) _SaveLedPara                                          8     8      0     493
                                              6 BANK0      8     8      0
                    _I2C_WriteBuffer
 ---------------------------------------------------------------------------------
 (3) _I2C_WriteBuffer                                      6     4      2     265
                                              0 BANK0      6     4      2
                         _CheckSSPIF
 ---------------------------------------------------------------------------------
 (1) _LedParaInit                                          3     3      0     487
                                              7 BANK0      3     3      0
                     _I2C_ReadBuffer
 ---------------------------------------------------------------------------------
 (2) _I2C_ReadBuffer                                       7     5      2     309
                                              0 BANK0      7     5      2
                         _CheckSSPIF
 ---------------------------------------------------------------------------------
 (4) _CheckSSPIF                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AutoMode                                            16    16      0    5228
                                             14 BANK0     16    16      0
                        _PWM1_Enable
                        _PWM2_Enable
                      _TimeChangeSec
                          _UpdatePWM
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _UpdatePWM                                            0     0      0     216
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM2_LoadDutyValue                                   4     2      2     108
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   4     2      2     108
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _TimeChangeSec                                       12    12      0    2219
                                              6 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2012
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _PWM2_Enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_interruptManager                           1     1      0     208
                                              8 COMMON     1     1      0
                             _Decode
                             _RunRTC
 ---------------------------------------------------------------------------------
 (6) _RunRTC                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Decode                                               2     2      0     208
                                              6 COMMON     2     2      0
                           _CheckSum
 ---------------------------------------------------------------------------------
 (7) _CheckSum                                             6     5      1     208
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AutoMode
     _PWM1_Enable
     _PWM2_Enable
     _TimeChangeSec
       ___wmul
     _UpdatePWM
       _PWM1_LoadDutyValue
       _PWM2_LoadDutyValue
     ___wmul
   _LedParaInit
     _I2C_ReadBuffer
       _CheckSSPIF
   _LedUpdate
     _SaveLedPara
       _I2C_WriteBuffer
         _CheckSSPIF
   _ResetState
   _SYSTEM_Initialize
     _I2C_Initialize
     _InterruptOnChange_Initialize
     _OSCCON_Initialize
     _PIN_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
   _TMR1_StartTimer
   _TMR2_StartTimer
   _UpdateRTC
   _manualMode
     _LedUpdatePara
       _UpdatePWM
         _PWM1_LoadDutyValue
         _PWM2_LoadDutyValue
     _PWM1_Disable
     _PWM1_Enable
     _PWM2_Disable
     _PWM2_Enable
     ___wmul

 _INTERRUPT_interruptManager (ROOT)
   _Decode
     _CheckSum
   _RunRTC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1E      4C       6       95.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      5A      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Nov 01 16:59:00 2017

                          __CFG_CP$OFF 0000                                     l29 057E  
                  ___wmul@multiplicand 004F           ??_INTERRUPT_interruptManager 0078  
                          __CFG_LVP$ON 0000                                    l212 04EC  
                                  l233 0265                                    l405 0414  
                                  l253 069F                                    l406 0424  
                                  l188 06D3                                    l348 056E  
                                  l391 00CE                                    l466 05E5  
                                  _RB7 006F                                    _PR2 001B  
                                  u905 0616                                    u915 05FD  
                                  u995 05E6                                    _rcv 0032  
                      _TMR2_Initialize 0690                        _PWM4_Initialize 06AA  
                         __CFG_BORV$LO 0000                           AutoMode@flag 006B  
                                  wreg 0009                             _CheckSSPIF 06D3  
                                 l2010 014C                                   l2012 016A  
                                 l2004 00DB                                   l2022 01F7  
                                 l2016 01D2                                   l2018 01EF  
                                 l2142 0596                                   l2136 058F  
                                 l2128 0585                                   l1622 05DF  
                                 l1614 04D3                                   l1802 0550  
                                 l1810 0542                                   l1734 021F  
                                 l1822 03B1                                   l1832 03EE  
                                 l1594 04C7                                   l1922 0470  
                                 l1826 03DA                                   l1818 0389  
                                 l1828 03E6                                   l1940 050E  
                                 l1766 0238                                   l1950 052E  
                                 l1928 049F                                   l1944 0514  
                                 l1890 043C                                   l1954 0534  
                                 l1980 0088                                   l1974 0070  
                                 l1886 0434                                   l1878 0404  
                                 l1992 00B5                                   l1968 004D  
                                 l1986 00A0                           __CFG_WDTE$ON 0000  
              __end_of_PWM1_Initialize 06C6                                   u1005 05EB  
                                 u1115 03A5                                   u1125 03CD  
                                 u1065 0246                    __end_of_LedParaInit 044E  
                                 u1405 0096                                   u1415 009E  
                                 u1335 0046                                   u1453 0126  
                                 u1365 0076                                   u1463 01A5  
                                 u1375 007E                                   u1385 0086  
                                 u1395 008E                                   u1777 04C1  
                                 u1787 0219                                   _TMR0 0015  
                                 _TMR2 001A                           __CFG_WRT$OFF 0000  
                                 _main 0570                  __end_of_TimeChangeSec 0308  
                                 fsr0h 0005                                   fsr1h 0007  
                                 indf0 0000                                   fsr0l 0004  
                                 indf1 0001                                   fsr1l 0006  
                                 btemp 007E                          AutoMode@dTime 0064  
                                 start 001D                          __CFG_IESO$OFF 0000  
  __size_of_INTERRUPT_interruptManager 0019                          __CFG_MCLRE$ON 0000  
              __end_of_PWM2_Initialize 06BF                __end_of_TMR0_Initialize 06DC  
                      _I2C_WriteBuffer 04A2                                  ?_main 0070  
                      _TMR1_StartTimer 06E5                                  _IOCAF 0393  
                                _IOCBF 0396                                  i1l462 0382  
                                i1l294 0011                                  i1l447 0315  
                                i1l297 0018                __size_of_PIN_Initialize 0018  
                        __CFG_PWRTE$ON 0000                         __CFG_FCMEN$OFF 0000  
                                _index 007C                                  _state 007D  
              __end_of_PWM3_Initialize 06B8                __end_of_TMR1_Initialize 0679  
                       __CFG_BOREN$OFF 0000                                  status 0003  
                                wtemp0 007E                       __end_of_CheckSum 065A  
                      _TMR2_StartTimer 06E2                        __initialization 001F  
                        ??_SaveLedPara 0053                           __end_of_main 059E  
                     __end_of_AutoMode 01FA                   AutoMode@pstartBright 0068  
              __end_of_PWM4_Initialize 06B1                __end_of_TMR2_Initialize 069A  
                       __CFG_LPBOR$OFF 0000                _IR_ReveiveDataStructure 0034  
                               ??_main 006B                            _LedParaInit 03F1  
                   __size_of_LedUpdate 0054                            ?_CheckSSPIF 0070  
                               _ANSELA 018C                                 _ANSELB 018D  
                               _ANSELC 018E                                 i1l2030 030E  
                     ?_PWM1_Initialize 0070                                 i1l2044 0326  
                               i1l2036 0318                                 i1l2062 0346  
                               i1l2054 0332                                 i1l2046 0328  
                               i1l2064 034B                                 i1l2066 034C  
                               i1l2090 0376                                 i1l2086 0374  
                               i1l1842 0645                                 i1l1844 0658  
                               u155_24 0340                                 u155_25 033F  
                               _TMR0IF 005A                                 _SSP1IF 008B  
                               _Decode 0308                             _ResetState 06A2  
                         ?_PWM1_Enable 0070                           ?_PWM2_Enable 0070  
              __end_of_I2C_WriteBuffer 04F1                                 _RunRTC 05BF  
              __end_of_TMR1_StartTimer 06E8                __size_of_I2C_ReadBuffer 0088  
                               ___wmul 05DC                         __CFG_STVREN$ON 0000  
   __end_of_INTERRUPT_interruptManager 001D             _INTERRUPT_interruptManager 0004  
                     ?_TMR0_Initialize 0070                       ?_PWM2_Initialize 0070  
              __size_of_I2C_Initialize 000D                    __end_of_SaveLedPara 0570  
                   __size_of_UpdateRTC 000A                     __size_of_UpdatePWM 0010  
              __end_of_TMR2_StartTimer 06E5                       ?_TMR1_Initialize 0070  
                     ?_PWM3_Initialize 0070                      _SYSTEM_Initialize 059E  
              __end_of__initialization 002F                     ?_SYSTEM_Initialize 0070  
           __end_of_PWM2_LoadDutyValue 0611            PWM1_LoadDutyValue@dutyValue 004D  
                    __end_of_LedUpdate 04A2                         __pcstackCOMMON 0070  
                  __size_of_CheckSSPIF 0005                           __pidataBANK0 06EE  
                __end_of_LedUpdatePara 03F1                    ??_SYSTEM_Initialize 004D  
                   _PWM1_LoadDutyValue 0611                       ?_TMR2_Initialize 0070  
                     ?_PWM4_Initialize 0070                         _PIN_Initialize 062A  
                            ?_CheckSum 0070                    ?_PWM1_LoadDutyValue 004D  
            __end_of_SYSTEM_Initialize 05BF                              ?_AutoMode 0070  
                           __pbssBANK0 0020                                ?_Decode 0070  
                          ?_ResetState 0070                   ??_PWM1_LoadDutyValue 004F  
                    __end_of_UpdateRTC 0690                      __end_of_UpdatePWM 066A  
                           __pmaintext 0570                                ?_RunRTC 0070  
                     ?_I2C_WriteBuffer 004D                                ?___wmul 004D  
                          _SaveLedPara 0537                       ?_TMR1_StartTimer 0070  
                           __pintentry 0004                 __end_of_PIN_Initialize 0642  
                           ??_CheckSum 0071                                _PWM1DCH 0612  
                              _PWM1DCL 0611                                _PWM2DCH 0615  
                              _PWM2DCL 0614                                _PWM3DCH 0618  
                              _PWM3DCL 0617                                _PWM4DCH 061B  
                              _PWM4DCL 061A                                _SSP1ADD 0212  
                              _SSP1BUF 0211                       ?_TMR2_StartTimer 0070  
                           ??_AutoMode 005B                          ?_PWM1_Disable 0070  
                      __size_of_Decode 007B                          ?_PWM2_Disable 0070  
                           _manualMode 04F1                        __size_of_RunRTC 001D  
                       _I2C_ReadBuffer 01FA                   __size_of_PWM1_Enable 0003  
                 __size_of_PWM2_Enable 0003                        __size_of___wmul 001C  
                       _I2C_Initialize 0679                                __ptext1 04F1  
                              __ptext2 06DC                                __ptext3 06DF  
                              __ptext4 0383                                __ptext5 0686  
                              __ptext6 06E2                                __ptext7 06E5  
                              __ptext8 059E                                __ptext9 0690  
                      ?_PIN_Initialize 0070                              _T1CONbits 0018  
               __size_of_TimeChangeSec 0086                              _T2CONbits 001C  
                         ?_LedParaInit 0070                    __size_of_ResetState 0008  
                            _IOCBFbits 0396                              CheckSum@i 0075  
                         ??_CheckSSPIF 004D                              _IOCBNbits 0395  
                            _IOCBPbits 0394             __size_of_SYSTEM_Initialize 0021  
                              clrloop0 06CE                   end_of_initialization 002F  
                          _gLedRunPara 0020                         ??_PWM1_Disable 004D  
                       ??_PWM2_Disable 004D                           CheckSum@pbuf 0073  
               __end_of_I2C_ReadBuffer 0282                 __end_of_I2C_Initialize 0686  
                   __end_of_CheckSSPIF 06D8            ?_INTERRUPT_interruptManager 0070  
                     I2C_WriteBuffer@i 0052                       I2C_WriteBuffer@n 0051  
                     __CFG_FOSC$INTOSC 0000                              _TRISAbits 008C  
                            _TRISBbits 008D                              _TRISCbits 008E  
                            AutoMode@i 006A                         LedUpdatePara@i 0057  
                        _TimeChangeSec 0282                        ?_I2C_ReadBuffer 004D  
                       __end_of_Decode 0383                     I2C_ReadBuffer@pbuf 004D  
             __size_of_PWM1_Initialize 0007                     I2C_ReadBuffer@suba 0051  
                          ?_manualMode 0070                         __end_of_RunRTC 05DC  
                      ?_I2C_Initialize 0070                         __end_of___wmul 05F8  
                            _LedUpdate 044E                     _PWM2_LoadDutyValue 05F8  
                  start_initialization 001F               __size_of_PWM2_Initialize 0007  
             __size_of_TMR0_Initialize 0004                    ?_PWM2_LoadDutyValue 004D  
                    __size_of_CheckSum 0018                         ?_TimeChangeSec 0070  
                    __size_of_AutoMode 01C7                               ??_Decode 0076  
                         ??_ResetState 004D                   ??_PWM2_LoadDutyValue 004F  
                             ??_RunRTC 0070               __size_of_PWM3_Initialize 0007  
             __size_of_TMR1_Initialize 000F            PWM2_LoadDutyValue@dutyValue 004D  
                         ?_SaveLedPara 0070                               ??___wmul 0051  
                          __pdataBANK0 006B                              _UpdateRTC 0686  
                            _UpdatePWM 065A                             ?_LedUpdate 0070  
                 __end_of_PWM1_Disable 06E2                   __end_of_PWM2_Disable 06DF  
                          __pbssCOMMON 0079                              ___latbits 0001  
                        __pcstackBANK0 004D                     __end_of_ResetState 06AA  
             __size_of_PWM4_Initialize 0007               __size_of_TMR2_Initialize 000A  
                 __size_of_LedParaInit 005D                    __size_of_manualMode 0046  
               __size_of_LedUpdatePara 006E                              _gRunState 0033  
          __size_of_PWM1_LoadDutyValue 0019                       ??_PIN_Initialize 004D  
                           ?_UpdateRTC 0070                             ?_UpdatePWM 0070  
                    ??_PWM1_Initialize 004D               __size_of_I2C_WriteBuffer 004F  
                      I2C_ReadBuffer@i 0053                        I2C_ReadBuffer@n 0052  
             __size_of_TMR1_StartTimer 0003   __end_of_InterruptOnChange_Initialize 06CD  
__size_of_InterruptOnChange_Initialize 0007           _InterruptOnChange_Initialize 06C6  
                      ??_TimeChangeSec 0053                      ??_TMR0_Initialize 004D  
                    ??_PWM2_Initialize 004D                         ___wmul@product 0051  
                             _LATAbits 010C                               _LATCbits 010E  
                            clear_ram0 06CD                               _PIE1bits 0091  
                        ??_PWM1_Enable 004D               __size_of_TMR2_StartTimer 0003  
                        ??_PWM2_Enable 004D                            CheckSum@len 0070  
                             _PIR1bits 0011                      _OSCCON_Initialize 069A  
                        _LedUpdatePara 0383                            ??_LedUpdate 005B  
                   ?_OSCCON_Initialize 0070                      ??_TMR1_Initialize 004D  
                    ??_PWM3_Initialize 004D                      ___wmul@multiplier 004D  
                   _TimeChangeSec$1583 0059                      SaveLedPara@offset 0058  
                             _CheckSum 0642                               _WPUBbits 020D  
                  ??_OSCCON_Initialize 004D                      I2C_ReadBuffer@len 004E  
                             _AutoMode 0033          ?_InterruptOnChange_Initialize 0070  
                     ??_I2C_ReadBuffer 004F                           LedParaInit@i 0056  
                    ??_TMR2_Initialize 004D                      ??_PWM4_Initialize 004D  
                     ??_I2C_Initialize 004D              __end_of_OSCCON_Initialize 06A2  
                         ??_manualMode 0058                               _gLedPara 0042  
                       ?_LedUpdatePara 0070                  __size_of_PWM1_Disable 0003  
                  __end_of_PWM1_Enable 06EE                            ??_UpdateRTC 004D  
                          ??_UpdatePWM 0051                  __size_of_PWM2_Disable 0003  
                  __end_of_PWM2_Enable 06EB                   __size_of_SaveLedPara 0039  
                             _gRunPara 0079                               __ptext10 066A  
                             __ptext11 06D8                               __ptext20 06A2  
                             __ptext12 06AA                               __ptext21 044E  
                             __ptext13 06B1                             _T1GCONbits 0019  
                             __ptext30 0611                               __ptext22 0537  
                             __ptext14 06B8                               __ptext31 0282  
                             __ptext23 04A2                               __ptext15 06BF  
                             __ptext32 05DC                               __ptext24 03F1  
                             __ptext16 062A                               __ptext33 06E8  
                             __ptext25 01FA                               __ptext17 069A  
                             __ptext34 06EB                               __ptext26 06D3  
                             __ptext18 06C6                               __ptext27 0033  
                             __ptext19 0679                               __ptext36 05BF  
                             __ptext28 065A                               __ptext37 0308  
                             __ptext29 05F8                               __ptext38 0642  
                     _SaveLedPara$1128 0055                      ??_I2C_WriteBuffer 004F  
                         _SSP1CON1bits 0215                           _SSP1CON2bits 0216  
                         _SSP1CON3bits 0217                     __end_of_manualMode 0537  
                    ??_TMR1_StartTimer 004D                         CheckSum@result 0074  
                        __size_of_main 002E                           _PWM1_Disable 06DF  
                         _PWM2_Disable 06DC                               int$flags 007E  
                    ??_TMR2_StartTimer 004D                           _SSP1STATbits 0214  
                          _OSCSTATbits 009A                             _INTCONbits 000B  
                          _PWM1CONbits 0613                            _PWM2CONbits 0616  
                          _PWM3CONbits 0619                            _PWM4CONbits 061C  
                  I2C_WriteBuffer@pbuf 004D                               intlevel1 0000  
                  I2C_WriteBuffer@suba 0050                      __CFG_CLKOUTEN$OFF 0000  
       ??_InterruptOnChange_Initialize 004D                        _PWM1_Initialize 06BF  
                          _PWM1_Enable 06EB                             _OSCCONbits 0099  
                          _PWM2_Enable 06E8                        ??_LedUpdatePara 0051  
           __size_of_OSCCON_Initialize 0008            __size_of_PWM2_LoadDutyValue 0019  
                      SaveLedPara@pbuf 0057                     AutoMode@pendBright 0069  
                   I2C_WriteBuffer@len 004E                             _OPTION_REG 0095  
                        ??_LedParaInit 0054                        _TMR0_Initialize 06D8  
                      _PWM2_Initialize 06B8                             LedUpdate@i 005C  
                       SaveLedPara@cnt 0059                         SaveLedPara@len 005A  
           __end_of_PWM1_LoadDutyValue 062A                           _gCurrentTime 002E  
                      _TMR1_Initialize 066A                        _PWM3_Initialize 06B1  
