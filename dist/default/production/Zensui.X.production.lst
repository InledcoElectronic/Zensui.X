

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Oct 24 15:26:04 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1508
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 1.41
    53                           ; Generated 25/01/2017 GMT
    54                           ; 
    55                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F1508 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  0111                     	;# 
   134  0112                     	;# 
   135  0113                     	;# 
   136  0114                     	;# 
   137  0115                     	;# 
   138  0116                     	;# 
   139  0117                     	;# 
   140  0118                     	;# 
   141  0119                     	;# 
   142  011D                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  018E                     	;# 
   146  0191                     	;# 
   147  0191                     	;# 
   148  0192                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0194                     	;# 
   152  0195                     	;# 
   153  0196                     	;# 
   154  0197                     	;# 
   155  0199                     	;# 
   156  019A                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019C                     	;# 
   160  019D                     	;# 
   161  019E                     	;# 
   162  019F                     	;# 
   163  020C                     	;# 
   164  020D                     	;# 
   165  0211                     	;# 
   166  0211                     	;# 
   167  0212                     	;# 
   168  0212                     	;# 
   169  0213                     	;# 
   170  0213                     	;# 
   171  0214                     	;# 
   172  0214                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0216                     	;# 
   177  0216                     	;# 
   178  0217                     	;# 
   179  0217                     	;# 
   180  0391                     	;# 
   181  0392                     	;# 
   182  0393                     	;# 
   183  0394                     	;# 
   184  0395                     	;# 
   185  0396                     	;# 
   186  0498                     	;# 
   187  0498                     	;# 
   188  0499                     	;# 
   189  049A                     	;# 
   190  049B                     	;# 
   191  049B                     	;# 
   192  049C                     	;# 
   193  049D                     	;# 
   194  049E                     	;# 
   195  049F                     	;# 
   196  0611                     	;# 
   197  0612                     	;# 
   198  0613                     	;# 
   199  0613                     	;# 
   200  0614                     	;# 
   201  0615                     	;# 
   202  0616                     	;# 
   203  0616                     	;# 
   204  0617                     	;# 
   205  0618                     	;# 
   206  0619                     	;# 
   207  0619                     	;# 
   208  061A                     	;# 
   209  061B                     	;# 
   210  061C                     	;# 
   211  061C                     	;# 
   212  0691                     	;# 
   213  0692                     	;# 
   214  0693                     	;# 
   215  0694                     	;# 
   216  0695                     	;# 
   217  0F0F                     	;# 
   218  0F10                     	;# 
   219  0F11                     	;# 
   220  0F12                     	;# 
   221  0F13                     	;# 
   222  0F14                     	;# 
   223  0F15                     	;# 
   224  0F16                     	;# 
   225  0F17                     	;# 
   226  0F18                     	;# 
   227  0F19                     	;# 
   228  0F1A                     	;# 
   229  0F1B                     	;# 
   230  0F1C                     	;# 
   231  0F1D                     	;# 
   232  0F1E                     	;# 
   233  0F1F                     	;# 
   234  0F20                     	;# 
   235  0F21                     	;# 
   236  0F22                     	;# 
   237  0F23                     	;# 
   238  0F24                     	;# 
   239  0F25                     	;# 
   240  0F26                     	;# 
   241  0F27                     	;# 
   242  0F28                     	;# 
   243  0F29                     	;# 
   244  0F2A                     	;# 
   245  0F2B                     	;# 
   246  0F2C                     	;# 
   247  0F2D                     	;# 
   248  0F2E                     	;# 
   249  0F2F                     	;# 
   250  0F8C                     	;# 
   251  0F8D                     	;# 
   252  0F91                     	;# 
   253  0F95                     	;# 
   254  0F96                     	;# 
   255  0F97                     	;# 
   256  0F9C                     	;# 
   257  0F9D                     	;# 
   258  0F9E                     	;# 
   259  0FE3                     	;# 
   260  0FE4                     	;# 
   261  0FE5                     	;# 
   262  0FE6                     	;# 
   263  0FE7                     	;# 
   264  0FE8                     	;# 
   265  0FE9                     	;# 
   266  0FEA                     	;# 
   267  0FEB                     	;# 
   268  0FED                     	;# 
   269  0FEE                     	;# 
   270  0FEF                     	;# 
   271  0000                     	;# 
   272  0001                     	;# 
   273  0002                     	;# 
   274  0003                     	;# 
   275  0004                     	;# 
   276  0005                     	;# 
   277  0006                     	;# 
   278  0007                     	;# 
   279  0008                     	;# 
   280  0009                     	;# 
   281  000A                     	;# 
   282  000B                     	;# 
   283  000C                     	;# 
   284  000D                     	;# 
   285  000E                     	;# 
   286  0011                     	;# 
   287  0012                     	;# 
   288  0013                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0016                     	;# 
   292  0017                     	;# 
   293  0018                     	;# 
   294  0019                     	;# 
   295  001A                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  008C                     	;# 
   299  008D                     	;# 
   300  008E                     	;# 
   301  0091                     	;# 
   302  0092                     	;# 
   303  0093                     	;# 
   304  0095                     	;# 
   305  0096                     	;# 
   306  0097                     	;# 
   307  0099                     	;# 
   308  009A                     	;# 
   309  009B                     	;# 
   310  009B                     	;# 
   311  009C                     	;# 
   312  009D                     	;# 
   313  009E                     	;# 
   314  009F                     	;# 
   315  010C                     	;# 
   316  010D                     	;# 
   317  010E                     	;# 
   318  0111                     	;# 
   319  0112                     	;# 
   320  0113                     	;# 
   321  0114                     	;# 
   322  0115                     	;# 
   323  0116                     	;# 
   324  0117                     	;# 
   325  0118                     	;# 
   326  0119                     	;# 
   327  011D                     	;# 
   328  018C                     	;# 
   329  018D                     	;# 
   330  018E                     	;# 
   331  0191                     	;# 
   332  0191                     	;# 
   333  0192                     	;# 
   334  0193                     	;# 
   335  0193                     	;# 
   336  0194                     	;# 
   337  0195                     	;# 
   338  0196                     	;# 
   339  0197                     	;# 
   340  0199                     	;# 
   341  019A                     	;# 
   342  019B                     	;# 
   343  019B                     	;# 
   344  019C                     	;# 
   345  019D                     	;# 
   346  019E                     	;# 
   347  019F                     	;# 
   348  020C                     	;# 
   349  020D                     	;# 
   350  0211                     	;# 
   351  0211                     	;# 
   352  0212                     	;# 
   353  0212                     	;# 
   354  0213                     	;# 
   355  0213                     	;# 
   356  0214                     	;# 
   357  0214                     	;# 
   358  0215                     	;# 
   359  0215                     	;# 
   360  0215                     	;# 
   361  0216                     	;# 
   362  0216                     	;# 
   363  0217                     	;# 
   364  0217                     	;# 
   365  0391                     	;# 
   366  0392                     	;# 
   367  0393                     	;# 
   368  0394                     	;# 
   369  0395                     	;# 
   370  0396                     	;# 
   371  0498                     	;# 
   372  0498                     	;# 
   373  0499                     	;# 
   374  049A                     	;# 
   375  049B                     	;# 
   376  049B                     	;# 
   377  049C                     	;# 
   378  049D                     	;# 
   379  049E                     	;# 
   380  049F                     	;# 
   381  0611                     	;# 
   382  0612                     	;# 
   383  0613                     	;# 
   384  0613                     	;# 
   385  0614                     	;# 
   386  0615                     	;# 
   387  0616                     	;# 
   388  0616                     	;# 
   389  0617                     	;# 
   390  0618                     	;# 
   391  0619                     	;# 
   392  0619                     	;# 
   393  061A                     	;# 
   394  061B                     	;# 
   395  061C                     	;# 
   396  061C                     	;# 
   397  0691                     	;# 
   398  0692                     	;# 
   399  0693                     	;# 
   400  0694                     	;# 
   401  0695                     	;# 
   402  0F0F                     	;# 
   403  0F10                     	;# 
   404  0F11                     	;# 
   405  0F12                     	;# 
   406  0F13                     	;# 
   407  0F14                     	;# 
   408  0F15                     	;# 
   409  0F16                     	;# 
   410  0F17                     	;# 
   411  0F18                     	;# 
   412  0F19                     	;# 
   413  0F1A                     	;# 
   414  0F1B                     	;# 
   415  0F1C                     	;# 
   416  0F1D                     	;# 
   417  0F1E                     	;# 
   418  0F1F                     	;# 
   419  0F20                     	;# 
   420  0F21                     	;# 
   421  0F22                     	;# 
   422  0F23                     	;# 
   423  0F24                     	;# 
   424  0F25                     	;# 
   425  0F26                     	;# 
   426  0F27                     	;# 
   427  0F28                     	;# 
   428  0F29                     	;# 
   429  0F2A                     	;# 
   430  0F2B                     	;# 
   431  0F2C                     	;# 
   432  0F2D                     	;# 
   433  0F2E                     	;# 
   434  0F2F                     	;# 
   435  0F8C                     	;# 
   436  0F8D                     	;# 
   437  0F91                     	;# 
   438  0F95                     	;# 
   439  0F96                     	;# 
   440  0F97                     	;# 
   441  0F9C                     	;# 
   442  0F9D                     	;# 
   443  0F9E                     	;# 
   444  0FE3                     	;# 
   445  0FE4                     	;# 
   446  0FE5                     	;# 
   447  0FE6                     	;# 
   448  0FE7                     	;# 
   449  0FE8                     	;# 
   450  0FE9                     	;# 
   451  0FEA                     	;# 
   452  0FEB                     	;# 
   453  0FED                     	;# 
   454  0FEE                     	;# 
   455  0FEF                     	;# 
   456  0000                     	;# 
   457  0001                     	;# 
   458  0002                     	;# 
   459  0003                     	;# 
   460  0004                     	;# 
   461  0005                     	;# 
   462  0006                     	;# 
   463  0007                     	;# 
   464  0008                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000D                     	;# 
   470  000E                     	;# 
   471  0011                     	;# 
   472  0012                     	;# 
   473  0013                     	;# 
   474  0015                     	;# 
   475  0016                     	;# 
   476  0016                     	;# 
   477  0017                     	;# 
   478  0018                     	;# 
   479  0019                     	;# 
   480  001A                     	;# 
   481  001B                     	;# 
   482  001C                     	;# 
   483  008C                     	;# 
   484  008D                     	;# 
   485  008E                     	;# 
   486  0091                     	;# 
   487  0092                     	;# 
   488  0093                     	;# 
   489  0095                     	;# 
   490  0096                     	;# 
   491  0097                     	;# 
   492  0099                     	;# 
   493  009A                     	;# 
   494  009B                     	;# 
   495  009B                     	;# 
   496  009C                     	;# 
   497  009D                     	;# 
   498  009E                     	;# 
   499  009F                     	;# 
   500  010C                     	;# 
   501  010D                     	;# 
   502  010E                     	;# 
   503  0111                     	;# 
   504  0112                     	;# 
   505  0113                     	;# 
   506  0114                     	;# 
   507  0115                     	;# 
   508  0116                     	;# 
   509  0117                     	;# 
   510  0118                     	;# 
   511  0119                     	;# 
   512  011D                     	;# 
   513  018C                     	;# 
   514  018D                     	;# 
   515  018E                     	;# 
   516  0191                     	;# 
   517  0191                     	;# 
   518  0192                     	;# 
   519  0193                     	;# 
   520  0193                     	;# 
   521  0194                     	;# 
   522  0195                     	;# 
   523  0196                     	;# 
   524  0197                     	;# 
   525  0199                     	;# 
   526  019A                     	;# 
   527  019B                     	;# 
   528  019B                     	;# 
   529  019C                     	;# 
   530  019D                     	;# 
   531  019E                     	;# 
   532  019F                     	;# 
   533  020C                     	;# 
   534  020D                     	;# 
   535  0211                     	;# 
   536  0211                     	;# 
   537  0212                     	;# 
   538  0212                     	;# 
   539  0213                     	;# 
   540  0213                     	;# 
   541  0214                     	;# 
   542  0214                     	;# 
   543  0215                     	;# 
   544  0215                     	;# 
   545  0215                     	;# 
   546  0216                     	;# 
   547  0216                     	;# 
   548  0217                     	;# 
   549  0217                     	;# 
   550  0391                     	;# 
   551  0392                     	;# 
   552  0393                     	;# 
   553  0394                     	;# 
   554  0395                     	;# 
   555  0396                     	;# 
   556  0498                     	;# 
   557  0498                     	;# 
   558  0499                     	;# 
   559  049A                     	;# 
   560  049B                     	;# 
   561  049B                     	;# 
   562  049C                     	;# 
   563  049D                     	;# 
   564  049E                     	;# 
   565  049F                     	;# 
   566  0611                     	;# 
   567  0612                     	;# 
   568  0613                     	;# 
   569  0613                     	;# 
   570  0614                     	;# 
   571  0615                     	;# 
   572  0616                     	;# 
   573  0616                     	;# 
   574  0617                     	;# 
   575  0618                     	;# 
   576  0619                     	;# 
   577  0619                     	;# 
   578  061A                     	;# 
   579  061B                     	;# 
   580  061C                     	;# 
   581  061C                     	;# 
   582  0691                     	;# 
   583  0692                     	;# 
   584  0693                     	;# 
   585  0694                     	;# 
   586  0695                     	;# 
   587  0F0F                     	;# 
   588  0F10                     	;# 
   589  0F11                     	;# 
   590  0F12                     	;# 
   591  0F13                     	;# 
   592  0F14                     	;# 
   593  0F15                     	;# 
   594  0F16                     	;# 
   595  0F17                     	;# 
   596  0F18                     	;# 
   597  0F19                     	;# 
   598  0F1A                     	;# 
   599  0F1B                     	;# 
   600  0F1C                     	;# 
   601  0F1D                     	;# 
   602  0F1E                     	;# 
   603  0F1F                     	;# 
   604  0F20                     	;# 
   605  0F21                     	;# 
   606  0F22                     	;# 
   607  0F23                     	;# 
   608  0F24                     	;# 
   609  0F25                     	;# 
   610  0F26                     	;# 
   611  0F27                     	;# 
   612  0F28                     	;# 
   613  0F29                     	;# 
   614  0F2A                     	;# 
   615  0F2B                     	;# 
   616  0F2C                     	;# 
   617  0F2D                     	;# 
   618  0F2E                     	;# 
   619  0F2F                     	;# 
   620  0F8C                     	;# 
   621  0F8D                     	;# 
   622  0F91                     	;# 
   623  0F95                     	;# 
   624  0F96                     	;# 
   625  0F97                     	;# 
   626  0F9C                     	;# 
   627  0F9D                     	;# 
   628  0F9E                     	;# 
   629  0FE3                     	;# 
   630  0FE4                     	;# 
   631  0FE5                     	;# 
   632  0FE6                     	;# 
   633  0FE7                     	;# 
   634  0FE8                     	;# 
   635  0FE9                     	;# 
   636  0FEA                     	;# 
   637  0FEB                     	;# 
   638  0FED                     	;# 
   639  0FEE                     	;# 
   640  0FEF                     	;# 
   641  0000                     	;# 
   642  0001                     	;# 
   643  0002                     	;# 
   644  0003                     	;# 
   645  0004                     	;# 
   646  0005                     	;# 
   647  0006                     	;# 
   648  0007                     	;# 
   649  0008                     	;# 
   650  0009                     	;# 
   651  000A                     	;# 
   652  000B                     	;# 
   653  000C                     	;# 
   654  000D                     	;# 
   655  000E                     	;# 
   656  0011                     	;# 
   657  0012                     	;# 
   658  0013                     	;# 
   659  0015                     	;# 
   660  0016                     	;# 
   661  0016                     	;# 
   662  0017                     	;# 
   663  0018                     	;# 
   664  0019                     	;# 
   665  001A                     	;# 
   666  001B                     	;# 
   667  001C                     	;# 
   668  008C                     	;# 
   669  008D                     	;# 
   670  008E                     	;# 
   671  0091                     	;# 
   672  0092                     	;# 
   673  0093                     	;# 
   674  0095                     	;# 
   675  0096                     	;# 
   676  0097                     	;# 
   677  0099                     	;# 
   678  009A                     	;# 
   679  009B                     	;# 
   680  009B                     	;# 
   681  009C                     	;# 
   682  009D                     	;# 
   683  009E                     	;# 
   684  009F                     	;# 
   685  010C                     	;# 
   686  010D                     	;# 
   687  010E                     	;# 
   688  0111                     	;# 
   689  0112                     	;# 
   690  0113                     	;# 
   691  0114                     	;# 
   692  0115                     	;# 
   693  0116                     	;# 
   694  0117                     	;# 
   695  0118                     	;# 
   696  0119                     	;# 
   697  011D                     	;# 
   698  018C                     	;# 
   699  018D                     	;# 
   700  018E                     	;# 
   701  0191                     	;# 
   702  0191                     	;# 
   703  0192                     	;# 
   704  0193                     	;# 
   705  0193                     	;# 
   706  0194                     	;# 
   707  0195                     	;# 
   708  0196                     	;# 
   709  0197                     	;# 
   710  0199                     	;# 
   711  019A                     	;# 
   712  019B                     	;# 
   713  019B                     	;# 
   714  019C                     	;# 
   715  019D                     	;# 
   716  019E                     	;# 
   717  019F                     	;# 
   718  020C                     	;# 
   719  020D                     	;# 
   720  0211                     	;# 
   721  0211                     	;# 
   722  0212                     	;# 
   723  0212                     	;# 
   724  0213                     	;# 
   725  0213                     	;# 
   726  0214                     	;# 
   727  0214                     	;# 
   728  0215                     	;# 
   729  0215                     	;# 
   730  0215                     	;# 
   731  0216                     	;# 
   732  0216                     	;# 
   733  0217                     	;# 
   734  0217                     	;# 
   735  0391                     	;# 
   736  0392                     	;# 
   737  0393                     	;# 
   738  0394                     	;# 
   739  0395                     	;# 
   740  0396                     	;# 
   741  0498                     	;# 
   742  0498                     	;# 
   743  0499                     	;# 
   744  049A                     	;# 
   745  049B                     	;# 
   746  049B                     	;# 
   747  049C                     	;# 
   748  049D                     	;# 
   749  049E                     	;# 
   750  049F                     	;# 
   751  0611                     	;# 
   752  0612                     	;# 
   753  0613                     	;# 
   754  0613                     	;# 
   755  0614                     	;# 
   756  0615                     	;# 
   757  0616                     	;# 
   758  0616                     	;# 
   759  0617                     	;# 
   760  0618                     	;# 
   761  0619                     	;# 
   762  0619                     	;# 
   763  061A                     	;# 
   764  061B                     	;# 
   765  061C                     	;# 
   766  061C                     	;# 
   767  0691                     	;# 
   768  0692                     	;# 
   769  0693                     	;# 
   770  0694                     	;# 
   771  0695                     	;# 
   772  0F0F                     	;# 
   773  0F10                     	;# 
   774  0F11                     	;# 
   775  0F12                     	;# 
   776  0F13                     	;# 
   777  0F14                     	;# 
   778  0F15                     	;# 
   779  0F16                     	;# 
   780  0F17                     	;# 
   781  0F18                     	;# 
   782  0F19                     	;# 
   783  0F1A                     	;# 
   784  0F1B                     	;# 
   785  0F1C                     	;# 
   786  0F1D                     	;# 
   787  0F1E                     	;# 
   788  0F1F                     	;# 
   789  0F20                     	;# 
   790  0F21                     	;# 
   791  0F22                     	;# 
   792  0F23                     	;# 
   793  0F24                     	;# 
   794  0F25                     	;# 
   795  0F26                     	;# 
   796  0F27                     	;# 
   797  0F28                     	;# 
   798  0F29                     	;# 
   799  0F2A                     	;# 
   800  0F2B                     	;# 
   801  0F2C                     	;# 
   802  0F2D                     	;# 
   803  0F2E                     	;# 
   804  0F2F                     	;# 
   805  0F8C                     	;# 
   806  0F8D                     	;# 
   807  0F91                     	;# 
   808  0F95                     	;# 
   809  0F96                     	;# 
   810  0F97                     	;# 
   811  0F9C                     	;# 
   812  0F9D                     	;# 
   813  0F9E                     	;# 
   814  0FE3                     	;# 
   815  0FE4                     	;# 
   816  0FE5                     	;# 
   817  0FE6                     	;# 
   818  0FE7                     	;# 
   819  0FE8                     	;# 
   820  0FE9                     	;# 
   821  0FEA                     	;# 
   822  0FEB                     	;# 
   823  0FED                     	;# 
   824  0FEE                     	;# 
   825  0FEF                     	;# 
   826  0000                     	;# 
   827  0001                     	;# 
   828  0002                     	;# 
   829  0003                     	;# 
   830  0004                     	;# 
   831  0005                     	;# 
   832  0006                     	;# 
   833  0007                     	;# 
   834  0008                     	;# 
   835  0009                     	;# 
   836  000A                     	;# 
   837  000B                     	;# 
   838  000C                     	;# 
   839  000D                     	;# 
   840  000E                     	;# 
   841  0011                     	;# 
   842  0012                     	;# 
   843  0013                     	;# 
   844  0015                     	;# 
   845  0016                     	;# 
   846  0016                     	;# 
   847  0017                     	;# 
   848  0018                     	;# 
   849  0019                     	;# 
   850  001A                     	;# 
   851  001B                     	;# 
   852  001C                     	;# 
   853  008C                     	;# 
   854  008D                     	;# 
   855  008E                     	;# 
   856  0091                     	;# 
   857  0092                     	;# 
   858  0093                     	;# 
   859  0095                     	;# 
   860  0096                     	;# 
   861  0097                     	;# 
   862  0099                     	;# 
   863  009A                     	;# 
   864  009B                     	;# 
   865  009B                     	;# 
   866  009C                     	;# 
   867  009D                     	;# 
   868  009E                     	;# 
   869  009F                     	;# 
   870  010C                     	;# 
   871  010D                     	;# 
   872  010E                     	;# 
   873  0111                     	;# 
   874  0112                     	;# 
   875  0113                     	;# 
   876  0114                     	;# 
   877  0115                     	;# 
   878  0116                     	;# 
   879  0117                     	;# 
   880  0118                     	;# 
   881  0119                     	;# 
   882  011D                     	;# 
   883  018C                     	;# 
   884  018D                     	;# 
   885  018E                     	;# 
   886  0191                     	;# 
   887  0191                     	;# 
   888  0192                     	;# 
   889  0193                     	;# 
   890  0193                     	;# 
   891  0194                     	;# 
   892  0195                     	;# 
   893  0196                     	;# 
   894  0197                     	;# 
   895  0199                     	;# 
   896  019A                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019C                     	;# 
   900  019D                     	;# 
   901  019E                     	;# 
   902  019F                     	;# 
   903  020C                     	;# 
   904  020D                     	;# 
   905  0211                     	;# 
   906  0211                     	;# 
   907  0212                     	;# 
   908  0212                     	;# 
   909  0213                     	;# 
   910  0213                     	;# 
   911  0214                     	;# 
   912  0214                     	;# 
   913  0215                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0216                     	;# 
   917  0216                     	;# 
   918  0217                     	;# 
   919  0217                     	;# 
   920  0391                     	;# 
   921  0392                     	;# 
   922  0393                     	;# 
   923  0394                     	;# 
   924  0395                     	;# 
   925  0396                     	;# 
   926  0498                     	;# 
   927  0498                     	;# 
   928  0499                     	;# 
   929  049A                     	;# 
   930  049B                     	;# 
   931  049B                     	;# 
   932  049C                     	;# 
   933  049D                     	;# 
   934  049E                     	;# 
   935  049F                     	;# 
   936  0611                     	;# 
   937  0612                     	;# 
   938  0613                     	;# 
   939  0613                     	;# 
   940  0614                     	;# 
   941  0615                     	;# 
   942  0616                     	;# 
   943  0616                     	;# 
   944  0617                     	;# 
   945  0618                     	;# 
   946  0619                     	;# 
   947  0619                     	;# 
   948  061A                     	;# 
   949  061B                     	;# 
   950  061C                     	;# 
   951  061C                     	;# 
   952  0691                     	;# 
   953  0692                     	;# 
   954  0693                     	;# 
   955  0694                     	;# 
   956  0695                     	;# 
   957  0F0F                     	;# 
   958  0F10                     	;# 
   959  0F11                     	;# 
   960  0F12                     	;# 
   961  0F13                     	;# 
   962  0F14                     	;# 
   963  0F15                     	;# 
   964  0F16                     	;# 
   965  0F17                     	;# 
   966  0F18                     	;# 
   967  0F19                     	;# 
   968  0F1A                     	;# 
   969  0F1B                     	;# 
   970  0F1C                     	;# 
   971  0F1D                     	;# 
   972  0F1E                     	;# 
   973  0F1F                     	;# 
   974  0F20                     	;# 
   975  0F21                     	;# 
   976  0F22                     	;# 
   977  0F23                     	;# 
   978  0F24                     	;# 
   979  0F25                     	;# 
   980  0F26                     	;# 
   981  0F27                     	;# 
   982  0F28                     	;# 
   983  0F29                     	;# 
   984  0F2A                     	;# 
   985  0F2B                     	;# 
   986  0F2C                     	;# 
   987  0F2D                     	;# 
   988  0F2E                     	;# 
   989  0F2F                     	;# 
   990  0F8C                     	;# 
   991  0F8D                     	;# 
   992  0F91                     	;# 
   993  0F95                     	;# 
   994  0F96                     	;# 
   995  0F97                     	;# 
   996  0F9C                     	;# 
   997  0F9D                     	;# 
   998  0F9E                     	;# 
   999  0FE3                     	;# 
  1000  0FE4                     	;# 
  1001  0FE5                     	;# 
  1002  0FE6                     	;# 
  1003  0FE7                     	;# 
  1004  0FE8                     	;# 
  1005  0FE9                     	;# 
  1006  0FEA                     	;# 
  1007  0FEB                     	;# 
  1008  0FED                     	;# 
  1009  0FEE                     	;# 
  1010  0FEF                     	;# 
  1011  0000                     	;# 
  1012  0001                     	;# 
  1013  0002                     	;# 
  1014  0003                     	;# 
  1015  0004                     	;# 
  1016  0005                     	;# 
  1017  0006                     	;# 
  1018  0007                     	;# 
  1019  0008                     	;# 
  1020  0009                     	;# 
  1021  000A                     	;# 
  1022  000B                     	;# 
  1023  000C                     	;# 
  1024  000D                     	;# 
  1025  000E                     	;# 
  1026  0011                     	;# 
  1027  0012                     	;# 
  1028  0013                     	;# 
  1029  0015                     	;# 
  1030  0016                     	;# 
  1031  0016                     	;# 
  1032  0017                     	;# 
  1033  0018                     	;# 
  1034  0019                     	;# 
  1035  001A                     	;# 
  1036  001B                     	;# 
  1037  001C                     	;# 
  1038  008C                     	;# 
  1039  008D                     	;# 
  1040  008E                     	;# 
  1041  0091                     	;# 
  1042  0092                     	;# 
  1043  0093                     	;# 
  1044  0095                     	;# 
  1045  0096                     	;# 
  1046  0097                     	;# 
  1047  0099                     	;# 
  1048  009A                     	;# 
  1049  009B                     	;# 
  1050  009B                     	;# 
  1051  009C                     	;# 
  1052  009D                     	;# 
  1053  009E                     	;# 
  1054  009F                     	;# 
  1055  010C                     	;# 
  1056  010D                     	;# 
  1057  010E                     	;# 
  1058  0111                     	;# 
  1059  0112                     	;# 
  1060  0113                     	;# 
  1061  0114                     	;# 
  1062  0115                     	;# 
  1063  0116                     	;# 
  1064  0117                     	;# 
  1065  0118                     	;# 
  1066  0119                     	;# 
  1067  011D                     	;# 
  1068  018C                     	;# 
  1069  018D                     	;# 
  1070  018E                     	;# 
  1071  0191                     	;# 
  1072  0191                     	;# 
  1073  0192                     	;# 
  1074  0193                     	;# 
  1075  0193                     	;# 
  1076  0194                     	;# 
  1077  0195                     	;# 
  1078  0196                     	;# 
  1079  0197                     	;# 
  1080  0199                     	;# 
  1081  019A                     	;# 
  1082  019B                     	;# 
  1083  019B                     	;# 
  1084  019C                     	;# 
  1085  019D                     	;# 
  1086  019E                     	;# 
  1087  019F                     	;# 
  1088  020C                     	;# 
  1089  020D                     	;# 
  1090  0211                     	;# 
  1091  0211                     	;# 
  1092  0212                     	;# 
  1093  0212                     	;# 
  1094  0213                     	;# 
  1095  0213                     	;# 
  1096  0214                     	;# 
  1097  0214                     	;# 
  1098  0215                     	;# 
  1099  0215                     	;# 
  1100  0215                     	;# 
  1101  0216                     	;# 
  1102  0216                     	;# 
  1103  0217                     	;# 
  1104  0217                     	;# 
  1105  0391                     	;# 
  1106  0392                     	;# 
  1107  0393                     	;# 
  1108  0394                     	;# 
  1109  0395                     	;# 
  1110  0396                     	;# 
  1111  0498                     	;# 
  1112  0498                     	;# 
  1113  0499                     	;# 
  1114  049A                     	;# 
  1115  049B                     	;# 
  1116  049B                     	;# 
  1117  049C                     	;# 
  1118  049D                     	;# 
  1119  049E                     	;# 
  1120  049F                     	;# 
  1121  0611                     	;# 
  1122  0612                     	;# 
  1123  0613                     	;# 
  1124  0613                     	;# 
  1125  0614                     	;# 
  1126  0615                     	;# 
  1127  0616                     	;# 
  1128  0616                     	;# 
  1129  0617                     	;# 
  1130  0618                     	;# 
  1131  0619                     	;# 
  1132  0619                     	;# 
  1133  061A                     	;# 
  1134  061B                     	;# 
  1135  061C                     	;# 
  1136  061C                     	;# 
  1137  0691                     	;# 
  1138  0692                     	;# 
  1139  0693                     	;# 
  1140  0694                     	;# 
  1141  0695                     	;# 
  1142  0F0F                     	;# 
  1143  0F10                     	;# 
  1144  0F11                     	;# 
  1145  0F12                     	;# 
  1146  0F13                     	;# 
  1147  0F14                     	;# 
  1148  0F15                     	;# 
  1149  0F16                     	;# 
  1150  0F17                     	;# 
  1151  0F18                     	;# 
  1152  0F19                     	;# 
  1153  0F1A                     	;# 
  1154  0F1B                     	;# 
  1155  0F1C                     	;# 
  1156  0F1D                     	;# 
  1157  0F1E                     	;# 
  1158  0F1F                     	;# 
  1159  0F20                     	;# 
  1160  0F21                     	;# 
  1161  0F22                     	;# 
  1162  0F23                     	;# 
  1163  0F24                     	;# 
  1164  0F25                     	;# 
  1165  0F26                     	;# 
  1166  0F27                     	;# 
  1167  0F28                     	;# 
  1168  0F29                     	;# 
  1169  0F2A                     	;# 
  1170  0F2B                     	;# 
  1171  0F2C                     	;# 
  1172  0F2D                     	;# 
  1173  0F2E                     	;# 
  1174  0F2F                     	;# 
  1175  0F8C                     	;# 
  1176  0F8D                     	;# 
  1177  0F91                     	;# 
  1178  0F95                     	;# 
  1179  0F96                     	;# 
  1180  0F97                     	;# 
  1181  0F9C                     	;# 
  1182  0F9D                     	;# 
  1183  0F9E                     	;# 
  1184  0FE3                     	;# 
  1185  0FE4                     	;# 
  1186  0FE5                     	;# 
  1187  0FE6                     	;# 
  1188  0FE7                     	;# 
  1189  0FE8                     	;# 
  1190  0FE9                     	;# 
  1191  0FEA                     	;# 
  1192  0FEB                     	;# 
  1193  0FED                     	;# 
  1194  0FEE                     	;# 
  1195  0FEF                     	;# 
  1196  0000                     	;# 
  1197  0001                     	;# 
  1198  0002                     	;# 
  1199  0003                     	;# 
  1200  0004                     	;# 
  1201  0005                     	;# 
  1202  0006                     	;# 
  1203  0007                     	;# 
  1204  0008                     	;# 
  1205  0009                     	;# 
  1206  000A                     	;# 
  1207  000B                     	;# 
  1208  000C                     	;# 
  1209  000D                     	;# 
  1210  000E                     	;# 
  1211  0011                     	;# 
  1212  0012                     	;# 
  1213  0013                     	;# 
  1214  0015                     	;# 
  1215  0016                     	;# 
  1216  0016                     	;# 
  1217  0017                     	;# 
  1218  0018                     	;# 
  1219  0019                     	;# 
  1220  001A                     	;# 
  1221  001B                     	;# 
  1222  001C                     	;# 
  1223  008C                     	;# 
  1224  008D                     	;# 
  1225  008E                     	;# 
  1226  0091                     	;# 
  1227  0092                     	;# 
  1228  0093                     	;# 
  1229  0095                     	;# 
  1230  0096                     	;# 
  1231  0097                     	;# 
  1232  0099                     	;# 
  1233  009A                     	;# 
  1234  009B                     	;# 
  1235  009B                     	;# 
  1236  009C                     	;# 
  1237  009D                     	;# 
  1238  009E                     	;# 
  1239  009F                     	;# 
  1240  010C                     	;# 
  1241  010D                     	;# 
  1242  010E                     	;# 
  1243  0111                     	;# 
  1244  0112                     	;# 
  1245  0113                     	;# 
  1246  0114                     	;# 
  1247  0115                     	;# 
  1248  0116                     	;# 
  1249  0117                     	;# 
  1250  0118                     	;# 
  1251  0119                     	;# 
  1252  011D                     	;# 
  1253  018C                     	;# 
  1254  018D                     	;# 
  1255  018E                     	;# 
  1256  0191                     	;# 
  1257  0191                     	;# 
  1258  0192                     	;# 
  1259  0193                     	;# 
  1260  0193                     	;# 
  1261  0194                     	;# 
  1262  0195                     	;# 
  1263  0196                     	;# 
  1264  0197                     	;# 
  1265  0199                     	;# 
  1266  019A                     	;# 
  1267  019B                     	;# 
  1268  019B                     	;# 
  1269  019C                     	;# 
  1270  019D                     	;# 
  1271  019E                     	;# 
  1272  019F                     	;# 
  1273  020C                     	;# 
  1274  020D                     	;# 
  1275  0211                     	;# 
  1276  0211                     	;# 
  1277  0212                     	;# 
  1278  0212                     	;# 
  1279  0213                     	;# 
  1280  0213                     	;# 
  1281  0214                     	;# 
  1282  0214                     	;# 
  1283  0215                     	;# 
  1284  0215                     	;# 
  1285  0215                     	;# 
  1286  0216                     	;# 
  1287  0216                     	;# 
  1288  0217                     	;# 
  1289  0217                     	;# 
  1290  0391                     	;# 
  1291  0392                     	;# 
  1292  0393                     	;# 
  1293  0394                     	;# 
  1294  0395                     	;# 
  1295  0396                     	;# 
  1296  0498                     	;# 
  1297  0498                     	;# 
  1298  0499                     	;# 
  1299  049A                     	;# 
  1300  049B                     	;# 
  1301  049B                     	;# 
  1302  049C                     	;# 
  1303  049D                     	;# 
  1304  049E                     	;# 
  1305  049F                     	;# 
  1306  0611                     	;# 
  1307  0612                     	;# 
  1308  0613                     	;# 
  1309  0613                     	;# 
  1310  0614                     	;# 
  1311  0615                     	;# 
  1312  0616                     	;# 
  1313  0616                     	;# 
  1314  0617                     	;# 
  1315  0618                     	;# 
  1316  0619                     	;# 
  1317  0619                     	;# 
  1318  061A                     	;# 
  1319  061B                     	;# 
  1320  061C                     	;# 
  1321  061C                     	;# 
  1322  0691                     	;# 
  1323  0692                     	;# 
  1324  0693                     	;# 
  1325  0694                     	;# 
  1326  0695                     	;# 
  1327  0F0F                     	;# 
  1328  0F10                     	;# 
  1329  0F11                     	;# 
  1330  0F12                     	;# 
  1331  0F13                     	;# 
  1332  0F14                     	;# 
  1333  0F15                     	;# 
  1334  0F16                     	;# 
  1335  0F17                     	;# 
  1336  0F18                     	;# 
  1337  0F19                     	;# 
  1338  0F1A                     	;# 
  1339  0F1B                     	;# 
  1340  0F1C                     	;# 
  1341  0F1D                     	;# 
  1342  0F1E                     	;# 
  1343  0F1F                     	;# 
  1344  0F20                     	;# 
  1345  0F21                     	;# 
  1346  0F22                     	;# 
  1347  0F23                     	;# 
  1348  0F24                     	;# 
  1349  0F25                     	;# 
  1350  0F26                     	;# 
  1351  0F27                     	;# 
  1352  0F28                     	;# 
  1353  0F29                     	;# 
  1354  0F2A                     	;# 
  1355  0F2B                     	;# 
  1356  0F2C                     	;# 
  1357  0F2D                     	;# 
  1358  0F2E                     	;# 
  1359  0F2F                     	;# 
  1360  0F8C                     	;# 
  1361  0F8D                     	;# 
  1362  0F91                     	;# 
  1363  0F95                     	;# 
  1364  0F96                     	;# 
  1365  0F97                     	;# 
  1366  0F9C                     	;# 
  1367  0F9D                     	;# 
  1368  0F9E                     	;# 
  1369  0FE3                     	;# 
  1370  0FE4                     	;# 
  1371  0FE5                     	;# 
  1372  0FE6                     	;# 
  1373  0FE7                     	;# 
  1374  0FE8                     	;# 
  1375  0FE9                     	;# 
  1376  0FEA                     	;# 
  1377  0FEB                     	;# 
  1378  0FED                     	;# 
  1379  0FEE                     	;# 
  1380  0FEF                     	;# 
  1381  0000                     	;# 
  1382  0001                     	;# 
  1383  0002                     	;# 
  1384  0003                     	;# 
  1385  0004                     	;# 
  1386  0005                     	;# 
  1387  0006                     	;# 
  1388  0007                     	;# 
  1389  0008                     	;# 
  1390  0009                     	;# 
  1391  000A                     	;# 
  1392  000B                     	;# 
  1393  000C                     	;# 
  1394  000D                     	;# 
  1395  000E                     	;# 
  1396  0011                     	;# 
  1397  0012                     	;# 
  1398  0013                     	;# 
  1399  0015                     	;# 
  1400  0016                     	;# 
  1401  0016                     	;# 
  1402  0017                     	;# 
  1403  0018                     	;# 
  1404  0019                     	;# 
  1405  001A                     	;# 
  1406  001B                     	;# 
  1407  001C                     	;# 
  1408  008C                     	;# 
  1409  008D                     	;# 
  1410  008E                     	;# 
  1411  0091                     	;# 
  1412  0092                     	;# 
  1413  0093                     	;# 
  1414  0095                     	;# 
  1415  0096                     	;# 
  1416  0097                     	;# 
  1417  0099                     	;# 
  1418  009A                     	;# 
  1419  009B                     	;# 
  1420  009B                     	;# 
  1421  009C                     	;# 
  1422  009D                     	;# 
  1423  009E                     	;# 
  1424  009F                     	;# 
  1425  010C                     	;# 
  1426  010D                     	;# 
  1427  010E                     	;# 
  1428  0111                     	;# 
  1429  0112                     	;# 
  1430  0113                     	;# 
  1431  0114                     	;# 
  1432  0115                     	;# 
  1433  0116                     	;# 
  1434  0117                     	;# 
  1435  0118                     	;# 
  1436  0119                     	;# 
  1437  011D                     	;# 
  1438  018C                     	;# 
  1439  018D                     	;# 
  1440  018E                     	;# 
  1441  0191                     	;# 
  1442  0191                     	;# 
  1443  0192                     	;# 
  1444  0193                     	;# 
  1445  0193                     	;# 
  1446  0194                     	;# 
  1447  0195                     	;# 
  1448  0196                     	;# 
  1449  0197                     	;# 
  1450  0199                     	;# 
  1451  019A                     	;# 
  1452  019B                     	;# 
  1453  019B                     	;# 
  1454  019C                     	;# 
  1455  019D                     	;# 
  1456  019E                     	;# 
  1457  019F                     	;# 
  1458  020C                     	;# 
  1459  020D                     	;# 
  1460  0211                     	;# 
  1461  0211                     	;# 
  1462  0212                     	;# 
  1463  0212                     	;# 
  1464  0213                     	;# 
  1465  0213                     	;# 
  1466  0214                     	;# 
  1467  0214                     	;# 
  1468  0215                     	;# 
  1469  0215                     	;# 
  1470  0215                     	;# 
  1471  0216                     	;# 
  1472  0216                     	;# 
  1473  0217                     	;# 
  1474  0217                     	;# 
  1475  0391                     	;# 
  1476  0392                     	;# 
  1477  0393                     	;# 
  1478  0394                     	;# 
  1479  0395                     	;# 
  1480  0396                     	;# 
  1481  0498                     	;# 
  1482  0498                     	;# 
  1483  0499                     	;# 
  1484  049A                     	;# 
  1485  049B                     	;# 
  1486  049B                     	;# 
  1487  049C                     	;# 
  1488  049D                     	;# 
  1489  049E                     	;# 
  1490  049F                     	;# 
  1491  0611                     	;# 
  1492  0612                     	;# 
  1493  0613                     	;# 
  1494  0613                     	;# 
  1495  0614                     	;# 
  1496  0615                     	;# 
  1497  0616                     	;# 
  1498  0616                     	;# 
  1499  0617                     	;# 
  1500  0618                     	;# 
  1501  0619                     	;# 
  1502  0619                     	;# 
  1503  061A                     	;# 
  1504  061B                     	;# 
  1505  061C                     	;# 
  1506  061C                     	;# 
  1507  0691                     	;# 
  1508  0692                     	;# 
  1509  0693                     	;# 
  1510  0694                     	;# 
  1511  0695                     	;# 
  1512  0F0F                     	;# 
  1513  0F10                     	;# 
  1514  0F11                     	;# 
  1515  0F12                     	;# 
  1516  0F13                     	;# 
  1517  0F14                     	;# 
  1518  0F15                     	;# 
  1519  0F16                     	;# 
  1520  0F17                     	;# 
  1521  0F18                     	;# 
  1522  0F19                     	;# 
  1523  0F1A                     	;# 
  1524  0F1B                     	;# 
  1525  0F1C                     	;# 
  1526  0F1D                     	;# 
  1527  0F1E                     	;# 
  1528  0F1F                     	;# 
  1529  0F20                     	;# 
  1530  0F21                     	;# 
  1531  0F22                     	;# 
  1532  0F23                     	;# 
  1533  0F24                     	;# 
  1534  0F25                     	;# 
  1535  0F26                     	;# 
  1536  0F27                     	;# 
  1537  0F28                     	;# 
  1538  0F29                     	;# 
  1539  0F2A                     	;# 
  1540  0F2B                     	;# 
  1541  0F2C                     	;# 
  1542  0F2D                     	;# 
  1543  0F2E                     	;# 
  1544  0F2F                     	;# 
  1545  0F8C                     	;# 
  1546  0F8D                     	;# 
  1547  0F91                     	;# 
  1548  0F95                     	;# 
  1549  0F96                     	;# 
  1550  0F97                     	;# 
  1551  0F9C                     	;# 
  1552  0F9D                     	;# 
  1553  0F9E                     	;# 
  1554  0FE3                     	;# 
  1555  0FE4                     	;# 
  1556  0FE5                     	;# 
  1557  0FE6                     	;# 
  1558  0FE7                     	;# 
  1559  0FE8                     	;# 
  1560  0FE9                     	;# 
  1561  0FEA                     	;# 
  1562  0FEB                     	;# 
  1563  0FED                     	;# 
  1564  0FEE                     	;# 
  1565  0FEF                     	;# 
  1566  0000                     	;# 
  1567  0001                     	;# 
  1568  0002                     	;# 
  1569  0003                     	;# 
  1570  0004                     	;# 
  1571  0005                     	;# 
  1572  0006                     	;# 
  1573  0007                     	;# 
  1574  0008                     	;# 
  1575  0009                     	;# 
  1576  000A                     	;# 
  1577  000B                     	;# 
  1578  000C                     	;# 
  1579  000D                     	;# 
  1580  000E                     	;# 
  1581  0011                     	;# 
  1582  0012                     	;# 
  1583  0013                     	;# 
  1584  0015                     	;# 
  1585  0016                     	;# 
  1586  0016                     	;# 
  1587  0017                     	;# 
  1588  0018                     	;# 
  1589  0019                     	;# 
  1590  001A                     	;# 
  1591  001B                     	;# 
  1592  001C                     	;# 
  1593  008C                     	;# 
  1594  008D                     	;# 
  1595  008E                     	;# 
  1596  0091                     	;# 
  1597  0092                     	;# 
  1598  0093                     	;# 
  1599  0095                     	;# 
  1600  0096                     	;# 
  1601  0097                     	;# 
  1602  0099                     	;# 
  1603  009A                     	;# 
  1604  009B                     	;# 
  1605  009B                     	;# 
  1606  009C                     	;# 
  1607  009D                     	;# 
  1608  009E                     	;# 
  1609  009F                     	;# 
  1610  010C                     	;# 
  1611  010D                     	;# 
  1612  010E                     	;# 
  1613  0111                     	;# 
  1614  0112                     	;# 
  1615  0113                     	;# 
  1616  0114                     	;# 
  1617  0115                     	;# 
  1618  0116                     	;# 
  1619  0117                     	;# 
  1620  0118                     	;# 
  1621  0119                     	;# 
  1622  011D                     	;# 
  1623  018C                     	;# 
  1624  018D                     	;# 
  1625  018E                     	;# 
  1626  0191                     	;# 
  1627  0191                     	;# 
  1628  0192                     	;# 
  1629  0193                     	;# 
  1630  0193                     	;# 
  1631  0194                     	;# 
  1632  0195                     	;# 
  1633  0196                     	;# 
  1634  0197                     	;# 
  1635  0199                     	;# 
  1636  019A                     	;# 
  1637  019B                     	;# 
  1638  019B                     	;# 
  1639  019C                     	;# 
  1640  019D                     	;# 
  1641  019E                     	;# 
  1642  019F                     	;# 
  1643  020C                     	;# 
  1644  020D                     	;# 
  1645  0211                     	;# 
  1646  0211                     	;# 
  1647  0212                     	;# 
  1648  0212                     	;# 
  1649  0213                     	;# 
  1650  0213                     	;# 
  1651  0214                     	;# 
  1652  0214                     	;# 
  1653  0215                     	;# 
  1654  0215                     	;# 
  1655  0215                     	;# 
  1656  0216                     	;# 
  1657  0216                     	;# 
  1658  0217                     	;# 
  1659  0217                     	;# 
  1660  0391                     	;# 
  1661  0392                     	;# 
  1662  0393                     	;# 
  1663  0394                     	;# 
  1664  0395                     	;# 
  1665  0396                     	;# 
  1666  0498                     	;# 
  1667  0498                     	;# 
  1668  0499                     	;# 
  1669  049A                     	;# 
  1670  049B                     	;# 
  1671  049B                     	;# 
  1672  049C                     	;# 
  1673  049D                     	;# 
  1674  049E                     	;# 
  1675  049F                     	;# 
  1676  0611                     	;# 
  1677  0612                     	;# 
  1678  0613                     	;# 
  1679  0613                     	;# 
  1680  0614                     	;# 
  1681  0615                     	;# 
  1682  0616                     	;# 
  1683  0616                     	;# 
  1684  0617                     	;# 
  1685  0618                     	;# 
  1686  0619                     	;# 
  1687  0619                     	;# 
  1688  061A                     	;# 
  1689  061B                     	;# 
  1690  061C                     	;# 
  1691  061C                     	;# 
  1692  0691                     	;# 
  1693  0692                     	;# 
  1694  0693                     	;# 
  1695  0694                     	;# 
  1696  0695                     	;# 
  1697  0F0F                     	;# 
  1698  0F10                     	;# 
  1699  0F11                     	;# 
  1700  0F12                     	;# 
  1701  0F13                     	;# 
  1702  0F14                     	;# 
  1703  0F15                     	;# 
  1704  0F16                     	;# 
  1705  0F17                     	;# 
  1706  0F18                     	;# 
  1707  0F19                     	;# 
  1708  0F1A                     	;# 
  1709  0F1B                     	;# 
  1710  0F1C                     	;# 
  1711  0F1D                     	;# 
  1712  0F1E                     	;# 
  1713  0F1F                     	;# 
  1714  0F20                     	;# 
  1715  0F21                     	;# 
  1716  0F22                     	;# 
  1717  0F23                     	;# 
  1718  0F24                     	;# 
  1719  0F25                     	;# 
  1720  0F26                     	;# 
  1721  0F27                     	;# 
  1722  0F28                     	;# 
  1723  0F29                     	;# 
  1724  0F2A                     	;# 
  1725  0F2B                     	;# 
  1726  0F2C                     	;# 
  1727  0F2D                     	;# 
  1728  0F2E                     	;# 
  1729  0F2F                     	;# 
  1730  0F8C                     	;# 
  1731  0F8D                     	;# 
  1732  0F91                     	;# 
  1733  0F95                     	;# 
  1734  0F96                     	;# 
  1735  0F97                     	;# 
  1736  0F9C                     	;# 
  1737  0F9D                     	;# 
  1738  0F9E                     	;# 
  1739  0FE3                     	;# 
  1740  0FE4                     	;# 
  1741  0FE5                     	;# 
  1742  0FE6                     	;# 
  1743  0FE7                     	;# 
  1744  0FE8                     	;# 
  1745  0FE9                     	;# 
  1746  0FEA                     	;# 
  1747  0FEB                     	;# 
  1748  0FED                     	;# 
  1749  0FEE                     	;# 
  1750  0FEF                     	;# 
  1751  0000                     	;# 
  1752  0001                     	;# 
  1753  0002                     	;# 
  1754  0003                     	;# 
  1755  0004                     	;# 
  1756  0005                     	;# 
  1757  0006                     	;# 
  1758  0007                     	;# 
  1759  0008                     	;# 
  1760  0009                     	;# 
  1761  000A                     	;# 
  1762  000B                     	;# 
  1763  000C                     	;# 
  1764  000D                     	;# 
  1765  000E                     	;# 
  1766  0011                     	;# 
  1767  0012                     	;# 
  1768  0013                     	;# 
  1769  0015                     	;# 
  1770  0016                     	;# 
  1771  0016                     	;# 
  1772  0017                     	;# 
  1773  0018                     	;# 
  1774  0019                     	;# 
  1775  001A                     	;# 
  1776  001B                     	;# 
  1777  001C                     	;# 
  1778  008C                     	;# 
  1779  008D                     	;# 
  1780  008E                     	;# 
  1781  0091                     	;# 
  1782  0092                     	;# 
  1783  0093                     	;# 
  1784  0095                     	;# 
  1785  0096                     	;# 
  1786  0097                     	;# 
  1787  0099                     	;# 
  1788  009A                     	;# 
  1789  009B                     	;# 
  1790  009B                     	;# 
  1791  009C                     	;# 
  1792  009D                     	;# 
  1793  009E                     	;# 
  1794  009F                     	;# 
  1795  010C                     	;# 
  1796  010D                     	;# 
  1797  010E                     	;# 
  1798  0111                     	;# 
  1799  0112                     	;# 
  1800  0113                     	;# 
  1801  0114                     	;# 
  1802  0115                     	;# 
  1803  0116                     	;# 
  1804  0117                     	;# 
  1805  0118                     	;# 
  1806  0119                     	;# 
  1807  011D                     	;# 
  1808  018C                     	;# 
  1809  018D                     	;# 
  1810  018E                     	;# 
  1811  0191                     	;# 
  1812  0191                     	;# 
  1813  0192                     	;# 
  1814  0193                     	;# 
  1815  0193                     	;# 
  1816  0194                     	;# 
  1817  0195                     	;# 
  1818  0196                     	;# 
  1819  0197                     	;# 
  1820  0199                     	;# 
  1821  019A                     	;# 
  1822  019B                     	;# 
  1823  019B                     	;# 
  1824  019C                     	;# 
  1825  019D                     	;# 
  1826  019E                     	;# 
  1827  019F                     	;# 
  1828  020C                     	;# 
  1829  020D                     	;# 
  1830  0211                     	;# 
  1831  0211                     	;# 
  1832  0212                     	;# 
  1833  0212                     	;# 
  1834  0213                     	;# 
  1835  0213                     	;# 
  1836  0214                     	;# 
  1837  0214                     	;# 
  1838  0215                     	;# 
  1839  0215                     	;# 
  1840  0215                     	;# 
  1841  0216                     	;# 
  1842  0216                     	;# 
  1843  0217                     	;# 
  1844  0217                     	;# 
  1845  0391                     	;# 
  1846  0392                     	;# 
  1847  0393                     	;# 
  1848  0394                     	;# 
  1849  0395                     	;# 
  1850  0396                     	;# 
  1851  0498                     	;# 
  1852  0498                     	;# 
  1853  0499                     	;# 
  1854  049A                     	;# 
  1855  049B                     	;# 
  1856  049B                     	;# 
  1857  049C                     	;# 
  1858  049D                     	;# 
  1859  049E                     	;# 
  1860  049F                     	;# 
  1861  0611                     	;# 
  1862  0612                     	;# 
  1863  0613                     	;# 
  1864  0613                     	;# 
  1865  0614                     	;# 
  1866  0615                     	;# 
  1867  0616                     	;# 
  1868  0616                     	;# 
  1869  0617                     	;# 
  1870  0618                     	;# 
  1871  0619                     	;# 
  1872  0619                     	;# 
  1873  061A                     	;# 
  1874  061B                     	;# 
  1875  061C                     	;# 
  1876  061C                     	;# 
  1877  0691                     	;# 
  1878  0692                     	;# 
  1879  0693                     	;# 
  1880  0694                     	;# 
  1881  0695                     	;# 
  1882  0F0F                     	;# 
  1883  0F10                     	;# 
  1884  0F11                     	;# 
  1885  0F12                     	;# 
  1886  0F13                     	;# 
  1887  0F14                     	;# 
  1888  0F15                     	;# 
  1889  0F16                     	;# 
  1890  0F17                     	;# 
  1891  0F18                     	;# 
  1892  0F19                     	;# 
  1893  0F1A                     	;# 
  1894  0F1B                     	;# 
  1895  0F1C                     	;# 
  1896  0F1D                     	;# 
  1897  0F1E                     	;# 
  1898  0F1F                     	;# 
  1899  0F20                     	;# 
  1900  0F21                     	;# 
  1901  0F22                     	;# 
  1902  0F23                     	;# 
  1903  0F24                     	;# 
  1904  0F25                     	;# 
  1905  0F26                     	;# 
  1906  0F27                     	;# 
  1907  0F28                     	;# 
  1908  0F29                     	;# 
  1909  0F2A                     	;# 
  1910  0F2B                     	;# 
  1911  0F2C                     	;# 
  1912  0F2D                     	;# 
  1913  0F2E                     	;# 
  1914  0F2F                     	;# 
  1915  0F8C                     	;# 
  1916  0F8D                     	;# 
  1917  0F91                     	;# 
  1918  0F95                     	;# 
  1919  0F96                     	;# 
  1920  0F97                     	;# 
  1921  0F9C                     	;# 
  1922  0F9D                     	;# 
  1923  0F9E                     	;# 
  1924  0FE3                     	;# 
  1925  0FE4                     	;# 
  1926  0FE5                     	;# 
  1927  0FE6                     	;# 
  1928  0FE7                     	;# 
  1929  0FE8                     	;# 
  1930  0FE9                     	;# 
  1931  0FEA                     	;# 
  1932  0FEB                     	;# 
  1933  0FED                     	;# 
  1934  0FEE                     	;# 
  1935  0FEF                     	;# 
  1936  0000                     	;# 
  1937  0001                     	;# 
  1938  0002                     	;# 
  1939  0003                     	;# 
  1940  0004                     	;# 
  1941  0005                     	;# 
  1942  0006                     	;# 
  1943  0007                     	;# 
  1944  0008                     	;# 
  1945  0009                     	;# 
  1946  000A                     	;# 
  1947  000B                     	;# 
  1948  000C                     	;# 
  1949  000D                     	;# 
  1950  000E                     	;# 
  1951  0011                     	;# 
  1952  0012                     	;# 
  1953  0013                     	;# 
  1954  0015                     	;# 
  1955  0016                     	;# 
  1956  0016                     	;# 
  1957  0017                     	;# 
  1958  0018                     	;# 
  1959  0019                     	;# 
  1960  001A                     	;# 
  1961  001B                     	;# 
  1962  001C                     	;# 
  1963  008C                     	;# 
  1964  008D                     	;# 
  1965  008E                     	;# 
  1966  0091                     	;# 
  1967  0092                     	;# 
  1968  0093                     	;# 
  1969  0095                     	;# 
  1970  0096                     	;# 
  1971  0097                     	;# 
  1972  0099                     	;# 
  1973  009A                     	;# 
  1974  009B                     	;# 
  1975  009B                     	;# 
  1976  009C                     	;# 
  1977  009D                     	;# 
  1978  009E                     	;# 
  1979  009F                     	;# 
  1980  010C                     	;# 
  1981  010D                     	;# 
  1982  010E                     	;# 
  1983  0111                     	;# 
  1984  0112                     	;# 
  1985  0113                     	;# 
  1986  0114                     	;# 
  1987  0115                     	;# 
  1988  0116                     	;# 
  1989  0117                     	;# 
  1990  0118                     	;# 
  1991  0119                     	;# 
  1992  011D                     	;# 
  1993  018C                     	;# 
  1994  018D                     	;# 
  1995  018E                     	;# 
  1996  0191                     	;# 
  1997  0191                     	;# 
  1998  0192                     	;# 
  1999  0193                     	;# 
  2000  0193                     	;# 
  2001  0194                     	;# 
  2002  0195                     	;# 
  2003  0196                     	;# 
  2004  0197                     	;# 
  2005  0199                     	;# 
  2006  019A                     	;# 
  2007  019B                     	;# 
  2008  019B                     	;# 
  2009  019C                     	;# 
  2010  019D                     	;# 
  2011  019E                     	;# 
  2012  019F                     	;# 
  2013  020C                     	;# 
  2014  020D                     	;# 
  2015  0211                     	;# 
  2016  0211                     	;# 
  2017  0212                     	;# 
  2018  0212                     	;# 
  2019  0213                     	;# 
  2020  0213                     	;# 
  2021  0214                     	;# 
  2022  0214                     	;# 
  2023  0215                     	;# 
  2024  0215                     	;# 
  2025  0215                     	;# 
  2026  0216                     	;# 
  2027  0216                     	;# 
  2028  0217                     	;# 
  2029  0217                     	;# 
  2030  0391                     	;# 
  2031  0392                     	;# 
  2032  0393                     	;# 
  2033  0394                     	;# 
  2034  0395                     	;# 
  2035  0396                     	;# 
  2036  0498                     	;# 
  2037  0498                     	;# 
  2038  0499                     	;# 
  2039  049A                     	;# 
  2040  049B                     	;# 
  2041  049B                     	;# 
  2042  049C                     	;# 
  2043  049D                     	;# 
  2044  049E                     	;# 
  2045  049F                     	;# 
  2046  0611                     	;# 
  2047  0612                     	;# 
  2048  0613                     	;# 
  2049  0613                     	;# 
  2050  0614                     	;# 
  2051  0615                     	;# 
  2052  0616                     	;# 
  2053  0616                     	;# 
  2054  0617                     	;# 
  2055  0618                     	;# 
  2056  0619                     	;# 
  2057  0619                     	;# 
  2058  061A                     	;# 
  2059  061B                     	;# 
  2060  061C                     	;# 
  2061  061C                     	;# 
  2062  0691                     	;# 
  2063  0692                     	;# 
  2064  0693                     	;# 
  2065  0694                     	;# 
  2066  0695                     	;# 
  2067  0F0F                     	;# 
  2068  0F10                     	;# 
  2069  0F11                     	;# 
  2070  0F12                     	;# 
  2071  0F13                     	;# 
  2072  0F14                     	;# 
  2073  0F15                     	;# 
  2074  0F16                     	;# 
  2075  0F17                     	;# 
  2076  0F18                     	;# 
  2077  0F19                     	;# 
  2078  0F1A                     	;# 
  2079  0F1B                     	;# 
  2080  0F1C                     	;# 
  2081  0F1D                     	;# 
  2082  0F1E                     	;# 
  2083  0F1F                     	;# 
  2084  0F20                     	;# 
  2085  0F21                     	;# 
  2086  0F22                     	;# 
  2087  0F23                     	;# 
  2088  0F24                     	;# 
  2089  0F25                     	;# 
  2090  0F26                     	;# 
  2091  0F27                     	;# 
  2092  0F28                     	;# 
  2093  0F29                     	;# 
  2094  0F2A                     	;# 
  2095  0F2B                     	;# 
  2096  0F2C                     	;# 
  2097  0F2D                     	;# 
  2098  0F2E                     	;# 
  2099  0F2F                     	;# 
  2100  0F8C                     	;# 
  2101  0F8D                     	;# 
  2102  0F91                     	;# 
  2103  0F95                     	;# 
  2104  0F96                     	;# 
  2105  0F97                     	;# 
  2106  0F9C                     	;# 
  2107  0F9D                     	;# 
  2108  0F9E                     	;# 
  2109  0FE3                     	;# 
  2110  0FE4                     	;# 
  2111  0FE5                     	;# 
  2112  0FE6                     	;# 
  2113  0FE7                     	;# 
  2114  0FE8                     	;# 
  2115  0FE9                     	;# 
  2116  0FEA                     	;# 
  2117  0FEB                     	;# 
  2118  0FED                     	;# 
  2119  0FEE                     	;# 
  2120  0FEF                     	;# 
  2121                           
  2122                           	psect	idataCOMMON
  2123  06AF                     __pidataCOMMON:	
  2124                           
  2125                           ;initializer for AutoMode@flag
  2126  06AF  3401               	retlw	1
  2127  0015                     _TMR0	set	21
  2128  001B                     _PR2	set	27
  2129  001A                     _TMR2	set	26
  2130  001C                     _T2CONbits	set	28
  2131  0019                     _T1GCONbits	set	25
  2132  0018                     _T1CONbits	set	24
  2133  0011                     _PIR1bits	set	17
  2134  000B                     _INTCONbits	set	11
  2135  006F                     _RB7	set	111
  2136  008B                     _SSP1IF	set	139
  2137  009A                     _OSCSTATbits	set	154
  2138  0099                     _OSCCONbits	set	153
  2139  0091                     _PIE1bits	set	145
  2140  0095                     _OPTION_REG	set	149
  2141  008E                     _TRISCbits	set	142
  2142  008D                     _TRISBbits	set	141
  2143  008C                     _TRISAbits	set	140
  2144  010E                     _LATCbits	set	270
  2145  010C                     _LATAbits	set	268
  2146  018E                     _ANSELC	set	398
  2147  018D                     _ANSELB	set	397
  2148  018C                     _ANSELA	set	396
  2149  0211                     _SSP1BUF	set	529
  2150  0216                     _SSP1CON2bits	set	534
  2151  0212                     _SSP1ADD	set	530
  2152  0217                     _SSP1CON3bits	set	535
  2153  0215                     _SSP1CON1bits	set	533
  2154  0214                     _SSP1STATbits	set	532
  2155  020D                     _WPUBbits	set	525
  2156  0396                     _IOCBFbits	set	918
  2157  0396                     _IOCBF	set	918
  2158  0393                     _IOCAF	set	915
  2159  0394                     _IOCBPbits	set	916
  2160  0395                     _IOCBNbits	set	917
  2161  061A                     _PWM4DCL	set	1562
  2162  061B                     _PWM4DCH	set	1563
  2163  061C                     _PWM4CONbits	set	1564
  2164  0617                     _PWM3DCL	set	1559
  2165  0618                     _PWM3DCH	set	1560
  2166  0619                     _PWM3CONbits	set	1561
  2167  0614                     _PWM2DCL	set	1556
  2168  0615                     _PWM2DCH	set	1557
  2169  0616                     _PWM2CONbits	set	1558
  2170  0611                     _PWM1DCL	set	1553
  2171  0612                     _PWM1DCH	set	1554
  2172  0613                     _PWM1CONbits	set	1555
  2173                           
  2174                           ; #config settings
  2175  0000                     
  2176                           	psect	cinit
  2177  001F                     start_initialization:	
  2178  001F                     __initialization:	
  2179                           
  2180                           ; Initialize objects allocated to COMMON
  2181  001F  3186  26AF  3180   	fcall	__pidataCOMMON	;fetch initializer
  2182  0022  00FC               	movwf	__pdataCOMMON& (0+127)
  2183                           
  2184                           ; Clear objects allocated to COMMON
  2185  0023  01F9               	clrf	__pbssCOMMON& (0+127)
  2186  0024  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  2187  0025  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  2188                           
  2189                           ; Clear objects allocated to BANK0
  2190  0026  3020               	movlw	low __pbssBANK0
  2191  0027  0084               	movwf	4
  2192  0028  3000               	movlw	high __pbssBANK0
  2193  0029  0085               	movwf	5
  2194  002A  302F               	movlw	47
  2195  002B  3186  268E         	fcall	clear_ram0
  2196  002D                     end_of_initialization:	
  2197                           ;End of C runtime variable initialization code
  2198                           
  2199  002D                     __end_of__initialization:	
  2200  002D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2201  002E  0020               	movlb	0
  2202  002F  3185  2D3F         	ljmp	_main	;jump to C main() function
  2203                           
  2204                           	psect	bssCOMMON
  2205  0079                     __pbssCOMMON:	
  2206  0079                     Decode@index:	
  2207  0079                     	ds	1
  2208  007A                     Decode@rcv:	
  2209  007A                     	ds	1
  2210  007B                     Decode@state:	
  2211  007B                     	ds	1
  2212                           
  2213                           	psect	dataCOMMON
  2214  007C                     __pdataCOMMON:	
  2215  007C                     AutoMode@flag:	
  2216  007C                     	ds	1
  2217                           
  2218                           	psect	bssBANK0
  2219  0020                     __pbssBANK0:	
  2220  0020                     _gLedRunPara:	
  2221  0020                     	ds	14
  2222  002E                     _gCurrentTime:	
  2223  002E                     	ds	4
  2224  0032                     _gRunPara:	
  2225  0032                     	ds	3
  2226  0035                     _gRunState:	
  2227  0035                     	ds	1
  2228  0036                     _IR_ReveiveDataStructure:	
  2229  0036                     	ds	14
  2230  0044                     _gLedPara:	
  2231  0044                     	ds	11
  2232                           
  2233                           	psect	clrtext
  2234  068E                     clear_ram0:	
  2235                           ;	Called with FSR0 containing the base address, and
  2236                           ;	WREG with the size to clear
  2237                           
  2238  068E  0064               	clrwdt	;clear the watchdog before getting into this loop
  2239  068F                     clrloop0:	
  2240  068F  0180               	clrf	0	;clear RAM location pointed to by FSR
  2241  0690  3101               	addfsr 0,1
  2242  0691  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2243  0692  2E8F               	goto	clrloop0	;have we reached the end yet?
  2244  0693  3400               	retlw	0	;all done for this memory range, return
  2245                           
  2246                           	psect	cstackCOMMON
  2247  0070                     __pcstackCOMMON:	
  2248  0070                     ?_SYSTEM_Initialize:	
  2249  0070                     ?_LedParaInit:	
  2250                           ; 1 bytes @ 0x0
  2251                           
  2252  0070                     ?_TMR1_StartTimer:	
  2253                           ; 1 bytes @ 0x0
  2254                           
  2255  0070                     ?_TMR2_StartTimer:	
  2256                           ; 1 bytes @ 0x0
  2257                           
  2258  0070                     ?_LedUpdate:	
  2259                           ; 1 bytes @ 0x0
  2260                           
  2261  0070                     ?_UpdateRTC:	
  2262                           ; 1 bytes @ 0x0
  2263                           
  2264  0070                     ?_manualMode:	
  2265                           ; 1 bytes @ 0x0
  2266                           
  2267  0070                     ?_AutoMode:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270  0070                     ?_Decode:	
  2271                           ; 1 bytes @ 0x0
  2272                           
  2273  0070                     ?_RunRTC:	
  2274                           ; 1 bytes @ 0x0
  2275                           
  2276  0070                     ??_RunRTC:	
  2277                           ; 1 bytes @ 0x0
  2278                           
  2279  0070                     ?_main:	
  2280                           ; 1 bytes @ 0x0
  2281                           
  2282  0070                     ?_PIN_Initialize:	
  2283                           ; 1 bytes @ 0x0
  2284                           
  2285  0070                     ?_PWM1_Initialize:	
  2286                           ; 1 bytes @ 0x0
  2287                           
  2288  0070                     ?_PWM1_Enable:	
  2289                           ; 1 bytes @ 0x0
  2290                           
  2291  0070                     ?_PWM1_Disable:	
  2292                           ; 1 bytes @ 0x0
  2293                           
  2294  0070                     ?_PWM2_Initialize:	
  2295                           ; 1 bytes @ 0x0
  2296                           
  2297  0070                     ?_PWM2_Enable:	
  2298                           ; 1 bytes @ 0x0
  2299                           
  2300  0070                     ?_PWM2_Disable:	
  2301                           ; 1 bytes @ 0x0
  2302                           
  2303  0070                     ?_PWM3_Initialize:	
  2304                           ; 1 bytes @ 0x0
  2305                           
  2306  0070                     ?_PWM4_Initialize:	
  2307                           ; 1 bytes @ 0x0
  2308                           
  2309  0070                     ?_TMR0_Initialize:	
  2310                           ; 1 bytes @ 0x0
  2311                           
  2312  0070                     ?_TMR1_Initialize:	
  2313                           ; 1 bytes @ 0x0
  2314                           
  2315  0070                     ?_TMR2_Initialize:	
  2316                           ; 1 bytes @ 0x0
  2317                           
  2318  0070                     ?_I2C_Initialize:	
  2319                           ; 1 bytes @ 0x0
  2320                           
  2321  0070                     ?_CheckSSPIF:	
  2322                           ; 1 bytes @ 0x0
  2323                           
  2324  0070                     ?_InterruptOnChange_Initialize:	
  2325                           ; 1 bytes @ 0x0
  2326                           
  2327  0070                     ?_OSCCON_Initialize:	
  2328                           ; 1 bytes @ 0x0
  2329                           
  2330  0070                     ?_INTERRUPT_interruptManager:	
  2331                           ; 1 bytes @ 0x0
  2332                           
  2333  0070                     ?_CheckSum:	
  2334                           ; 1 bytes @ 0x0
  2335                           
  2336  0070                     ?_UpdatePWM:	
  2337                           ; 1 bytes @ 0x0
  2338                           
  2339  0070                     ?_SaveLedPara:	
  2340                           ; 1 bytes @ 0x0
  2341                           
  2342  0070                     ?_LedUpdatePara:	
  2343                           ; 1 bytes @ 0x0
  2344                           
  2345  0070                     ?_TimeChangeSec:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348  0070                     CheckSum@len:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351                           
  2352                           ; 1 bytes @ 0x0
  2353  0070                     	ds	1
  2354  0071                     ??_CheckSum:	
  2355                           
  2356                           ; 1 bytes @ 0x1
  2357  0071                     	ds	2
  2358  0073                     CheckSum@pbuf:	
  2359                           
  2360                           ; 1 bytes @ 0x3
  2361  0073                     	ds	1
  2362  0074                     CheckSum@result:	
  2363                           
  2364                           ; 1 bytes @ 0x4
  2365  0074                     	ds	1
  2366  0075                     CheckSum@i:	
  2367                           
  2368                           ; 1 bytes @ 0x5
  2369  0075                     	ds	1
  2370  0076                     ??_Decode:	
  2371                           
  2372                           ; 1 bytes @ 0x6
  2373  0076                     	ds	2
  2374  0078                     ??_INTERRUPT_interruptManager:	
  2375                           
  2376                           ; 1 bytes @ 0x8
  2377  0078                     	ds	1
  2378                           
  2379                           	psect	cstackBANK0
  2380  004F                     __pcstackBANK0:	
  2381  004F                     ??_SYSTEM_Initialize:	
  2382  004F                     ??_TMR1_StartTimer:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385  004F                     ??_TMR2_StartTimer:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388  004F                     ??_UpdateRTC:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391  004F                     ??_PIN_Initialize:	
  2392                           ; 1 bytes @ 0x0
  2393                           
  2394  004F                     ??_PWM1_Initialize:	
  2395                           ; 1 bytes @ 0x0
  2396                           
  2397  004F                     ??_PWM1_Enable:	
  2398                           ; 1 bytes @ 0x0
  2399                           
  2400  004F                     ??_PWM1_Disable:	
  2401                           ; 1 bytes @ 0x0
  2402                           
  2403  004F                     ?_PWM1_LoadDutyValue:	
  2404                           ; 1 bytes @ 0x0
  2405                           
  2406  004F                     ??_PWM2_Initialize:	
  2407                           ; 1 bytes @ 0x0
  2408                           
  2409  004F                     ??_PWM2_Enable:	
  2410                           ; 1 bytes @ 0x0
  2411                           
  2412  004F                     ??_PWM2_Disable:	
  2413                           ; 1 bytes @ 0x0
  2414                           
  2415  004F                     ?_PWM2_LoadDutyValue:	
  2416                           ; 1 bytes @ 0x0
  2417                           
  2418  004F                     ??_PWM3_Initialize:	
  2419                           ; 1 bytes @ 0x0
  2420                           
  2421  004F                     ??_PWM4_Initialize:	
  2422                           ; 1 bytes @ 0x0
  2423                           
  2424  004F                     ??_TMR0_Initialize:	
  2425                           ; 1 bytes @ 0x0
  2426                           
  2427  004F                     ??_TMR1_Initialize:	
  2428                           ; 1 bytes @ 0x0
  2429                           
  2430  004F                     ??_TMR2_Initialize:	
  2431                           ; 1 bytes @ 0x0
  2432                           
  2433  004F                     ??_I2C_Initialize:	
  2434                           ; 1 bytes @ 0x0
  2435                           
  2436  004F                     ??_CheckSSPIF:	
  2437                           ; 1 bytes @ 0x0
  2438                           
  2439  004F                     ?_I2C_WriteBuffer:	
  2440                           ; 1 bytes @ 0x0
  2441                           
  2442  004F                     ?_I2C_ReadBuffer:	
  2443                           ; 1 bytes @ 0x0
  2444                           
  2445  004F                     ??_InterruptOnChange_Initialize:	
  2446                           ; 1 bytes @ 0x0
  2447                           
  2448  004F                     ??_OSCCON_Initialize:	
  2449                           ; 1 bytes @ 0x0
  2450                           
  2451  004F                     ?___wmul:	
  2452                           ; 1 bytes @ 0x0
  2453                           
  2454  004F                     I2C_WriteBuffer@pbuf:	
  2455                           ; 2 bytes @ 0x0
  2456                           
  2457  004F                     I2C_ReadBuffer@pbuf:	
  2458                           ; 1 bytes @ 0x0
  2459                           
  2460  004F                     PWM1_LoadDutyValue@dutyValue:	
  2461                           ; 1 bytes @ 0x0
  2462                           
  2463  004F                     PWM2_LoadDutyValue@dutyValue:	
  2464                           ; 2 bytes @ 0x0
  2465                           
  2466  004F                     ___wmul@multiplier:	
  2467                           ; 2 bytes @ 0x0
  2468                           
  2469                           
  2470                           ; 2 bytes @ 0x0
  2471  004F                     	ds	1
  2472  0050                     I2C_WriteBuffer@len:	
  2473  0050                     I2C_ReadBuffer@len:	
  2474                           ; 1 bytes @ 0x1
  2475                           
  2476                           
  2477                           ; 1 bytes @ 0x1
  2478  0050                     	ds	1
  2479  0051                     ??_PWM1_LoadDutyValue:	
  2480  0051                     ??_PWM2_LoadDutyValue:	
  2481                           ; 1 bytes @ 0x2
  2482                           
  2483  0051                     ??_I2C_WriteBuffer:	
  2484                           ; 1 bytes @ 0x2
  2485                           
  2486  0051                     ??_I2C_ReadBuffer:	
  2487                           ; 1 bytes @ 0x2
  2488                           
  2489  0051                     ___wmul@multiplicand:	
  2490                           ; 1 bytes @ 0x2
  2491                           
  2492                           
  2493                           ; 2 bytes @ 0x2
  2494  0051                     	ds	1
  2495  0052                     I2C_WriteBuffer@suba:	
  2496                           
  2497                           ; 1 bytes @ 0x3
  2498  0052                     	ds	1
  2499  0053                     ??_UpdatePWM:	
  2500  0053                     ??_LedUpdatePara:	
  2501                           ; 1 bytes @ 0x4
  2502                           
  2503  0053                     ??___wmul:	
  2504                           ; 1 bytes @ 0x4
  2505                           
  2506  0053                     I2C_WriteBuffer@n:	
  2507                           ; 1 bytes @ 0x4
  2508                           
  2509  0053                     I2C_ReadBuffer@suba:	
  2510                           ; 1 bytes @ 0x4
  2511                           
  2512  0053                     ___wmul@product:	
  2513                           ; 1 bytes @ 0x4
  2514                           
  2515                           
  2516                           ; 2 bytes @ 0x4
  2517  0053                     	ds	1
  2518  0054                     I2C_WriteBuffer@i:	
  2519  0054                     I2C_ReadBuffer@n:	
  2520                           ; 1 bytes @ 0x5
  2521                           
  2522                           
  2523                           ; 1 bytes @ 0x5
  2524  0054                     	ds	1
  2525  0055                     ??_SaveLedPara:	
  2526  0055                     ??_TimeChangeSec:	
  2527                           ; 1 bytes @ 0x6
  2528                           
  2529  0055                     I2C_ReadBuffer@i:	
  2530                           ; 1 bytes @ 0x6
  2531                           
  2532                           
  2533                           ; 1 bytes @ 0x6
  2534  0055                     	ds	1
  2535  0056                     ??_LedParaInit:	
  2536                           
  2537                           ; 1 bytes @ 0x7
  2538  0056                     	ds	1
  2539  0057                     _SaveLedPara$1168:	
  2540                           
  2541                           ; 2 bytes @ 0x8
  2542  0057                     	ds	1
  2543  0058                     LedParaInit@i:	
  2544                           
  2545                           ; 1 bytes @ 0x9
  2546  0058                     	ds	1
  2547  0059                     SaveLedPara@pbuf:	
  2548  0059                     LedUpdatePara@i:	
  2549                           ; 1 bytes @ 0xA
  2550                           
  2551                           
  2552                           ; 1 bytes @ 0xA
  2553  0059                     	ds	1
  2554  005A                     ??_manualMode:	
  2555  005A                     SaveLedPara@offset:	
  2556                           ; 1 bytes @ 0xB
  2557                           
  2558                           
  2559                           ; 1 bytes @ 0xB
  2560  005A                     	ds	1
  2561  005B                     SaveLedPara@cnt:	
  2562  005B                     _TimeChangeSec$1560:	
  2563                           ; 1 bytes @ 0xC
  2564                           
  2565                           
  2566                           ; 2 bytes @ 0xC
  2567  005B                     	ds	1
  2568  005C                     SaveLedPara@len:	
  2569                           
  2570                           ; 1 bytes @ 0xD
  2571  005C                     	ds	1
  2572  005D                     ??_LedUpdate:	
  2573  005D                     ??_AutoMode:	
  2574                           ; 1 bytes @ 0xE
  2575                           
  2576                           
  2577                           ; 1 bytes @ 0xE
  2578  005D                     	ds	1
  2579  005E                     LedUpdate@i:	
  2580                           
  2581                           ; 1 bytes @ 0xF
  2582  005E                     	ds	6
  2583  0064                     AutoMode@dTime:	
  2584                           
  2585                           ; 2 bytes @ 0x15
  2586  0064                     	ds	2
  2587  0066                     AutoMode@pstartBright:	
  2588                           
  2589                           ; 1 bytes @ 0x17
  2590  0066                     	ds	1
  2591  0067                     AutoMode@pendBright:	
  2592                           
  2593                           ; 1 bytes @ 0x18
  2594  0067                     	ds	1
  2595  0068                     AutoMode@i:	
  2596                           
  2597                           ; 1 bytes @ 0x19
  2598  0068                     	ds	1
  2599  0069                     ??_main:	
  2600                           
  2601                           	psect	maintext
  2602  053F                     __pmaintext:	
  2603                           ; 1 bytes @ 0x1A
  2604 ;;
  2605 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2606 ;;
  2607 ;; *************** function _main *****************
  2608 ;; Defined at:
  2609 ;;		line 35 in file "main.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;		None
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;		None
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      void 
  2616 ;; Registers used:
  2617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : B1F/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2623 ;;      Params:         0       0       0       0
  2624 ;;      Locals:         0       0       0       0
  2625 ;;      Temps:          0       0       0       0
  2626 ;;      Totals:         0       0       0       0
  2627 ;;Total ram usage:        0 bytes
  2628 ;; Hardware stack levels required when called:    7
  2629 ;; This function calls:
  2630 ;;		_AutoMode
  2631 ;;		_LedParaInit
  2632 ;;		_LedUpdate
  2633 ;;		_SYSTEM_Initialize
  2634 ;;		_TMR1_StartTimer
  2635 ;;		_TMR2_StartTimer
  2636 ;;		_UpdateRTC
  2637 ;;		_manualMode
  2638 ;; This function is called by:
  2639 ;;		Startup code after reset
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           
  2644                           ;psect for function _main
  2645  053F                     _main:	
  2646                           
  2647                           ;main.c: 37: SYSTEM_Initialize();
  2648                           
  2649                           ;incstack = 0
  2650                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2651  053F  3185  2567  3185   	fcall	_SYSTEM_Initialize
  2652                           
  2653                           ;main.c: 38: LedParaInit();
  2654  0542  3183  23C0  3185   	fcall	_LedParaInit
  2655                           
  2656                           ;main.c: 40: TMR1_StartTimer();
  2657  0545  3186  26A6  3185   	fcall	_TMR1_StartTimer
  2658                           
  2659                           ;main.c: 41: TMR2_StartTimer();
  2660  0548  3186  26A3  3185   	fcall	_TMR2_StartTimer
  2661                           
  2662                           ;main.c: 43: (INTCONbits.GIE = 1);
  2663  054B  178B               	bsf	11,7	;volatile
  2664                           
  2665                           ;main.c: 44: (INTCONbits.PEIE = 1);
  2666  054C  170B               	bsf	11,6	;volatile
  2667  054D                     l27:	
  2668                           ;main.c: 46: while(1)
  2669                           
  2670  054D  0064               	clrwdt	;# 
  2671                           
  2672                           ;main.c: 49: if(gRunState.fRecKey)
  2673  054E  0020               	movlb	0	; select bank0
  2674  054F  1C35               	btfss	_gRunState,0
  2675  0550  2D58               	goto	l2098
  2676                           
  2677                           ;main.c: 50: {
  2678                           ;main.c: 51: gRunState.fRecKey = 0;
  2679  0551  1035               	bcf	_gRunState,0
  2680                           
  2681                           ;main.c: 52: LedUpdate();
  2682  0552  3184  241D  3185   	fcall	_LedUpdate
  2683                           
  2684                           ;main.c: 53: UpdateRTC();
  2685  0555  3186  264F  3185   	fcall	_UpdateRTC
  2686  0558                     l2098:	
  2687                           
  2688                           ;main.c: 54: }
  2689                           ;main.c: 55: if(PIR1bits.TMR2IF)
  2690  0558  0020               	movlb	0	; select bank0
  2691  0559  1C91               	btfss	17,1	;volatile
  2692  055A  2D5F               	goto	l2104
  2693                           
  2694                           ;main.c: 56: {
  2695                           ;main.c: 57: PIR1bits.TMR2IF = 0;
  2696  055B  1091               	bcf	17,1	;volatile
  2697                           
  2698                           ;main.c: 58: manualMode();
  2699  055C  3184  24C0  3185   	fcall	_manualMode
  2700  055F                     l2104:	
  2701                           
  2702                           ;main.c: 59: }
  2703                           ;main.c: 60: if(gCurrentTime.datatime.fSec)
  2704  055F  0020               	movlb	0	; select bank0
  2705  0560  1C2E               	btfss	_gCurrentTime,0	;volatile
  2706  0561  2D4D               	goto	l27
  2707                           
  2708                           ;main.c: 61: {
  2709                           ;main.c: 62: gCurrentTime.datatime.fSec = 0;
  2710  0562  102E               	bcf	_gCurrentTime,0	;volatile
  2711                           
  2712                           ;main.c: 63: AutoMode();
  2713  0563  3180  2031  3185   	fcall	_AutoMode
  2714  0566  2D4D               	goto	l27
  2715  0567                     __end_of_main:	
  2716                           
  2717                           	psect	text1
  2718  04C0                     __ptext1:	
  2719 ;; *************** function _manualMode *****************
  2720 ;; Defined at:
  2721 ;;		line 82 in file "led.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;		None
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  i               1    0        unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2735 ;;      Params:         0       0       0       0
  2736 ;;      Locals:         0       0       0       0
  2737 ;;      Temps:          0       2       0       0
  2738 ;;      Totals:         0       2       0       0
  2739 ;;Total ram usage:        2 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    6
  2742 ;; This function calls:
  2743 ;;		_LedUpdatePara
  2744 ;;		_PWM1_Disable
  2745 ;;		_PWM1_Enable
  2746 ;;		_PWM2_Disable
  2747 ;;		_PWM2_Enable
  2748 ;;		___wmul
  2749 ;; This function is called by:
  2750 ;;		_main
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           
  2755                           ;psect for function _manualMode
  2756  04C0                     _manualMode:	
  2757                           
  2758                           ;led.c: 84: unsigned char i;
  2759                           ;led.c: 85: if(gLedPara.fAuto)
  2760                           
  2761                           ;incstack = 0
  2762                           ; Regs used in _manualMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2763  04C0  0020               	movlb	0	; select bank0
  2764  04C1  1C44               	btfss	_gLedPara,0
  2765  04C2  0008               	return
  2766                           
  2767                           ;led.c: 86: {
  2768                           ;led.c: 87: if (gLedPara.fWhiteOn)
  2769  04C3  1CC4               	btfss	_gLedPara,1
  2770  04C4  2CDD               	goto	l1914
  2771                           
  2772                           ;led.c: 88: {
  2773                           ;led.c: 89: PWM1_Enable();
  2774  04C5  3186  26AC  3184   	fcall	_PWM1_Enable
  2775                           
  2776                           ;led.c: 90: gLedRunPara.nTargetLum[0] = (unsigned int)gLedPara.bright[0] * 10;
  2777  04C8  0020               	movlb	0	; select bank0
  2778  04C9  0845               	movf	_gLedPara+1,w
  2779  04CA  00DA               	movwf	??_manualMode
  2780  04CB  01DB               	clrf	??_manualMode+1
  2781  04CC  085A               	movf	??_manualMode,w
  2782  04CD  00CF               	movwf	___wmul@multiplier
  2783  04CE  085B               	movf	??_manualMode+1,w
  2784  04CF  00D0               	movwf	___wmul@multiplier+1
  2785  04D0  300A               	movlw	10
  2786  04D1  00D1               	movwf	___wmul@multiplicand
  2787  04D2  3000               	movlw	0
  2788  04D3  00D2               	movwf	___wmul@multiplicand+1
  2789  04D4  3185  25A5  3184   	fcall	___wmul
  2790  04D7  0020               	movlb	0	; select bank0
  2791  04D8  0850               	movf	?___wmul+1,w
  2792  04D9  00A7               	movwf	_gLedRunPara+7
  2793  04DA  084F               	movf	?___wmul,w
  2794  04DB  00A6               	movwf	_gLedRunPara+6
  2795                           
  2796                           ;led.c: 91: }
  2797  04DC  2CE3               	goto	l1918
  2798  04DD                     l1914:	
  2799                           
  2800                           ;led.c: 92: else
  2801                           ;led.c: 93: {
  2802                           ;led.c: 94: PWM1_Disable();
  2803  04DD  3186  26A0  3184   	fcall	_PWM1_Disable
  2804                           
  2805                           ;led.c: 95: gLedRunPara.nTargetLum[0] = 0;
  2806  04E0  0020               	movlb	0	; select bank0
  2807  04E1  01A6               	clrf	_gLedRunPara+6
  2808  04E2  01A7               	clrf	_gLedRunPara+7
  2809  04E3                     l1918:	
  2810                           
  2811                           ;led.c: 96: }
  2812                           ;led.c: 97: if (gLedPara.fBlueOn)
  2813  04E3  1D44               	btfss	_gLedPara,2
  2814  04E4  2CFD               	goto	l1924
  2815                           
  2816                           ;led.c: 98: {
  2817                           ;led.c: 99: PWM2_Enable();
  2818  04E5  3186  26A9  3184   	fcall	_PWM2_Enable
  2819                           
  2820                           ;led.c: 100: gLedRunPara.nTargetLum[1] = (unsigned int)gLedPara.bright[1] * 10;
  2821  04E8  0020               	movlb	0	; select bank0
  2822  04E9  0846               	movf	_gLedPara+2,w
  2823  04EA  00DA               	movwf	??_manualMode
  2824  04EB  01DB               	clrf	??_manualMode+1
  2825  04EC  085A               	movf	??_manualMode,w
  2826  04ED  00CF               	movwf	___wmul@multiplier
  2827  04EE  085B               	movf	??_manualMode+1,w
  2828  04EF  00D0               	movwf	___wmul@multiplier+1
  2829  04F0  300A               	movlw	10
  2830  04F1  00D1               	movwf	___wmul@multiplicand
  2831  04F2  3000               	movlw	0
  2832  04F3  00D2               	movwf	___wmul@multiplicand+1
  2833  04F4  3185  25A5  3184   	fcall	___wmul
  2834  04F7  0020               	movlb	0	; select bank0
  2835  04F8  0850               	movf	?___wmul+1,w
  2836  04F9  00A9               	movwf	_gLedRunPara+9
  2837  04FA  084F               	movf	?___wmul,w
  2838  04FB  00A8               	movwf	_gLedRunPara+8
  2839                           
  2840                           ;led.c: 101: }
  2841  04FC  2D03               	goto	l1928
  2842  04FD                     l1924:	
  2843                           
  2844                           ;led.c: 102: else
  2845                           ;led.c: 103: {
  2846                           ;led.c: 104: PWM2_Disable();
  2847  04FD  3186  269D  3184   	fcall	_PWM2_Disable
  2848                           
  2849                           ;led.c: 105: gLedRunPara.nTargetLum[1] = 0;
  2850  0500  0020               	movlb	0	; select bank0
  2851  0501  01A8               	clrf	_gLedRunPara+8
  2852  0502  01A9               	clrf	_gLedRunPara+9
  2853  0503                     l1928:	
  2854                           
  2855                           ;led.c: 106: }
  2856                           ;led.c: 107: LedUpdatePara();
  2857  0503  3183  2352         	fcall	_LedUpdatePara
  2858  0505  0008               	return
  2859  0506                     __end_of_manualMode:	
  2860                           
  2861                           	psect	text2
  2862  069D                     __ptext2:	
  2863 ;; *************** function _PWM2_Disable *****************
  2864 ;; Defined at:
  2865 ;;		line 38 in file "pwm.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		None
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2879 ;;      Params:         0       0       0       0
  2880 ;;      Locals:         0       0       0       0
  2881 ;;      Temps:          0       0       0       0
  2882 ;;      Totals:         0       0       0       0
  2883 ;;Total ram usage:        0 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    3
  2886 ;; This function calls:
  2887 ;;		Nothing
  2888 ;; This function is called by:
  2889 ;;		_manualMode
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           
  2894                           ;psect for function _PWM2_Disable
  2895  069D                     _PWM2_Disable:	
  2896                           
  2897                           ;pwm.c: 40: PWM2CONbits.PWM2EN = 0;
  2898                           
  2899                           ;incstack = 0
  2900                           ; Regs used in _PWM2_Disable: []
  2901  069D  002C               	movlb	12	; select bank12
  2902  069E  1396               	bcf	22,7	;volatile
  2903  069F  0008               	return
  2904  06A0                     __end_of_PWM2_Disable:	
  2905                           
  2906                           	psect	text3
  2907  06A0                     __ptext3:	
  2908 ;; *************** function _PWM1_Disable *****************
  2909 ;; Defined at:
  2910 ;;		line 16 in file "pwm.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  1    wreg      void 
  2917 ;; Registers used:
  2918 ;;		None
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2924 ;;      Params:         0       0       0       0
  2925 ;;      Locals:         0       0       0       0
  2926 ;;      Temps:          0       0       0       0
  2927 ;;      Totals:         0       0       0       0
  2928 ;;Total ram usage:        0 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    3
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_manualMode
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           
  2939                           ;psect for function _PWM1_Disable
  2940  06A0                     _PWM1_Disable:	
  2941                           
  2942                           ;pwm.c: 18: PWM1CONbits.PWM1EN = 0;
  2943                           
  2944                           ;incstack = 0
  2945                           ; Regs used in _PWM1_Disable: []
  2946  06A0  002C               	movlb	12	; select bank12
  2947  06A1  1393               	bcf	19,7	;volatile
  2948  06A2  0008               	return
  2949  06A3                     __end_of_PWM1_Disable:	
  2950                           
  2951                           	psect	text4
  2952  0352                     __ptext4:	
  2953 ;; *************** function _LedUpdatePara *****************
  2954 ;; Defined at:
  2955 ;;		line 61 in file "led.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  i               1   10[BANK0 ] unsigned char 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2969 ;;      Params:         0       0       0       0
  2970 ;;      Locals:         0       1       0       0
  2971 ;;      Temps:          0       6       0       0
  2972 ;;      Totals:         0       7       0       0
  2973 ;;Total ram usage:        7 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    5
  2976 ;; This function calls:
  2977 ;;		_UpdatePWM
  2978 ;; This function is called by:
  2979 ;;		_manualMode
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           
  2984                           ;psect for function _LedUpdatePara
  2985  0352                     _LedUpdatePara:	
  2986                           
  2987                           ;led.c: 63: unsigned char i;
  2988                           ;led.c: 65: for (i = 0; i < 2; i++)
  2989                           
  2990                           ;incstack = 0
  2991                           ; Regs used in _LedUpdatePara: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2992  0352  0020               	movlb	0	; select bank0
  2993  0353  01D9               	clrf	LedUpdatePara@i
  2994  0354  3002               	movlw	2
  2995  0355  0259               	subwf	LedUpdatePara@i,w
  2996  0356  1803               	btfsc	3,0
  2997  0357  2BBD               	goto	l1820
  2998  0358                     l1806:	
  2999                           
  3000                           ;led.c: 66: {
  3001                           ;led.c: 67: if (gLedRunPara.nCurrentLum[i] + 1 < gLedRunPara.nTargetLum[i])
  3002  0358  3559               	lslf	LedUpdatePara@i,w
  3003  0359  3E26               	addlw	(low ((_gLedRunPara| 0+6)))& (0+255)
  3004  035A  0086               	movwf	6
  3005  035B  0187               	clrf	7
  3006  035C  3F40               	moviw [0]fsr1
  3007  035D  00D3               	movwf	??_LedUpdatePara
  3008  035E  3F41               	moviw [1]fsr1
  3009  035F  00D4               	movwf	??_LedUpdatePara+1
  3010  0360  3559               	lslf	LedUpdatePara@i,w
  3011  0361  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  3012  0362  0086               	movwf	6
  3013  0363  0187               	clrf	7
  3014  0364  3F40               	moviw [0]fsr1
  3015  0365  00D5               	movwf	??_LedUpdatePara+2
  3016  0366  3F41               	moviw [1]fsr1
  3017  0367  00D6               	movwf	??_LedUpdatePara+3
  3018  0368  0855               	movf	??_LedUpdatePara+2,w
  3019  0369  3E01               	addlw	1
  3020  036A  00D7               	movwf	??_LedUpdatePara+4
  3021  036B  3000               	movlw	0
  3022  036C  3D56               	addwfc	??_LedUpdatePara+3,w
  3023  036D  00D8               	movwf	??_LedUpdatePara+5
  3024  036E  0854               	movf	??_LedUpdatePara+1,w
  3025  036F  0258               	subwf	??_LedUpdatePara+5,w
  3026  0370  1D03               	skipz
  3027  0371  2B74               	goto	u1115
  3028  0372  0853               	movf	??_LedUpdatePara,w
  3029  0373  0257               	subwf	??_LedUpdatePara+4,w
  3030  0374                     u1115:	
  3031  0374  1803               	skipnc
  3032  0375  2B80               	goto	l1810
  3033                           
  3034                           ;led.c: 68: {
  3035                           ;led.c: 69: gLedRunPara.nCurrentLum[i] += 1;
  3036  0376  3559               	lslf	LedUpdatePara@i,w
  3037  0377  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  3038  0378  0086               	movwf	6
  3039  0379  0187               	clrf	7
  3040  037A  3001               	movlw	1
  3041  037B  0781               	addwf	1,f
  3042  037C  3141               	addfsr 1,1
  3043  037D  1803               	skipnc
  3044  037E  0A81               	incf	1,f
  3045                           
  3046                           ;led.c: 70: }
  3047  037F  2BB5               	goto	l1816
  3048  0380                     l1810:	
  3049                           
  3050                           ;led.c: 71: else if (gLedRunPara.nCurrentLum[i] > gLedRunPara.nTargetLum[i] + 1)
  3051  0380  3559               	lslf	LedUpdatePara@i,w
  3052  0381  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  3053  0382  0086               	movwf	6
  3054  0383  0187               	clrf	7
  3055  0384  3F40               	moviw [0]fsr1
  3056  0385  00D3               	movwf	??_LedUpdatePara
  3057  0386  3F41               	moviw [1]fsr1
  3058  0387  00D4               	movwf	??_LedUpdatePara+1
  3059  0388  3559               	lslf	LedUpdatePara@i,w
  3060  0389  3E26               	addlw	(low ((_gLedRunPara| 0+6)))& (0+255)
  3061  038A  0086               	movwf	6
  3062  038B  0187               	clrf	7
  3063  038C  3F40               	moviw [0]fsr1
  3064  038D  00D5               	movwf	??_LedUpdatePara+2
  3065  038E  3F41               	moviw [1]fsr1
  3066  038F  00D6               	movwf	??_LedUpdatePara+3
  3067  0390  0855               	movf	??_LedUpdatePara+2,w
  3068  0391  3E01               	addlw	1
  3069  0392  00D7               	movwf	??_LedUpdatePara+4
  3070  0393  3000               	movlw	0
  3071  0394  3D56               	addwfc	??_LedUpdatePara+3,w
  3072  0395  00D8               	movwf	??_LedUpdatePara+5
  3073  0396  0854               	movf	??_LedUpdatePara+1,w
  3074  0397  0258               	subwf	??_LedUpdatePara+5,w
  3075  0398  1D03               	skipz
  3076  0399  2B9C               	goto	u1125
  3077  039A  0853               	movf	??_LedUpdatePara,w
  3078  039B  0257               	subwf	??_LedUpdatePara+4,w
  3079  039C                     u1125:	
  3080  039C  1803               	skipnc
  3081  039D  2BA9               	goto	l1814
  3082                           
  3083                           ;led.c: 72: {
  3084                           ;led.c: 73: gLedRunPara.nCurrentLum[i] -= 1;
  3085  039E  3559               	lslf	LedUpdatePara@i,w
  3086  039F  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  3087  03A0  0086               	movwf	6
  3088  03A1  0187               	clrf	7
  3089  03A2  3001               	movlw	1
  3090  03A3  0281               	subwf	1,f
  3091  03A4  3141               	addfsr 1,1
  3092  03A5  3000               	movlw	0
  3093  03A6  3B81               	subwfb	1,f
  3094  03A7  317F               	addfsr 1,-1
  3095                           
  3096                           ;led.c: 74: }
  3097  03A8  2BB5               	goto	l1816
  3098  03A9                     l1814:	
  3099                           
  3100                           ;led.c: 75: else
  3101                           ;led.c: 76: {
  3102                           ;led.c: 77: gLedRunPara.nCurrentLum[i] = gLedRunPara.nTargetLum[i];
  3103  03A9  3559               	lslf	LedUpdatePara@i,w
  3104  03AA  3E26               	addlw	(low ((_gLedRunPara| 0+6)))& (0+255)
  3105  03AB  0086               	movwf	6
  3106  03AC  0187               	clrf	7
  3107  03AD  3559               	lslf	LedUpdatePara@i,w
  3108  03AE  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  3109  03AF  0084               	movwf	4
  3110  03B0  0185               	clrf	5
  3111  03B1  3F40               	moviw [0]fsr1
  3112  03B2  3F80               	movwi [0]fsr0
  3113  03B3  3F41               	moviw [1]fsr1
  3114  03B4  3F81               	movwi [1]fsr0
  3115  03B5                     l1816:	
  3116  03B5  3001               	movlw	1
  3117  03B6  00D3               	movwf	??_LedUpdatePara
  3118  03B7  0853               	movf	??_LedUpdatePara,w
  3119  03B8  07D9               	addwf	LedUpdatePara@i,f
  3120  03B9  3002               	movlw	2
  3121  03BA  0259               	subwf	LedUpdatePara@i,w
  3122  03BB  1C03               	skipc
  3123  03BC  2B58               	goto	l1806
  3124  03BD                     l1820:	
  3125                           
  3126                           ;led.c: 78: }
  3127                           ;led.c: 79: }
  3128                           ;led.c: 80: UpdatePWM();
  3129  03BD  3186  2623         	fcall	_UpdatePWM
  3130  03BF  0008               	return
  3131  03C0                     __end_of_LedUpdatePara:	
  3132                           
  3133                           	psect	text5
  3134  064F                     __ptext5:	
  3135 ;; *************** function _UpdateRTC *****************
  3136 ;; Defined at:
  3137 ;;		line 6 in file "rtc.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;		None
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;		None
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3151 ;;      Params:         0       0       0       0
  3152 ;;      Locals:         0       0       0       0
  3153 ;;      Temps:          0       1       0       0
  3154 ;;      Totals:         0       1       0       0
  3155 ;;Total ram usage:        1 bytes
  3156 ;; Hardware stack levels used:    1
  3157 ;; Hardware stack levels required when called:    3
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_main
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           
  3166                           ;psect for function _UpdateRTC
  3167  064F                     _UpdateRTC:	
  3168                           
  3169                           ;rtc.c: 8: gCurrentTime.datatime.hour = IR_ReveiveDataStructure.TimeHour;
  3170                           
  3171                           ;incstack = 0
  3172                           ; Regs used in _UpdateRTC: [wreg]
  3173  064F  0020               	movlb	0	; select bank0
  3174  0650  0837               	movf	_IR_ReveiveDataStructure+1,w
  3175  0651  00CF               	movwf	??_UpdateRTC
  3176  0652  084F               	movf	??_UpdateRTC,w
  3177  0653  00B1               	movwf	_gCurrentTime+3	;volatile
  3178                           
  3179                           ;rtc.c: 9: gCurrentTime.datatime.minute = IR_ReveiveDataStructure.TimeMinute;
  3180  0654  0838               	movf	_IR_ReveiveDataStructure+2,w
  3181  0655  00CF               	movwf	??_UpdateRTC
  3182  0656  084F               	movf	??_UpdateRTC,w
  3183  0657  00B0               	movwf	_gCurrentTime+2	;volatile
  3184  0658  0008               	return
  3185  0659                     __end_of_UpdateRTC:	
  3186                           
  3187                           	psect	text6
  3188  06A3                     __ptext6:	
  3189 ;; *************** function _TMR2_StartTimer *****************
  3190 ;; Defined at:
  3191 ;;		line 35 in file "tmr.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;		None
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		None
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3205 ;;      Params:         0       0       0       0
  3206 ;;      Locals:         0       0       0       0
  3207 ;;      Temps:          0       0       0       0
  3208 ;;      Totals:         0       0       0       0
  3209 ;;Total ram usage:        0 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    3
  3212 ;; This function calls:
  3213 ;;		Nothing
  3214 ;; This function is called by:
  3215 ;;		_main
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           
  3220                           ;psect for function _TMR2_StartTimer
  3221  06A3                     _TMR2_StartTimer:	
  3222                           
  3223                           ;tmr.c: 37: T2CONbits.TMR2ON = 1;
  3224                           
  3225                           ;incstack = 0
  3226                           ; Regs used in _TMR2_StartTimer: []
  3227  06A3  0020               	movlb	0	; select bank0
  3228  06A4  151C               	bsf	28,2	;volatile
  3229  06A5  0008               	return
  3230  06A6                     __end_of_TMR2_StartTimer:	
  3231                           
  3232                           	psect	text7
  3233  06A6                     __ptext7:	
  3234 ;; *************** function _TMR1_StartTimer *****************
  3235 ;; Defined at:
  3236 ;;		line 27 in file "tmr.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;		None
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;		None
  3241 ;; Return value:  Size  Location     Type
  3242 ;;                  1    wreg      void 
  3243 ;; Registers used:
  3244 ;;		None
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3250 ;;      Params:         0       0       0       0
  3251 ;;      Locals:         0       0       0       0
  3252 ;;      Temps:          0       0       0       0
  3253 ;;      Totals:         0       0       0       0
  3254 ;;Total ram usage:        0 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:    3
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_main
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           
  3265                           ;psect for function _TMR1_StartTimer
  3266  06A6                     _TMR1_StartTimer:	
  3267                           
  3268                           ;tmr.c: 29: T1CONbits.TMR1ON = 1;
  3269                           
  3270                           ;incstack = 0
  3271                           ; Regs used in _TMR1_StartTimer: []
  3272  06A6  0020               	movlb	0	; select bank0
  3273  06A7  1418               	bsf	24,0	;volatile
  3274  06A8  0008               	return
  3275  06A9                     __end_of_TMR1_StartTimer:	
  3276                           
  3277                           	psect	text8
  3278  0567                     __ptext8:	
  3279 ;; *************** function _SYSTEM_Initialize *****************
  3280 ;; Defined at:
  3281 ;;		line 11 in file "command.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  1    wreg      void 
  3288 ;; Registers used:
  3289 ;;		wreg, status,2, status,0, pclath, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3295 ;;      Params:         0       0       0       0
  3296 ;;      Locals:         0       0       0       0
  3297 ;;      Temps:          0       0       0       0
  3298 ;;      Totals:         0       0       0       0
  3299 ;;Total ram usage:        0 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    4
  3302 ;; This function calls:
  3303 ;;		_I2C_Initialize
  3304 ;;		_InterruptOnChange_Initialize
  3305 ;;		_OSCCON_Initialize
  3306 ;;		_PIN_Initialize
  3307 ;;		_PWM1_Initialize
  3308 ;;		_PWM2_Initialize
  3309 ;;		_PWM3_Initialize
  3310 ;;		_PWM4_Initialize
  3311 ;;		_TMR0_Initialize
  3312 ;;		_TMR1_Initialize
  3313 ;;		_TMR2_Initialize
  3314 ;; This function is called by:
  3315 ;;		_main
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           
  3320                           ;psect for function _SYSTEM_Initialize
  3321  0567                     _SYSTEM_Initialize:	
  3322                           
  3323                           ;command.c: 13: OSCCON_Initialize();
  3324                           
  3325                           ;incstack = 0
  3326                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3327  0567  3186  2663  3185   	fcall	_OSCCON_Initialize
  3328                           
  3329                           ;command.c: 14: PIN_Initialize();
  3330  056A  3185  25F3  3185   	fcall	_PIN_Initialize
  3331                           
  3332                           ;command.c: 15: PWM1_Initialize();
  3333  056D  3186  2680  3185   	fcall	_PWM1_Initialize
  3334                           
  3335                           ;command.c: 16: PWM2_Initialize();
  3336  0570  3186  2679  3185   	fcall	_PWM2_Initialize
  3337                           
  3338                           ;command.c: 17: PWM3_Initialize();
  3339  0573  3186  2672  3185   	fcall	_PWM3_Initialize
  3340                           
  3341                           ;command.c: 18: PWM4_Initialize();
  3342  0576  3186  266B  3185   	fcall	_PWM4_Initialize
  3343                           
  3344                           ;command.c: 19: TMR0_Initialize();
  3345  0579  3186  2699  3185   	fcall	_TMR0_Initialize
  3346                           
  3347                           ;command.c: 20: TMR1_Initialize();
  3348  057C  3186  2633  3185   	fcall	_TMR1_Initialize
  3349                           
  3350                           ;command.c: 21: TMR2_Initialize();
  3351  057F  3186  2659  3185   	fcall	_TMR2_Initialize
  3352                           
  3353                           ;command.c: 22: I2C_Initialize();
  3354  0582  3186  2642  3185   	fcall	_I2C_Initialize
  3355                           
  3356                           ;command.c: 23: InterruptOnChange_Initialize();
  3357  0585  3186  2687         	fcall	_InterruptOnChange_Initialize
  3358  0587  0008               	return
  3359  0588                     __end_of_SYSTEM_Initialize:	
  3360                           
  3361                           	psect	text9
  3362  0659                     __ptext9:	
  3363 ;; *************** function _TMR2_Initialize *****************
  3364 ;; Defined at:
  3365 ;;		line 19 in file "tmr.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3379 ;;      Params:         0       0       0       0
  3380 ;;      Locals:         0       0       0       0
  3381 ;;      Temps:          0       0       0       0
  3382 ;;      Totals:         0       0       0       0
  3383 ;;Total ram usage:        0 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    3
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_SYSTEM_Initialize
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           
  3394                           ;psect for function _TMR2_Initialize
  3395  0659                     _TMR2_Initialize:	
  3396                           
  3397                           ;tmr.c: 21: T2CONbits.T2OUTPS = 0x00;
  3398                           
  3399                           ;incstack = 0
  3400                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0]
  3401  0659  3087               	movlw	-121
  3402  065A  0020               	movlb	0	; select bank0
  3403  065B  059C               	andwf	28,f	;volatile
  3404                           
  3405                           ;tmr.c: 22: T2CONbits.T2CKPS = 0x03;
  3406  065C  3003               	movlw	3
  3407  065D  049C               	iorwf	28,f	;volatile
  3408                           
  3409                           ;tmr.c: 23: T2CONbits.TMR2ON = 0;
  3410  065E  111C               	bcf	28,2	;volatile
  3411                           
  3412                           ;tmr.c: 24: TMR2 = 0;
  3413  065F  019A               	clrf	26	;volatile
  3414                           
  3415                           ;tmr.c: 25: PR2 = 249;
  3416  0660  30F9               	movlw	249
  3417  0661  009B               	movwf	27	;volatile
  3418  0662  0008               	return
  3419  0663                     __end_of_TMR2_Initialize:	
  3420                           
  3421                           	psect	text10
  3422  0633                     __ptext10:	
  3423 ;; *************** function _TMR1_Initialize *****************
  3424 ;; Defined at:
  3425 ;;		line 7 in file "tmr.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;		None
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;		None
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      void 
  3432 ;; Registers used:
  3433 ;;		wreg, status,2, status,0
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3439 ;;      Params:         0       0       0       0
  3440 ;;      Locals:         0       0       0       0
  3441 ;;      Temps:          0       0       0       0
  3442 ;;      Totals:         0       0       0       0
  3443 ;;Total ram usage:        0 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:    3
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_SYSTEM_Initialize
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           
  3454                           ;psect for function _TMR1_Initialize
  3455  0633                     _TMR1_Initialize:	
  3456                           
  3457                           ;tmr.c: 9: T1CONbits.TMR1CS = 0x02;
  3458                           
  3459                           ;incstack = 0
  3460                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0]
  3461  0633  0020               	movlb	0	; select bank0
  3462  0634  0818               	movf	24,w	;volatile
  3463  0635  393F               	andlw	-193
  3464  0636  3880               	iorlw	128
  3465  0637  0098               	movwf	24	;volatile
  3466                           
  3467                           ;tmr.c: 10: T1CONbits.T1CKPS = 0x00;
  3468  0638  30CF               	movlw	-49
  3469  0639  0598               	andwf	24,f	;volatile
  3470                           
  3471                           ;tmr.c: 11: T1CONbits.T1OSCEN = 1;
  3472  063A  1598               	bsf	24,3	;volatile
  3473                           
  3474                           ;tmr.c: 12: T1CONbits.nT1SYNC = 0;
  3475  063B  1118               	bcf	24,2	;volatile
  3476                           
  3477                           ;tmr.c: 13: T1CONbits.TMR1ON = 0;
  3478  063C  1018               	bcf	24,0	;volatile
  3479                           
  3480                           ;tmr.c: 14: T1GCONbits.TMR1GE = 0;
  3481  063D  1399               	bcf	25,7	;volatile
  3482                           
  3483                           ;tmr.c: 16: PIR1bits.TMR1IF = 0;
  3484  063E  1011               	bcf	17,0	;volatile
  3485                           
  3486                           ;tmr.c: 17: PIE1bits.TMR1IE = 1;
  3487  063F  0021               	movlb	1	; select bank1
  3488  0640  1411               	bsf	17,0	;volatile
  3489  0641  0008               	return
  3490  0642                     __end_of_TMR1_Initialize:	
  3491                           
  3492                           	psect	text11
  3493  0699                     __ptext11:	
  3494 ;; *************** function _TMR0_Initialize *****************
  3495 ;; Defined at:
  3496 ;;		line 3 in file "tmr.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;		None
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		wreg
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3510 ;;      Params:         0       0       0       0
  3511 ;;      Locals:         0       0       0       0
  3512 ;;      Temps:          0       0       0       0
  3513 ;;      Totals:         0       0       0       0
  3514 ;;Total ram usage:        0 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; Hardware stack levels required when called:    3
  3517 ;; This function calls:
  3518 ;;		Nothing
  3519 ;; This function is called by:
  3520 ;;		_SYSTEM_Initialize
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           
  3525                           ;psect for function _TMR0_Initialize
  3526  0699                     _TMR0_Initialize:	
  3527                           
  3528                           ;tmr.c: 5: OPTION_REG = 0x06;
  3529                           
  3530                           ;incstack = 0
  3531                           ; Regs used in _TMR0_Initialize: [wreg]
  3532  0699  3006               	movlw	6
  3533  069A  0021               	movlb	1	; select bank1
  3534  069B  0095               	movwf	21	;volatile
  3535  069C  0008               	return
  3536  069D                     __end_of_TMR0_Initialize:	
  3537                           
  3538                           	psect	text12
  3539  066B                     __ptext12:	
  3540 ;; *************** function _PWM4_Initialize *****************
  3541 ;; Defined at:
  3542 ;;		line 69 in file "pwm.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;		None
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		status,2
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3556 ;;      Params:         0       0       0       0
  3557 ;;      Locals:         0       0       0       0
  3558 ;;      Temps:          0       0       0       0
  3559 ;;      Totals:         0       0       0       0
  3560 ;;Total ram usage:        0 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    3
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_SYSTEM_Initialize
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           
  3571                           ;psect for function _PWM4_Initialize
  3572  066B                     _PWM4_Initialize:	
  3573                           
  3574                           ;pwm.c: 71: PWM4CONbits.PWM4EN = 1;
  3575                           
  3576                           ;incstack = 0
  3577                           ; Regs used in _PWM4_Initialize: [status,2]
  3578  066B  002C               	movlb	12	; select bank12
  3579  066C  179C               	bsf	28,7	;volatile
  3580                           
  3581                           ;pwm.c: 72: PWM4CONbits.PWM4OE = 1;
  3582  066D  171C               	bsf	28,6	;volatile
  3583                           
  3584                           ;pwm.c: 73: PWM4CONbits.PWM4POL = 0;
  3585  066E  121C               	bcf	28,4	;volatile
  3586                           
  3587                           ;pwm.c: 75: PWM4DCH = 0x00;
  3588  066F  019B               	clrf	27	;volatile
  3589                           
  3590                           ;pwm.c: 76: PWM4DCL = 0x00;
  3591  0670  019A               	clrf	26	;volatile
  3592  0671  0008               	return
  3593  0672                     __end_of_PWM4_Initialize:	
  3594                           
  3595                           	psect	text13
  3596  0672                     __ptext13:	
  3597 ;; *************** function _PWM3_Initialize *****************
  3598 ;; Defined at:
  3599 ;;		line 47 in file "pwm.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;		None
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;		None
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		status,2
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3613 ;;      Params:         0       0       0       0
  3614 ;;      Locals:         0       0       0       0
  3615 ;;      Temps:          0       0       0       0
  3616 ;;      Totals:         0       0       0       0
  3617 ;;Total ram usage:        0 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:    3
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_SYSTEM_Initialize
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           
  3628                           ;psect for function _PWM3_Initialize
  3629  0672                     _PWM3_Initialize:	
  3630                           
  3631                           ;pwm.c: 49: PWM3CONbits.PWM3EN = 1;
  3632                           
  3633                           ;incstack = 0
  3634                           ; Regs used in _PWM3_Initialize: [status,2]
  3635  0672  002C               	movlb	12	; select bank12
  3636  0673  1799               	bsf	25,7	;volatile
  3637                           
  3638                           ;pwm.c: 50: PWM3CONbits.PWM3OE = 1;
  3639  0674  1719               	bsf	25,6	;volatile
  3640                           
  3641                           ;pwm.c: 51: PWM3CONbits.PWM3POL = 0;
  3642  0675  1219               	bcf	25,4	;volatile
  3643                           
  3644                           ;pwm.c: 53: PWM3DCH = 0x00;
  3645  0676  0198               	clrf	24	;volatile
  3646                           
  3647                           ;pwm.c: 54: PWM3DCL = 0x00;
  3648  0677  0197               	clrf	23	;volatile
  3649  0678  0008               	return
  3650  0679                     __end_of_PWM3_Initialize:	
  3651                           
  3652                           	psect	text14
  3653  0679                     __ptext14:	
  3654 ;; *************** function _PWM2_Initialize *****************
  3655 ;; Defined at:
  3656 ;;		line 25 in file "pwm.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		status,2
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3670 ;;      Params:         0       0       0       0
  3671 ;;      Locals:         0       0       0       0
  3672 ;;      Temps:          0       0       0       0
  3673 ;;      Totals:         0       0       0       0
  3674 ;;Total ram usage:        0 bytes
  3675 ;; Hardware stack levels used:    1
  3676 ;; Hardware stack levels required when called:    3
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_SYSTEM_Initialize
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           
  3685                           ;psect for function _PWM2_Initialize
  3686  0679                     _PWM2_Initialize:	
  3687                           
  3688                           ;pwm.c: 27: PWM2CONbits.PWM2EN = 1;
  3689                           
  3690                           ;incstack = 0
  3691                           ; Regs used in _PWM2_Initialize: [status,2]
  3692  0679  002C               	movlb	12	; select bank12
  3693  067A  1796               	bsf	22,7	;volatile
  3694                           
  3695                           ;pwm.c: 28: PWM2CONbits.PWM2OE = 1;
  3696  067B  1716               	bsf	22,6	;volatile
  3697                           
  3698                           ;pwm.c: 29: PWM2CONbits.PWM2POL = 0;
  3699  067C  1216               	bcf	22,4	;volatile
  3700                           
  3701                           ;pwm.c: 31: PWM2DCH = 0x00;
  3702  067D  0195               	clrf	21	;volatile
  3703                           
  3704                           ;pwm.c: 32: PWM2DCL = 0x00;
  3705  067E  0194               	clrf	20	;volatile
  3706  067F  0008               	return
  3707  0680                     __end_of_PWM2_Initialize:	
  3708                           
  3709                           	psect	text15
  3710  0680                     __ptext15:	
  3711 ;; *************** function _PWM1_Initialize *****************
  3712 ;; Defined at:
  3713 ;;		line 3 in file "pwm.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;		None
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      void 
  3720 ;; Registers used:
  3721 ;;		status,2
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3727 ;;      Params:         0       0       0       0
  3728 ;;      Locals:         0       0       0       0
  3729 ;;      Temps:          0       0       0       0
  3730 ;;      Totals:         0       0       0       0
  3731 ;;Total ram usage:        0 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    3
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_SYSTEM_Initialize
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           
  3742                           ;psect for function _PWM1_Initialize
  3743  0680                     _PWM1_Initialize:	
  3744                           
  3745                           ;pwm.c: 5: PWM1CONbits.PWM1EN = 1;
  3746                           
  3747                           ;incstack = 0
  3748                           ; Regs used in _PWM1_Initialize: [status,2]
  3749  0680  002C               	movlb	12	; select bank12
  3750  0681  1793               	bsf	19,7	;volatile
  3751                           
  3752                           ;pwm.c: 6: PWM1CONbits.PWM1OE = 1;
  3753  0682  1713               	bsf	19,6	;volatile
  3754                           
  3755                           ;pwm.c: 7: PWM1CONbits.PWM1POL = 0;
  3756  0683  1213               	bcf	19,4	;volatile
  3757                           
  3758                           ;pwm.c: 9: PWM1DCH = 0x00;
  3759  0684  0192               	clrf	18	;volatile
  3760                           
  3761                           ;pwm.c: 10: PWM1DCL = 0x00;
  3762  0685  0191               	clrf	17	;volatile
  3763  0686  0008               	return
  3764  0687                     __end_of_PWM1_Initialize:	
  3765                           
  3766                           	psect	text16
  3767  05F3                     __ptext16:	
  3768 ;; *************** function _PIN_Initialize *****************
  3769 ;; Defined at:
  3770 ;;		line 3 in file "pin.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;		None
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;		None
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  1    wreg      void 
  3777 ;; Registers used:
  3778 ;;		status,2
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3784 ;;      Params:         0       0       0       0
  3785 ;;      Locals:         0       0       0       0
  3786 ;;      Temps:          0       0       0       0
  3787 ;;      Totals:         0       0       0       0
  3788 ;;Total ram usage:        0 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    3
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_SYSTEM_Initialize
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           
  3799                           ;psect for function _PIN_Initialize
  3800  05F3                     _PIN_Initialize:	
  3801                           
  3802                           ;pin.c: 6: TRISAbits.TRISA2 = 0;
  3803                           
  3804                           ;incstack = 0
  3805                           ; Regs used in _PIN_Initialize: [status,2]
  3806  05F3  0021               	movlb	1	; select bank1
  3807  05F4  110C               	bcf	12,2	;volatile
  3808                           
  3809                           ;pin.c: 7: TRISAbits.TRISA4 = 1;
  3810  05F5  160C               	bsf	12,4	;volatile
  3811                           
  3812                           ;pin.c: 8: TRISAbits.TRISA5 = 1;
  3813  05F6  168C               	bsf	12,5	;volatile
  3814                           
  3815                           ;pin.c: 9: TRISBbits.TRISB4 = 1;
  3816  05F7  160D               	bsf	13,4	;volatile
  3817                           
  3818                           ;pin.c: 10: TRISBbits.TRISB6 = 1;
  3819  05F8  170D               	bsf	13,6	;volatile
  3820                           
  3821                           ;pin.c: 11: TRISBbits.TRISB7 = 1;
  3822  05F9  178D               	bsf	13,7	;volatile
  3823                           
  3824                           ;pin.c: 12: TRISCbits.TRISC1 = 0;
  3825  05FA  108E               	bcf	14,1	;volatile
  3826                           
  3827                           ;pin.c: 13: TRISCbits.TRISC3 = 0;
  3828  05FB  118E               	bcf	14,3	;volatile
  3829                           
  3830                           ;pin.c: 14: TRISCbits.TRISC5 = 0;
  3831  05FC  128E               	bcf	14,5	;volatile
  3832                           
  3833                           ;pin.c: 17: ANSELA = 0;
  3834  05FD  0023               	movlb	3	; select bank3
  3835  05FE  018C               	clrf	12	;volatile
  3836                           
  3837                           ;pin.c: 18: ANSELB = 0;
  3838  05FF  018D               	clrf	13	;volatile
  3839                           
  3840                           ;pin.c: 19: ANSELC = 0;
  3841  0600  018E               	clrf	14	;volatile
  3842                           
  3843                           ;pin.c: 22: LATAbits.LATA2 = 0;
  3844  0601  0022               	movlb	2	; select bank2
  3845  0602  110C               	bcf	12,2	;volatile
  3846                           
  3847                           ;pin.c: 23: LATCbits.LATC1 = 0;
  3848  0603  108E               	bcf	14,1	;volatile
  3849                           
  3850                           ;pin.c: 24: LATCbits.LATC3 = 0;
  3851  0604  118E               	bcf	14,3	;volatile
  3852                           
  3853                           ;pin.c: 25: LATCbits.LATC5 = 0;
  3854  0605  128E               	bcf	14,5	;volatile
  3855                           
  3856                           ;pin.c: 28: WPUBbits.WPUB7 = 1;
  3857  0606  0024               	movlb	4	; select bank4
  3858  0607  178D               	bsf	13,7	;volatile
  3859                           
  3860                           ;pin.c: 29: WPUBbits.WPUB4 = 0;
  3861  0608  120D               	bcf	13,4	;volatile
  3862                           
  3863                           ;pin.c: 30: WPUBbits.WPUB6 = 0;
  3864  0609  130D               	bcf	13,6	;volatile
  3865  060A  0008               	return
  3866  060B                     __end_of_PIN_Initialize:	
  3867                           
  3868                           	psect	text17
  3869  0663                     __ptext17:	
  3870 ;; *************** function _OSCCON_Initialize *****************
  3871 ;; Defined at:
  3872 ;;		line 3 in file "osccon.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;		None
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;		None
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3886 ;;      Params:         0       0       0       0
  3887 ;;      Locals:         0       0       0       0
  3888 ;;      Temps:          0       0       0       0
  3889 ;;      Totals:         0       0       0       0
  3890 ;;Total ram usage:        0 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    3
  3893 ;; This function calls:
  3894 ;;		Nothing
  3895 ;; This function is called by:
  3896 ;;		_SYSTEM_Initialize
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           
  3901                           ;psect for function _OSCCON_Initialize
  3902  0663                     _OSCCON_Initialize:	
  3903                           
  3904                           ;osccon.c: 5: OSCCONbits.IRCF = 0x0F;
  3905                           
  3906                           ;incstack = 0
  3907                           ; Regs used in _OSCCON_Initialize: [wreg+status,2+status,0]
  3908  0663  3078               	movlw	120
  3909  0664  0021               	movlb	1	; select bank1
  3910  0665  0499               	iorwf	25,f	;volatile
  3911                           
  3912                           ;osccon.c: 6: OSCCONbits.SCS = 0x00;
  3913  0666  30FC               	movlw	-4
  3914  0667  0599               	andwf	25,f	;volatile
  3915  0668                     l250:	
  3916                           ;osccon.c: 7: while(!OSCSTATbits.HFIOFS);
  3917                           
  3918  0668  181A               	btfsc	26,0	;volatile
  3919  0669  0008               	return
  3920  066A  2E68               	goto	l250
  3921  066B                     __end_of_OSCCON_Initialize:	
  3922                           
  3923                           	psect	text18
  3924  0687                     __ptext18:	
  3925 ;; *************** function _InterruptOnChange_Initialize *****************
  3926 ;; Defined at:
  3927 ;;		line 3 in file "interruptOnChange.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;		None
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;		None
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      void 
  3934 ;; Registers used:
  3935 ;;		status,2
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3941 ;;      Params:         0       0       0       0
  3942 ;;      Locals:         0       0       0       0
  3943 ;;      Temps:          0       0       0       0
  3944 ;;      Totals:         0       0       0       0
  3945 ;;Total ram usage:        0 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:    3
  3948 ;; This function calls:
  3949 ;;		Nothing
  3950 ;; This function is called by:
  3951 ;;		_SYSTEM_Initialize
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           
  3956                           ;psect for function _InterruptOnChange_Initialize
  3957  0687                     _InterruptOnChange_Initialize:	
  3958                           
  3959                           ;interruptOnChange.c: 6: IOCBNbits.IOCBN7 = 1;
  3960                           
  3961                           ;incstack = 0
  3962                           ; Regs used in _InterruptOnChange_Initialize: [status,2]
  3963  0687  0027               	movlb	7	; select bank7
  3964  0688  1795               	bsf	21,7	;volatile
  3965                           
  3966                           ;interruptOnChange.c: 7: IOCBPbits.IOCBP7 = 1;
  3967  0689  1794               	bsf	20,7	;volatile
  3968                           
  3969                           ;interruptOnChange.c: 8: IOCAF = 0;
  3970  068A  0193               	clrf	19	;volatile
  3971                           
  3972                           ;interruptOnChange.c: 9: IOCBF = 0;
  3973  068B  0196               	clrf	22	;volatile
  3974                           
  3975                           ;interruptOnChange.c: 11: INTCONbits.IOCIE = 1;
  3976  068C  158B               	bsf	11,3	;volatile
  3977  068D  0008               	return
  3978  068E                     __end_of_InterruptOnChange_Initialize:	
  3979                           
  3980                           	psect	text19
  3981  0642                     __ptext19:	
  3982 ;; *************** function _I2C_Initialize *****************
  3983 ;; Defined at:
  3984 ;;		line 9 in file "i2c.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		wreg, status,2, status,0
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3998 ;;      Params:         0       0       0       0
  3999 ;;      Locals:         0       0       0       0
  4000 ;;      Temps:          0       0       0       0
  4001 ;;      Totals:         0       0       0       0
  4002 ;;Total ram usage:        0 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    3
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_SYSTEM_Initialize
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           
  4013                           ;psect for function _I2C_Initialize
  4014  0642                     _I2C_Initialize:	
  4015                           
  4016                           ;i2c.c: 11: SSP1STATbits.SMP = 0;
  4017                           
  4018                           ;incstack = 0
  4019                           ; Regs used in _I2C_Initialize: [wreg+status,2+status,0]
  4020  0642  0024               	movlb	4	; select bank4
  4021  0643  1394               	bcf	20,7	;volatile
  4022                           
  4023                           ;i2c.c: 12: SSP1STATbits.CKE = 1;
  4024  0644  1714               	bsf	20,6	;volatile
  4025                           
  4026                           ;i2c.c: 13: SSP1CON1bits.SSPEN = 1;
  4027  0645  1695               	bsf	21,5	;volatile
  4028                           
  4029                           ;i2c.c: 14: SSP1CON1bits.CKP = 0;
  4030  0646  1215               	bcf	21,4	;volatile
  4031                           
  4032                           ;i2c.c: 15: SSP1CON1bits.SSPM = 0x08;
  4033  0647  0815               	movf	21,w	;volatile
  4034  0648  39F0               	andlw	-16
  4035  0649  3808               	iorlw	8
  4036  064A  0095               	movwf	21	;volatile
  4037                           
  4038                           ;i2c.c: 16: SSP1CON3bits.SDAHT = 0;
  4039  064B  1197               	bcf	23,3	;volatile
  4040                           
  4041                           ;i2c.c: 17: SSP1ADD = 39;
  4042  064C  3027               	movlw	39
  4043  064D  0092               	movwf	18	;volatile
  4044  064E  0008               	return
  4045  064F                     __end_of_I2C_Initialize:	
  4046                           
  4047                           	psect	text20
  4048  041D                     __ptext20:	
  4049 ;; *************** function _LedUpdate *****************
  4050 ;; Defined at:
  4051 ;;		line 41 in file "led.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;  i               1   15[BANK0 ] unsigned char 
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4065 ;;      Params:         0       0       0       0
  4066 ;;      Locals:         0       1       0       0
  4067 ;;      Temps:          0       1       0       0
  4068 ;;      Totals:         0       2       0       0
  4069 ;;Total ram usage:        2 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:    6
  4072 ;; This function calls:
  4073 ;;		_SaveLedPara
  4074 ;; This function is called by:
  4075 ;;		_main
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           
  4080                           ;psect for function _LedUpdate
  4081  041D                     _LedUpdate:	
  4082                           
  4083                           ;led.c: 43: unsigned char i;
  4084                           ;led.c: 45: gLedPara.fAuto = IR_ReveiveDataStructure.fModeAuto;
  4085                           
  4086                           ;incstack = 0
  4087                           ; Regs used in _LedUpdate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4088  041D  0020               	movlb	0	; select bank0
  4089  041E  1044               	bcf	_gLedPara,0
  4090  041F  1BB6               	btfsc	_IR_ReveiveDataStructure,7
  4091  0420  1444               	bsf	_gLedPara,0
  4092                           
  4093                           ;led.c: 46: gLedPara.fWhiteOn = IR_ReveiveDataStructure.fWhiteOnOff;
  4094  0421  0020               	movlb	0	; select bank0
  4095  0422  10C4               	bcf	_gLedPara,1
  4096  0423  1AB6               	btfsc	_IR_ReveiveDataStructure,5
  4097  0424  14C4               	bsf	_gLedPara,1
  4098                           
  4099                           ;led.c: 47: gLedPara.fBlueOn = IR_ReveiveDataStructure.fBlueOnOff;
  4100  0425  0020               	movlb	0	; select bank0
  4101  0426  1144               	bcf	_gLedPara,2
  4102  0427  1B36               	btfsc	_IR_ReveiveDataStructure,6
  4103  0428  1544               	bsf	_gLedPara,2
  4104                           
  4105                           ;led.c: 48: gLedPara.sunriseHour = IR_ReveiveDataStructure.RiseTimeHour;
  4106  0429  0020               	movlb	0	; select bank0
  4107  042A  0839               	movf	_IR_ReveiveDataStructure+3,w
  4108  042B  00DD               	movwf	??_LedUpdate
  4109  042C  085D               	movf	??_LedUpdate,w
  4110  042D  00C7               	movwf	_gLedPara+3
  4111                           
  4112                           ;led.c: 49: gLedPara.sunriseMin = IR_ReveiveDataStructure.RiseTimeMinute;
  4113  042E  083A               	movf	_IR_ReveiveDataStructure+4,w
  4114  042F  00DD               	movwf	??_LedUpdate
  4115  0430  085D               	movf	??_LedUpdate,w
  4116  0431  00C8               	movwf	_gLedPara+4
  4117                           
  4118                           ;led.c: 50: gLedPara.sunsetHour = IR_ReveiveDataStructure.SunsetTimeHour;
  4119  0432  083D               	movf	_IR_ReveiveDataStructure+7,w
  4120  0433  00DD               	movwf	??_LedUpdate
  4121  0434  085D               	movf	??_LedUpdate,w
  4122  0435  00CB               	movwf	_gLedPara+7
  4123                           
  4124                           ;led.c: 51: gLedPara.sunsetMin = IR_ReveiveDataStructure.SunsetTimeMinute;
  4125  0436  083E               	movf	_IR_ReveiveDataStructure+8,w
  4126  0437  00DD               	movwf	??_LedUpdate
  4127  0438  085D               	movf	??_LedUpdate,w
  4128  0439  00CC               	movwf	_gLedPara+8
  4129                           
  4130                           ;led.c: 53: for(i = 0;i < 2;i++)
  4131  043A  01DE               	clrf	LedUpdate@i
  4132  043B  3002               	movlw	2
  4133  043C  025E               	subwf	LedUpdate@i,w
  4134  043D  1803               	btfsc	3,0
  4135  043E  2C6E               	goto	l1902
  4136  043F                     l1896:	
  4137                           
  4138                           ;led.c: 54: {
  4139                           ;led.c: 55: gLedPara.bright[i] = IR_ReveiveDataStructure.ManualBrightPercen[i];
  4140  043F  085E               	movf	LedUpdate@i,w
  4141  0440  3E0B               	addlw	11
  4142  0441  3E36               	addlw	(low (_IR_ReveiveDataStructure| 0))& (0+255)
  4143  0442  0086               	movwf	6
  4144  0443  0187               	clrf	7
  4145  0444  0801               	movf	1,w
  4146  0445  00DD               	movwf	??_LedUpdate
  4147  0446  085E               	movf	LedUpdate@i,w
  4148  0447  3E45               	addlw	(low ((_gLedPara| 0+1)))& (0+255)
  4149  0448  0086               	movwf	6
  4150  0449  0187               	clrf	7
  4151  044A  085D               	movf	??_LedUpdate,w
  4152  044B  0081               	movwf	1
  4153                           
  4154                           ;led.c: 56: gLedPara.dayBright[i] = IR_ReveiveDataStructure.RiseBrightPercen[i];
  4155  044C  085E               	movf	LedUpdate@i,w
  4156  044D  3E05               	addlw	5
  4157  044E  3E36               	addlw	(low (_IR_ReveiveDataStructure| 0))& (0+255)
  4158  044F  0086               	movwf	6
  4159  0450  0187               	clrf	7
  4160  0451  0801               	movf	1,w
  4161  0452  00DD               	movwf	??_LedUpdate
  4162  0453  085E               	movf	LedUpdate@i,w
  4163  0454  3E49               	addlw	(low ((_gLedPara| 0+5)))& (0+255)
  4164  0455  0086               	movwf	6
  4165  0456  0187               	clrf	7
  4166  0457  085D               	movf	??_LedUpdate,w
  4167  0458  0081               	movwf	1
  4168                           
  4169                           ;led.c: 57: gLedPara.nightBright[i] = IR_ReveiveDataStructure.SunsetBrightPercen[i];
  4170  0459  085E               	movf	LedUpdate@i,w
  4171  045A  3E09               	addlw	9
  4172  045B  3E36               	addlw	(low (_IR_ReveiveDataStructure| 0))& (0+255)
  4173  045C  0086               	movwf	6
  4174  045D  0187               	clrf	7
  4175  045E  0801               	movf	1,w
  4176  045F  00DD               	movwf	??_LedUpdate
  4177  0460  085E               	movf	LedUpdate@i,w
  4178  0461  3E4D               	addlw	(low ((_gLedPara| 0+9)))& (0+255)
  4179  0462  0086               	movwf	6
  4180  0463  0187               	clrf	7
  4181  0464  085D               	movf	??_LedUpdate,w
  4182  0465  0081               	movwf	1
  4183  0466  3001               	movlw	1
  4184  0467  00DD               	movwf	??_LedUpdate
  4185  0468  085D               	movf	??_LedUpdate,w
  4186  0469  07DE               	addwf	LedUpdate@i,f
  4187  046A  3002               	movlw	2
  4188  046B  025E               	subwf	LedUpdate@i,w
  4189  046C  1C03               	skipc
  4190  046D  2C3F               	goto	l1896
  4191  046E                     l1902:	
  4192                           
  4193                           ;led.c: 58: }
  4194                           ;led.c: 59: SaveLedPara();
  4195  046E  3185  2506         	fcall	_SaveLedPara
  4196  0470  0008               	return
  4197  0471                     __end_of_LedUpdate:	
  4198                           
  4199                           	psect	text21
  4200  0506                     __ptext21:	
  4201 ;; *************** function _SaveLedPara *****************
  4202 ;; Defined at:
  4203 ;;		line 25 in file "led.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;		None
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;  len             1   13[BANK0 ] unsigned char 
  4208 ;;  cnt             1   12[BANK0 ] unsigned char 
  4209 ;;  offset          1   11[BANK0 ] unsigned char 
  4210 ;;  pbuf            1   10[BANK0 ] PTR unsigned char 
  4211 ;;		 -> gLedPara(11), 
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      void 
  4214 ;; Registers used:
  4215 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4221 ;;      Params:         0       0       0       0
  4222 ;;      Locals:         0       6       0       0
  4223 ;;      Temps:          0       2       0       0
  4224 ;;      Totals:         0       8       0       0
  4225 ;;Total ram usage:        8 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; Hardware stack levels required when called:    5
  4228 ;; This function calls:
  4229 ;;		_I2C_WriteBuffer
  4230 ;; This function is called by:
  4231 ;;		_LedUpdate
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           
  4236                           ;psect for function _SaveLedPara
  4237  0506                     _SaveLedPara:	
  4238                           
  4239                           ;led.c: 27: unsigned char len = sizeof( gLedPara );
  4240                           
  4241                           ;incstack = 0
  4242                           ; Regs used in _SaveLedPara: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4243  0506  300B               	movlw	11
  4244  0507  0020               	movlb	0	; select bank0
  4245  0508  00D5               	movwf	??_SaveLedPara
  4246  0509  0855               	movf	??_SaveLedPara,w
  4247  050A  00DC               	movwf	SaveLedPara@len
  4248                           
  4249                           ;led.c: 28: unsigned char offset = 0;
  4250  050B  01DA               	clrf	SaveLedPara@offset
  4251                           
  4252                           ;led.c: 29: unsigned char cnt;
  4253                           ;led.c: 30: unsigned char *pbuf = (unsigned char *) &gLedPara;
  4254  050C  3044               	movlw	(low (_gLedPara| 0))& (0+255)
  4255  050D  00D5               	movwf	??_SaveLedPara
  4256  050E  0855               	movf	??_SaveLedPara,w
  4257  050F  00D9               	movwf	SaveLedPara@pbuf
  4258                           
  4259                           ;led.c: 31: (INTCONbits.GIE = 0);
  4260  0510  138B               	bcf	11,7	;volatile
  4261  0511                     l1798:	
  4262                           ;led.c: 32: while ( len > 0 )
  4263                           
  4264  0511  085C               	movf	SaveLedPara@len,w
  4265  0512  1903               	btfsc	3,2
  4266  0513  2D3D               	goto	l388
  4267                           
  4268                           ;led.c: 33: {
  4269                           ;led.c: 34: cnt = len >= 8 ? 8 : len;
  4270  0514  3008               	movlw	8
  4271  0515  025C               	subwf	SaveLedPara@len,w
  4272  0516  1803               	skipnc
  4273  0517  2D1F               	goto	l1790
  4274  0518  085C               	movf	SaveLedPara@len,w
  4275  0519  00D5               	movwf	??_SaveLedPara
  4276  051A  01D6               	clrf	??_SaveLedPara+1
  4277  051B  0855               	movf	??_SaveLedPara,w
  4278  051C  00D7               	movwf	_SaveLedPara$1168
  4279  051D  0856               	movf	??_SaveLedPara+1,w
  4280  051E  2D22               	goto	L1
  4281  051F                     l1790:	
  4282  051F  3008               	movlw	8
  4283  0520  00D7               	movwf	_SaveLedPara$1168
  4284  0521  3000               	movlw	0
  4285  0522                     L1:	
  4286  0522  00D8               	movwf	_SaveLedPara$1168+1
  4287  0523  0857               	movf	_SaveLedPara$1168,w
  4288  0524  00D5               	movwf	??_SaveLedPara
  4289  0525  0855               	movf	??_SaveLedPara,w
  4290  0526  00DB               	movwf	SaveLedPara@cnt
  4291                           
  4292                           ;led.c: 35: I2C_WriteBuffer( 0x20 + offset , pbuf + offset, cnt);
  4293  0527  0859               	movf	SaveLedPara@pbuf,w
  4294  0528  075A               	addwf	SaveLedPara@offset,w
  4295  0529  00D5               	movwf	??_SaveLedPara
  4296  052A  0855               	movf	??_SaveLedPara,w
  4297  052B  00CF               	movwf	I2C_WriteBuffer@pbuf
  4298  052C  085B               	movf	SaveLedPara@cnt,w
  4299  052D  00D6               	movwf	??_SaveLedPara+1
  4300  052E  0856               	movf	??_SaveLedPara+1,w
  4301  052F  00D0               	movwf	I2C_WriteBuffer@len
  4302  0530  085A               	movf	SaveLedPara@offset,w
  4303  0531  3E20               	addlw	32
  4304  0532  3184  2471  3185   	fcall	_I2C_WriteBuffer
  4305                           
  4306                           ;led.c: 36: offset += cnt;
  4307  0535  0020               	movlb	0	; select bank0
  4308  0536  085B               	movf	SaveLedPara@cnt,w
  4309  0537  00D5               	movwf	??_SaveLedPara
  4310  0538  0855               	movf	??_SaveLedPara,w
  4311  0539  07DA               	addwf	SaveLedPara@offset,f
  4312                           
  4313                           ;led.c: 37: len -= cnt;
  4314  053A  085B               	movf	SaveLedPara@cnt,w
  4315  053B  02DC               	subwf	SaveLedPara@len,f
  4316  053C  2D11               	goto	l1798
  4317  053D                     l388:	
  4318                           
  4319                           ;led.c: 38: }
  4320                           ;led.c: 39: (INTCONbits.GIE = 1);
  4321  053D  178B               	bsf	11,7	;volatile
  4322  053E  0008               	return
  4323  053F                     __end_of_SaveLedPara:	
  4324                           
  4325                           	psect	text22
  4326  0471                     __ptext22:	
  4327 ;; *************** function _I2C_WriteBuffer *****************
  4328 ;; Defined at:
  4329 ;;		line 66 in file "i2c.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  suba            1    wreg     unsigned char 
  4332 ;;  pbuf            1    0[BANK0 ] PTR unsigned char 
  4333 ;;		 -> gLedPara(11), 
  4334 ;;  len             1    1[BANK0 ] unsigned char 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  suba            1    3[BANK0 ] unsigned char 
  4337 ;;  i               1    5[BANK0 ] unsigned char 
  4338 ;;  n               1    4[BANK0 ] unsigned char 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4348 ;;      Params:         0       2       0       0
  4349 ;;      Locals:         0       3       0       0
  4350 ;;      Temps:          0       1       0       0
  4351 ;;      Totals:         0       6       0       0
  4352 ;;Total ram usage:        6 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; Hardware stack levels required when called:    4
  4355 ;; This function calls:
  4356 ;;		_CheckSSPIF
  4357 ;; This function is called by:
  4358 ;;		_SaveLedPara
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           
  4363                           ;psect for function _I2C_WriteBuffer
  4364  0471                     _I2C_WriteBuffer:	
  4365                           
  4366                           ;incstack = 0
  4367                           ; Regs used in _I2C_WriteBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4368                           ;I2C_WriteBuffer@suba stored from wreg
  4369  0471  0020               	movlb	0	; select bank0
  4370  0472  00D2               	movwf	I2C_WriteBuffer@suba
  4371                           
  4372                           ;i2c.c: 68: unsigned char i = 0;
  4373  0473  01D4               	clrf	I2C_WriteBuffer@i
  4374                           
  4375                           ;i2c.c: 69: unsigned char n = 0;
  4376  0474  01D3               	clrf	I2C_WriteBuffer@n
  4377  0475                     L2:	
  4378                           
  4379                           ;i2c.c: 71: SSP1CON2bits.SEN = 1;
  4380  0475  0024               	movlb	4	; select bank4
  4381  0476  1416               	bsf	22,0	;volatile
  4382                           
  4383                           ;i2c.c: 72: CheckSSPIF();
  4384  0477  3186  2694  3184   	fcall	_CheckSSPIF
  4385                           
  4386                           ;i2c.c: 74: SSP1BUF = 0xA0;
  4387  047A  30A0               	movlw	160
  4388  047B  0024               	movlb	4	; select bank4
  4389  047C  0091               	movwf	17	;volatile
  4390                           
  4391                           ;i2c.c: 75: CheckSSPIF();
  4392  047D  3186  2694  3184   	fcall	_CheckSSPIF
  4393                           
  4394                           ;i2c.c: 76: while(SSP1CON2bits.ACKSTAT)
  4395  0480  0024               	movlb	4	; select bank4
  4396  0481  1F16               	btfss	22,6	;volatile
  4397  0482  2C96               	goto	l1570
  4398                           
  4399                           ;i2c.c: 77: {
  4400                           ;i2c.c: 78: n ++;
  4401  0483  3001               	movlw	1
  4402  0484  0020               	movlb	0	; select bank0
  4403  0485  00D1               	movwf	??_I2C_WriteBuffer
  4404  0486  0851               	movf	??_I2C_WriteBuffer,w
  4405  0487  07D3               	addwf	I2C_WriteBuffer@n,f
  4406                           
  4407                           ;i2c.c: 79: if(n > 10)
  4408  0488  300B               	movlw	11
  4409  0489  0253               	subwf	I2C_WriteBuffer@n,w
  4410  048A  1803               	btfsc	3,0
  4411  048B  0008               	return
  4412                           
  4413                           ;i2c.c: 82: }
  4414                           ;i2c.c: 83: _delay((unsigned long)((1)*(16000000/4000.0)));
  4415                           
  4416                           ;i2c.c: 80: {
  4417                           ;i2c.c: 81: return ;
  4418  048C  3006               	movlw	6
  4419  048D  0020               	movlb	0	; select bank0
  4420  048E  00D1               	movwf	??_I2C_WriteBuffer
  4421  048F  3030               	movlw	48
  4422  0490                     u1757:	
  4423  0490  0B89               	decfsz	9,f
  4424  0491  2C90               	goto	u1757
  4425  0492  0BD1               	decfsz	??_I2C_WriteBuffer,f
  4426  0493  2C90               	goto	u1757
  4427  0494  0000               	nop
  4428  0495  2C75               	goto	L2
  4429  0496                     l1570:	
  4430                           ;i2c.c: 87: CheckSSPIF();
  4431                           
  4432                           ;i2c.c: 86: SSP1BUF = 0xA0;
  4433                           
  4434                           ;i2c.c: 85: CheckSSPIF();
  4435                           
  4436                           ;i2c.c: 84: SSP1CON2bits.SEN = 1;
  4437                           
  4438                           
  4439                           ;i2c.c: 88: }
  4440                           ;i2c.c: 90: SSP1BUF = suba;
  4441  0496  0020               	movlb	0	; select bank0
  4442  0497  0852               	movf	I2C_WriteBuffer@suba,w
  4443  0498  0024               	movlb	4	; select bank4
  4444  0499  0091               	movwf	17	;volatile
  4445                           
  4446                           ;i2c.c: 91: CheckSSPIF();
  4447  049A  3186  2694  3184   	fcall	_CheckSSPIF
  4448                           
  4449                           ;i2c.c: 92: if(SSP1CON2bits.ACKSTAT)
  4450  049D  0024               	movlb	4	; select bank4
  4451  049E  1B16               	btfsc	22,6	;volatile
  4452  049F  0008               	return
  4453                           
  4454                           ;i2c.c: 95: }
  4455                           ;i2c.c: 97: for(i = 0;i < len;i ++)
  4456                           
  4457                           ;i2c.c: 93: {
  4458                           ;i2c.c: 94: return ;
  4459  04A0  0020               	movlb	0	; select bank0
  4460  04A1  01D4               	clrf	I2C_WriteBuffer@i
  4461  04A2                     l1590:	
  4462  04A2  0850               	movf	I2C_WriteBuffer@len,w
  4463  04A3  0254               	subwf	I2C_WriteBuffer@i,w
  4464  04A4  1803               	btfsc	3,0
  4465  04A5  2CBB               	goto	l209
  4466                           
  4467                           ;i2c.c: 98: {
  4468                           ;i2c.c: 99: SSP1BUF = *(pbuf + i);
  4469  04A6  0854               	movf	I2C_WriteBuffer@i,w
  4470  04A7  074F               	addwf	I2C_WriteBuffer@pbuf,w
  4471  04A8  00D1               	movwf	??_I2C_WriteBuffer
  4472  04A9  0851               	movf	??_I2C_WriteBuffer,w
  4473  04AA  0086               	movwf	6
  4474  04AB  0187               	clrf	7
  4475  04AC  0801               	movf	1,w
  4476  04AD  0024               	movlb	4	; select bank4
  4477  04AE  0091               	movwf	17	;volatile
  4478                           
  4479                           ;i2c.c: 100: CheckSSPIF();
  4480  04AF  3186  2694  3184   	fcall	_CheckSSPIF
  4481                           
  4482                           ;i2c.c: 101: if(SSP1CON2bits.ACKSTAT)
  4483  04B2  0024               	movlb	4	; select bank4
  4484  04B3  1B16               	btfsc	22,6	;volatile
  4485  04B4  0008               	return
  4486                           
  4487                           ;i2c.c: 102: {
  4488                           ;i2c.c: 103: return ;
  4489  04B5  3001               	movlw	1
  4490  04B6  0020               	movlb	0	; select bank0
  4491  04B7  00D1               	movwf	??_I2C_WriteBuffer
  4492  04B8  0851               	movf	??_I2C_WriteBuffer,w
  4493  04B9  07D4               	addwf	I2C_WriteBuffer@i,f
  4494  04BA  2CA2               	goto	l1590
  4495  04BB                     l209:	
  4496                           
  4497                           ;i2c.c: 104: }
  4498                           ;i2c.c: 105: }
  4499                           ;i2c.c: 107: SSP1CON2bits.PEN = 1;
  4500  04BB  0024               	movlb	4	; select bank4
  4501  04BC  1516               	bsf	22,2	;volatile
  4502                           
  4503                           ;i2c.c: 108: CheckSSPIF();
  4504  04BD  3186  2694         	fcall	_CheckSSPIF
  4505  04BF  0008               	return
  4506  04C0                     __end_of_I2C_WriteBuffer:	
  4507                           
  4508                           	psect	text23
  4509  03C0                     __ptext23:	
  4510 ;; *************** function _LedParaInit *****************
  4511 ;; Defined at:
  4512 ;;		line 182 in file "led.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;		None
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;  i               1    9[BANK0 ] unsigned char 
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  1    wreg      void 
  4519 ;; Registers used:
  4520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4526 ;;      Params:         0       0       0       0
  4527 ;;      Locals:         0       1       0       0
  4528 ;;      Temps:          0       2       0       0
  4529 ;;      Totals:         0       3       0       0
  4530 ;;Total ram usage:        3 bytes
  4531 ;; Hardware stack levels used:    1
  4532 ;; Hardware stack levels required when called:    5
  4533 ;; This function calls:
  4534 ;;		_I2C_ReadBuffer
  4535 ;; This function is called by:
  4536 ;;		_main
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           
  4541                           ;psect for function _LedParaInit
  4542  03C0                     _LedParaInit:	
  4543                           
  4544                           ;led.c: 184: unsigned char i;
  4545                           ;led.c: 186: I2C_ReadBuffer(0x20, (unsigned char *) &gLedPara, sizeof (gLedPara));
  4546                           
  4547                           ;incstack = 0
  4548                           ; Regs used in _LedParaInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4549  03C0  3044               	movlw	(low (_gLedPara| 0))& (0+255)
  4550  03C1  0020               	movlb	0	; select bank0
  4551  03C2  00D6               	movwf	??_LedParaInit
  4552  03C3  0856               	movf	??_LedParaInit,w
  4553  03C4  00CF               	movwf	I2C_ReadBuffer@pbuf
  4554  03C5  300B               	movlw	11
  4555  03C6  00D7               	movwf	??_LedParaInit+1
  4556  03C7  0857               	movf	??_LedParaInit+1,w
  4557  03C8  00D0               	movwf	I2C_ReadBuffer@len
  4558  03C9  3020               	movlw	32
  4559  03CA  3181  21CC  3183   	fcall	_I2C_ReadBuffer
  4560                           
  4561                           ;led.c: 188: for (i = 0; i < 2; i++)
  4562  03CD  0020               	movlb	0	; select bank0
  4563  03CE  01D8               	clrf	LedParaInit@i
  4564  03CF  3002               	movlw	2
  4565  03D0  0258               	subwf	LedParaInit@i,w
  4566  03D1  1803               	btfsc	3,0
  4567  03D2  2C0B               	goto	l1866
  4568  03D3                     l1854:	
  4569                           
  4570                           ;led.c: 189: {
  4571                           ;led.c: 190: if (gLedPara.bright[i] > 100)
  4572  03D3  0858               	movf	LedParaInit@i,w
  4573  03D4  3E45               	addlw	(low ((_gLedPara| 0+1)))& (0+255)
  4574  03D5  0086               	movwf	6
  4575  03D6  0187               	clrf	7
  4576  03D7  3065               	movlw	101
  4577  03D8  0201               	subwf	1,w
  4578  03D9  1C03               	skipc
  4579  03DA  2BE3               	goto	l445
  4580                           
  4581                           ;led.c: 191: {
  4582                           ;led.c: 192: gLedPara.bright[i] = 100;
  4583  03DB  3064               	movlw	100
  4584  03DC  00D6               	movwf	??_LedParaInit
  4585  03DD  0858               	movf	LedParaInit@i,w
  4586  03DE  3E45               	addlw	(low ((_gLedPara| 0+1)))& (0+255)
  4587  03DF  0086               	movwf	6
  4588  03E0  0187               	clrf	7
  4589  03E1  0856               	movf	??_LedParaInit,w
  4590  03E2  0081               	movwf	1
  4591  03E3                     l445:	
  4592                           
  4593                           ;led.c: 193: }
  4594                           ;led.c: 194: if (gLedPara.dayBright[i] > 100)
  4595  03E3  0858               	movf	LedParaInit@i,w
  4596  03E4  3E49               	addlw	(low ((_gLedPara| 0+5)))& (0+255)
  4597  03E5  0086               	movwf	6
  4598  03E6  0187               	clrf	7
  4599  03E7  3065               	movlw	101
  4600  03E8  0201               	subwf	1,w
  4601  03E9  1C03               	skipc
  4602  03EA  2BF3               	goto	l446
  4603                           
  4604                           ;led.c: 195: {
  4605                           ;led.c: 196: gLedPara.dayBright[i] = 100;
  4606  03EB  3064               	movlw	100
  4607  03EC  00D6               	movwf	??_LedParaInit
  4608  03ED  0858               	movf	LedParaInit@i,w
  4609  03EE  3E49               	addlw	(low ((_gLedPara| 0+5)))& (0+255)
  4610  03EF  0086               	movwf	6
  4611  03F0  0187               	clrf	7
  4612  03F1  0856               	movf	??_LedParaInit,w
  4613  03F2  0081               	movwf	1
  4614  03F3                     l446:	
  4615                           
  4616                           ;led.c: 197: }
  4617                           ;led.c: 198: if (gLedPara.nightBright[i] > 100)
  4618  03F3  0858               	movf	LedParaInit@i,w
  4619  03F4  3E4D               	addlw	(low ((_gLedPara| 0+9)))& (0+255)
  4620  03F5  0086               	movwf	6
  4621  03F6  0187               	clrf	7
  4622  03F7  3065               	movlw	101
  4623  03F8  0201               	subwf	1,w
  4624  03F9  1C03               	skipc
  4625  03FA  2C03               	goto	l1862
  4626                           
  4627                           ;led.c: 199: {
  4628                           ;led.c: 200: gLedPara.nightBright[i] = 100;
  4629  03FB  3064               	movlw	100
  4630  03FC  00D6               	movwf	??_LedParaInit
  4631  03FD  0858               	movf	LedParaInit@i,w
  4632  03FE  3E4D               	addlw	(low ((_gLedPara| 0+9)))& (0+255)
  4633  03FF  0086               	movwf	6
  4634  0400  0187               	clrf	7
  4635  0401  0856               	movf	??_LedParaInit,w
  4636  0402  0081               	movwf	1
  4637  0403                     l1862:	
  4638  0403  3001               	movlw	1
  4639  0404  00D6               	movwf	??_LedParaInit
  4640  0405  0856               	movf	??_LedParaInit,w
  4641  0406  07D8               	addwf	LedParaInit@i,f
  4642  0407  3002               	movlw	2
  4643  0408  0258               	subwf	LedParaInit@i,w
  4644  0409  1C03               	skipc
  4645  040A  2BD3               	goto	l1854
  4646  040B                     l1866:	
  4647                           
  4648                           ;led.c: 201: }
  4649                           ;led.c: 202: }
  4650                           ;led.c: 203: if(gLedPara.sunriseHour > 23)
  4651  040B  3018               	movlw	24
  4652  040C  0247               	subwf	_gLedPara+3,w
  4653  040D  1803               	btfsc	3,0
  4654                           
  4655                           ;led.c: 204: {
  4656                           ;led.c: 205: gLedPara.sunriseHour = 0;
  4657  040E  01C7               	clrf	_gLedPara+3
  4658                           
  4659                           ;led.c: 206: }
  4660                           ;led.c: 207: if(gLedPara.sunriseMin > 59)
  4661  040F  303C               	movlw	60
  4662  0410  0248               	subwf	_gLedPara+4,w
  4663  0411  1803               	btfsc	3,0
  4664                           
  4665                           ;led.c: 208: {
  4666                           ;led.c: 209: gLedPara.sunriseMin = 0;
  4667  0412  01C8               	clrf	_gLedPara+4
  4668                           
  4669                           ;led.c: 210: }
  4670                           ;led.c: 211: if(gLedPara.sunsetHour > 23)
  4671  0413  3018               	movlw	24
  4672  0414  024B               	subwf	_gLedPara+7,w
  4673  0415  1803               	btfsc	3,0
  4674                           
  4675                           ;led.c: 212: {
  4676                           ;led.c: 213: gLedPara.sunsetHour = 0;
  4677  0416  01CB               	clrf	_gLedPara+7
  4678                           
  4679                           ;led.c: 214: }
  4680                           ;led.c: 215: if(gLedPara.sunsetMin > 59)
  4681  0417  303C               	movlw	60
  4682  0418  024C               	subwf	_gLedPara+8,w
  4683  0419  1C03               	skipc
  4684  041A  0008               	return
  4685                           
  4686                           ;led.c: 216: {
  4687                           ;led.c: 217: gLedPara.sunsetMin = 0;
  4688  041B  01CC               	clrf	_gLedPara+8
  4689  041C  0008               	return
  4690  041D                     __end_of_LedParaInit:	
  4691                           
  4692                           	psect	text24
  4693  01CC                     __ptext24:	
  4694 ;; *************** function _I2C_ReadBuffer *****************
  4695 ;; Defined at:
  4696 ;;		line 162 in file "i2c.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  suba            1    wreg     unsigned char 
  4699 ;;  pbuf            1    0[BANK0 ] PTR unsigned char 
  4700 ;;		 -> gLedPara(11), 
  4701 ;;  len             1    1[BANK0 ] unsigned char 
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;  suba            1    4[BANK0 ] unsigned char 
  4704 ;;  i               1    6[BANK0 ] unsigned char 
  4705 ;;  n               1    5[BANK0 ] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4715 ;;      Params:         0       2       0       0
  4716 ;;      Locals:         0       3       0       0
  4717 ;;      Temps:          0       2       0       0
  4718 ;;      Totals:         0       7       0       0
  4719 ;;Total ram usage:        7 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    4
  4722 ;; This function calls:
  4723 ;;		_CheckSSPIF
  4724 ;; This function is called by:
  4725 ;;		_LedParaInit
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           
  4730                           ;psect for function _I2C_ReadBuffer
  4731  01CC                     _I2C_ReadBuffer:	
  4732                           
  4733                           ;incstack = 0
  4734                           ; Regs used in _I2C_ReadBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4735                           ;I2C_ReadBuffer@suba stored from wreg
  4736  01CC  0020               	movlb	0	; select bank0
  4737  01CD  00D3               	movwf	I2C_ReadBuffer@suba
  4738                           
  4739                           ;i2c.c: 164: unsigned char i = 0;
  4740  01CE  01D5               	clrf	I2C_ReadBuffer@i
  4741                           
  4742                           ;i2c.c: 165: unsigned char n = 0;
  4743  01CF  01D4               	clrf	I2C_ReadBuffer@n
  4744  01D0                     L3:	
  4745                           
  4746                           ;i2c.c: 167: SSP1CON2bits.SEN = 1;
  4747  01D0  0024               	movlb	4	; select bank4
  4748  01D1  1416               	bsf	22,0	;volatile
  4749                           
  4750                           ;i2c.c: 168: CheckSSPIF();
  4751  01D2  3186  2694  3181   	fcall	_CheckSSPIF
  4752                           
  4753                           ;i2c.c: 170: SSP1BUF = 0xA0;
  4754  01D5  30A0               	movlw	160
  4755  01D6  0024               	movlb	4	; select bank4
  4756  01D7  0091               	movwf	17	;volatile
  4757                           
  4758                           ;i2c.c: 171: CheckSSPIF();
  4759  01D8  3186  2694  3181   	fcall	_CheckSSPIF
  4760                           
  4761                           ;i2c.c: 172: while(SSP1CON2bits.ACKSTAT)
  4762  01DB  0024               	movlb	4	; select bank4
  4763  01DC  1F16               	btfss	22,6	;volatile
  4764  01DD  29F1               	goto	l1710
  4765                           
  4766                           ;i2c.c: 173: {
  4767                           ;i2c.c: 174: n ++;
  4768  01DE  3001               	movlw	1
  4769  01DF  0020               	movlb	0	; select bank0
  4770  01E0  00D1               	movwf	??_I2C_ReadBuffer
  4771  01E1  0851               	movf	??_I2C_ReadBuffer,w
  4772  01E2  07D4               	addwf	I2C_ReadBuffer@n,f
  4773                           
  4774                           ;i2c.c: 175: if(n > 10)
  4775  01E3  300B               	movlw	11
  4776  01E4  0254               	subwf	I2C_ReadBuffer@n,w
  4777  01E5  1803               	btfsc	3,0
  4778  01E6  0008               	return
  4779                           
  4780                           ;i2c.c: 178: }
  4781                           ;i2c.c: 179: _delay((unsigned long)((1)*(16000000/4000.0)));
  4782                           
  4783                           ;i2c.c: 176: {
  4784                           ;i2c.c: 177: return ;
  4785  01E7  3006               	movlw	6
  4786  01E8  0020               	movlb	0	; select bank0
  4787  01E9  00D1               	movwf	??_I2C_ReadBuffer
  4788  01EA  3030               	movlw	48
  4789  01EB                     u1767:	
  4790  01EB  0B89               	decfsz	9,f
  4791  01EC  29EB               	goto	u1767
  4792  01ED  0BD1               	decfsz	??_I2C_ReadBuffer,f
  4793  01EE  29EB               	goto	u1767
  4794  01EF  0000               	nop
  4795  01F0  29D0               	goto	L3
  4796  01F1                     l1710:	
  4797                           ;i2c.c: 183: CheckSSPIF();
  4798                           
  4799                           ;i2c.c: 182: SSP1BUF = 0xA0;
  4800                           
  4801                           ;i2c.c: 181: CheckSSPIF();
  4802                           
  4803                           ;i2c.c: 180: SSP1CON2bits.SEN = 1;
  4804                           
  4805                           
  4806                           ;i2c.c: 184: }
  4807                           ;i2c.c: 186: SSP1BUF = suba;
  4808  01F1  0020               	movlb	0	; select bank0
  4809  01F2  0853               	movf	I2C_ReadBuffer@suba,w
  4810  01F3  0024               	movlb	4	; select bank4
  4811  01F4  0091               	movwf	17	;volatile
  4812                           
  4813                           ;i2c.c: 187: CheckSSPIF();
  4814  01F5  3186  2694  3181   	fcall	_CheckSSPIF
  4815                           
  4816                           ;i2c.c: 188: if(SSP1CON2bits.ACKSTAT)
  4817  01F8  0024               	movlb	4	; select bank4
  4818  01F9  1B16               	btfsc	22,6	;volatile
  4819  01FA  0008               	return
  4820                           
  4821                           ;i2c.c: 191: }
  4822                           ;i2c.c: 193: SSP1CON2bits.RSEN = 1;
  4823                           
  4824                           ;i2c.c: 189: {
  4825                           ;i2c.c: 190: return ;
  4826  01FB  1496               	bsf	22,1	;volatile
  4827                           
  4828                           ;i2c.c: 194: CheckSSPIF();
  4829  01FC  3186  2694  3181   	fcall	_CheckSSPIF
  4830                           
  4831                           ;i2c.c: 195: SSP1BUF = 0xA0 + 1;
  4832  01FF  30A1               	movlw	161
  4833  0200  0024               	movlb	4	; select bank4
  4834  0201  0091               	movwf	17	;volatile
  4835                           
  4836                           ;i2c.c: 196: CheckSSPIF();
  4837  0202  3186  2694  3181   	fcall	_CheckSSPIF
  4838                           
  4839                           ;i2c.c: 197: if(SSP1CON2bits.ACKSTAT)
  4840  0205  0024               	movlb	4	; select bank4
  4841  0206  1B16               	btfsc	22,6	;volatile
  4842  0207  0008               	return
  4843                           
  4844                           ;i2c.c: 200: }
  4845                           ;i2c.c: 202: for(i = 0;i < len - 1;i ++)
  4846                           
  4847                           ;i2c.c: 198: {
  4848                           ;i2c.c: 199: return ;
  4849  0208  0020               	movlb	0	; select bank0
  4850  0209  01D5               	clrf	I2C_ReadBuffer@i
  4851  020A                     l1742:	
  4852  020A  0850               	movf	I2C_ReadBuffer@len,w
  4853  020B  3EFF               	addlw	255
  4854  020C  00D1               	movwf	??_I2C_ReadBuffer
  4855  020D  30FF               	movlw	255
  4856  020E  1803               	skipnc
  4857  020F  3000               	movlw	0
  4858  0210  00D2               	movwf	??_I2C_ReadBuffer+1
  4859  0211  0852               	movf	??_I2C_ReadBuffer+1,w
  4860  0212  3A80               	xorlw	128
  4861  0213  3C80               	sublw	128
  4862  0214  1D03               	skipz
  4863  0215  2A18               	goto	u1055
  4864  0216  0851               	movf	??_I2C_ReadBuffer,w
  4865  0217  0255               	subwf	I2C_ReadBuffer@i,w
  4866  0218                     u1055:	
  4867  0218  1803               	btfsc	3,0
  4868  0219  2A37               	goto	l230
  4869                           
  4870                           ;i2c.c: 203: {
  4871                           ;i2c.c: 204: SSP1CON2bits.RCEN = 1;
  4872  021A  0024               	movlb	4	; select bank4
  4873  021B  1596               	bsf	22,3	;volatile
  4874                           
  4875                           ;i2c.c: 205: CheckSSPIF();
  4876  021C  3186  2694  3181   	fcall	_CheckSSPIF
  4877                           
  4878                           ;i2c.c: 206: *(pbuf + i) = SSP1BUF;
  4879  021F  0024               	movlb	4	; select bank4
  4880  0220  0811               	movf	17,w	;volatile
  4881  0221  0020               	movlb	0	; select bank0
  4882  0222  00D1               	movwf	??_I2C_ReadBuffer
  4883  0223  0855               	movf	I2C_ReadBuffer@i,w
  4884  0224  074F               	addwf	I2C_ReadBuffer@pbuf,w
  4885  0225  00D2               	movwf	??_I2C_ReadBuffer+1
  4886  0226  0852               	movf	??_I2C_ReadBuffer+1,w
  4887  0227  0086               	movwf	6
  4888  0228  0187               	clrf	7
  4889  0229  0851               	movf	??_I2C_ReadBuffer,w
  4890  022A  0081               	movwf	1
  4891                           
  4892                           ;i2c.c: 207: SSP1CON2bits.ACKDT = 0;
  4893  022B  0024               	movlb	4	; select bank4
  4894  022C  1296               	bcf	22,5	;volatile
  4895                           
  4896                           ;i2c.c: 208: SSP1CON2bits.ACKEN = 1;
  4897  022D  1616               	bsf	22,4	;volatile
  4898                           
  4899                           ;i2c.c: 209: CheckSSPIF();
  4900  022E  3186  2694  3181   	fcall	_CheckSSPIF
  4901  0231  3001               	movlw	1
  4902  0232  0020               	movlb	0	; select bank0
  4903  0233  00D1               	movwf	??_I2C_ReadBuffer
  4904  0234  0851               	movf	??_I2C_ReadBuffer,w
  4905  0235  07D5               	addwf	I2C_ReadBuffer@i,f
  4906  0236  2A0A               	goto	l1742
  4907  0237                     l230:	
  4908                           
  4909                           ;i2c.c: 210: }
  4910                           ;i2c.c: 211: SSP1CON2bits.RCEN = 1;
  4911  0237  0024               	movlb	4	; select bank4
  4912  0238  1596               	bsf	22,3	;volatile
  4913                           
  4914                           ;i2c.c: 212: CheckSSPIF();
  4915  0239  3186  2694  3181   	fcall	_CheckSSPIF
  4916                           
  4917                           ;i2c.c: 213: *(pbuf + len - 1) = SSP1BUF;
  4918  023C  0024               	movlb	4	; select bank4
  4919  023D  0811               	movf	17,w	;volatile
  4920  023E  0020               	movlb	0	; select bank0
  4921  023F  00D1               	movwf	??_I2C_ReadBuffer
  4922  0240  0850               	movf	I2C_ReadBuffer@len,w
  4923  0241  074F               	addwf	I2C_ReadBuffer@pbuf,w
  4924  0242  00D2               	movwf	??_I2C_ReadBuffer+1
  4925  0243  0852               	movf	??_I2C_ReadBuffer+1,w
  4926  0244  3EFF               	addlw	-1
  4927  0245  0086               	movwf	6
  4928  0246  0187               	clrf	7
  4929  0247  0851               	movf	??_I2C_ReadBuffer,w
  4930  0248  0081               	movwf	1
  4931                           
  4932                           ;i2c.c: 214: SSP1CON2bits.ACKDT = 1;
  4933  0249  0024               	movlb	4	; select bank4
  4934  024A  1696               	bsf	22,5	;volatile
  4935                           
  4936                           ;i2c.c: 215: SSP1CON2bits.ACKEN = 1;
  4937  024B  1616               	bsf	22,4	;volatile
  4938                           
  4939                           ;i2c.c: 216: CheckSSPIF();
  4940  024C  3186  2694  3181   	fcall	_CheckSSPIF
  4941                           
  4942                           ;i2c.c: 218: SSP1CON2bits.PEN = 1;
  4943  024F  0024               	movlb	4	; select bank4
  4944  0250  1516               	bsf	22,2	;volatile
  4945                           
  4946                           ;i2c.c: 219: CheckSSPIF();
  4947  0251  3186  2694         	fcall	_CheckSSPIF
  4948  0253  0008               	return
  4949  0254                     __end_of_I2C_ReadBuffer:	
  4950                           
  4951                           	psect	text25
  4952  0694                     __ptext25:	
  4953 ;; *************** function _CheckSSPIF *****************
  4954 ;; Defined at:
  4955 ;;		line 20 in file "i2c.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;		None
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;		None
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      void 
  4962 ;; Registers used:
  4963 ;;		None
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4969 ;;      Params:         0       0       0       0
  4970 ;;      Locals:         0       0       0       0
  4971 ;;      Temps:          0       0       0       0
  4972 ;;      Totals:         0       0       0       0
  4973 ;;Total ram usage:        0 bytes
  4974 ;; Hardware stack levels used:    1
  4975 ;; Hardware stack levels required when called:    3
  4976 ;; This function calls:
  4977 ;;		Nothing
  4978 ;; This function is called by:
  4979 ;;		_I2C_WriteBuffer
  4980 ;;		_I2C_ReadBuffer
  4981 ;;		_I2C_WriteByte
  4982 ;;		_I2C_ReadByte
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           
  4987                           ;psect for function _CheckSSPIF
  4988  0694                     _CheckSSPIF:	
  4989  0694                     l185:	
  4990                           ;i2c.c: 22: while(!SSP1IF);
  4991                           
  4992                           ;incstack = 0
  4993                           ; Regs used in _CheckSSPIF: []
  4994                           
  4995  0694  0020               	movlb	0	; select bank0
  4996  0695  1D91               	btfss	17,3	;volatile
  4997  0696  2E94               	goto	l185
  4998                           
  4999                           ;i2c.c: 23: SSP1IF = 0;
  5000  0697  1191               	bcf	17,3	;volatile
  5001  0698  0008               	return
  5002  0699                     __end_of_CheckSSPIF:	
  5003                           
  5004                           	psect	text26
  5005  0031                     __ptext26:	
  5006 ;; *************** function _AutoMode *****************
  5007 ;; Defined at:
  5008 ;;		line 116 in file "led.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;		None
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  dTime           2   21[BANK0 ] int 
  5013 ;;  i               1   25[BANK0 ] unsigned char 
  5014 ;;  pendBright      1   24[BANK0 ] PTR unsigned char 
  5015 ;;		 -> gLedPara.nightBright(2), gLedPara.dayBright(2), gLedPara(11), 
  5016 ;;  pstartBright    1   23[BANK0 ] PTR unsigned char 
  5017 ;;		 -> gLedPara.nightBright(2), gLedPara.dayBright(2), gLedPara(11), 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      void 
  5020 ;; Registers used:
  5021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5027 ;;      Params:         0       0       0       0
  5028 ;;      Locals:         0       5       0       0
  5029 ;;      Temps:          0       7       0       0
  5030 ;;      Totals:         0      12       0       0
  5031 ;;Total ram usage:       12 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    5
  5034 ;; This function calls:
  5035 ;;		_PWM1_Enable
  5036 ;;		_PWM2_Enable
  5037 ;;		_TimeChangeSec
  5038 ;;		_UpdatePWM
  5039 ;;		___wmul
  5040 ;; This function is called by:
  5041 ;;		_main
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           
  5046                           ;psect for function _AutoMode
  5047  0031                     _AutoMode:	
  5048                           
  5049                           ;led.c: 118: unsigned char i;
  5050                           ;led.c: 119: unsigned char *pstartBright;
  5051                           ;led.c: 120: unsigned char *pendBright;
  5052                           ;led.c: 121: signed int dTime;
  5053                           ;led.c: 122: static unsigned char flag = 1;
  5054                           ;led.c: 124: if(!gLedPara.fAuto)
  5055                           
  5056                           ;incstack = 0
  5057                           ; Regs used in _AutoMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5058  0031  0020               	movlb	0	; select bank0
  5059  0032  1844               	btfsc	_gLedPara,0
  5060  0033  0008               	return
  5061                           
  5062                           ;led.c: 125: {
  5063                           ;led.c: 126: PWM1_Enable();
  5064  0034  3186  26AC  3180   	fcall	_PWM1_Enable
  5065                           
  5066                           ;led.c: 127: PWM2_Enable();
  5067  0037  3186  26A9  3180   	fcall	_PWM2_Enable
  5068                           
  5069                           ;led.c: 128: TimeChangeSec();
  5070  003A  3182  2254  3180   	fcall	_TimeChangeSec
  5071                           
  5072                           ;led.c: 130: if(gLedRunPara.sunrisetime == gLedRunPara.sunsettime)
  5073  003D  0020               	movlb	0	; select bank0
  5074  003E  0825               	movf	_gLedRunPara+5,w
  5075  003F  0623               	xorwf	_gLedRunPara+3,w
  5076  0040  1D03               	skipz
  5077  0041  2844               	goto	u1325
  5078  0042  0824               	movf	_gLedRunPara+4,w
  5079  0043  0622               	xorwf	_gLedRunPara+2,w
  5080  0044                     u1325:	
  5081  0044  1D03               	skipz
  5082  0045  286E               	goto	l1948
  5083                           
  5084                           ;led.c: 131: {
  5085                           ;led.c: 132: for(i = 0;i < 2;i++)
  5086  0046  01E8               	clrf	AutoMode@i
  5087  0047  3002               	movlw	2
  5088  0048  0268               	subwf	AutoMode@i,w
  5089  0049  1803               	btfsc	3,0
  5090  004A  286E               	goto	l1948
  5091  004B                     l1942:	
  5092                           
  5093                           ;led.c: 133: {
  5094                           ;led.c: 134: gLedRunPara.nCurrentLum[i] = (unsigned int)gLedPara.nightBright[i] * 10;
  5095  004B  0868               	movf	AutoMode@i,w
  5096  004C  3E4D               	addlw	(low ((_gLedPara| 0+9)))& (0+255)
  5097  004D  0086               	movwf	6
  5098  004E  0187               	clrf	7
  5099  004F  0801               	movf	1,w
  5100  0050  00DD               	movwf	??_AutoMode
  5101  0051  01DE               	clrf	??_AutoMode+1
  5102  0052  085D               	movf	??_AutoMode,w
  5103  0053  00CF               	movwf	___wmul@multiplier
  5104  0054  085E               	movf	??_AutoMode+1,w
  5105  0055  00D0               	movwf	___wmul@multiplier+1
  5106  0056  300A               	movlw	10
  5107  0057  00D1               	movwf	___wmul@multiplicand
  5108  0058  3000               	movlw	0
  5109  0059  00D2               	movwf	___wmul@multiplicand+1
  5110  005A  3185  25A5  3180   	fcall	___wmul
  5111  005D  0020               	movlb	0	; select bank0
  5112  005E  3568               	lslf	AutoMode@i,w
  5113  005F  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  5114  0060  0086               	movwf	6
  5115  0061  0187               	clrf	7
  5116  0062  084F               	movf	?___wmul,w
  5117  0063  3FC0               	movwi [0]fsr1
  5118  0064  0850               	movf	?___wmul+1,w
  5119  0065  3FC1               	movwi [1]fsr1
  5120  0066  3001               	movlw	1
  5121  0067  00DD               	movwf	??_AutoMode
  5122  0068  085D               	movf	??_AutoMode,w
  5123  0069  07E8               	addwf	AutoMode@i,f
  5124  006A  3002               	movlw	2
  5125  006B  0268               	subwf	AutoMode@i,w
  5126  006C  1C03               	skipc
  5127  006D  284B               	goto	l1942
  5128  006E                     l1948:	
  5129                           
  5130                           ;led.c: 135: }
  5131                           ;led.c: 136: }
  5132                           ;led.c: 137: if(((gLedRunPara.sunrisetime < gLedRunPara.sunsettime) && (gLedRunPara.sunr
      +                          isetime <= gLedRunPara.nCurrentTime) && (gLedRunPara.nCurrentTime < gLedRunPara.sunsetti
      +                          me))
  5133                           ;led.c: 138: || ((gLedRunPara.sunrisetime > gLedRunPara.sunsettime) && ((gLedRunPara.nCu
      +                          rrentTime >= gLedRunPara.sunrisetime) || (gLedRunPara.nCurrentTime < gLedRunPara.sunsett
      +                          ime))))
  5134  006E  0825               	movf	_gLedRunPara+5,w
  5135  006F  0223               	subwf	_gLedRunPara+3,w
  5136  0070  1D03               	skipz
  5137  0071  2874               	goto	u1355
  5138  0072  0824               	movf	_gLedRunPara+4,w
  5139  0073  0222               	subwf	_gLedRunPara+2,w
  5140  0074                     u1355:	
  5141  0074  1803               	skipnc
  5142  0075  2886               	goto	l1954
  5143  0076  0823               	movf	_gLedRunPara+3,w
  5144  0077  0221               	subwf	_gLedRunPara+1,w
  5145  0078  1D03               	skipz
  5146  0079  287C               	goto	u1365
  5147  007A  0822               	movf	_gLedRunPara+2,w
  5148  007B  0220               	subwf	_gLedRunPara,w
  5149  007C                     u1365:	
  5150  007C  1C03               	skipc
  5151  007D  2886               	goto	l1954
  5152  007E  0825               	movf	_gLedRunPara+5,w
  5153  007F  0221               	subwf	_gLedRunPara+1,w
  5154  0080  1D03               	skipz
  5155  0081  2884               	goto	u1375
  5156  0082  0824               	movf	_gLedRunPara+4,w
  5157  0083  0220               	subwf	_gLedRunPara,w
  5158  0084                     u1375:	
  5159  0084  1C03               	skipc
  5160  0085  289E               	goto	l1960
  5161  0086                     l1954:	
  5162  0086  0823               	movf	_gLedRunPara+3,w
  5163  0087  0225               	subwf	_gLedRunPara+5,w
  5164  0088  1D03               	skipz
  5165  0089  288C               	goto	u1385
  5166  008A  0822               	movf	_gLedRunPara+2,w
  5167  008B  0224               	subwf	_gLedRunPara+4,w
  5168  008C                     u1385:	
  5169  008C  1803               	skipnc
  5170  008D  28B1               	goto	l1966
  5171  008E  0823               	movf	_gLedRunPara+3,w
  5172  008F  0221               	subwf	_gLedRunPara+1,w
  5173  0090  1D03               	skipz
  5174  0091  2894               	goto	u1395
  5175  0092  0822               	movf	_gLedRunPara+2,w
  5176  0093  0220               	subwf	_gLedRunPara,w
  5177  0094                     u1395:	
  5178  0094  1803               	skipnc
  5179  0095  289E               	goto	l1960
  5180  0096  0825               	movf	_gLedRunPara+5,w
  5181  0097  0221               	subwf	_gLedRunPara+1,w
  5182  0098  1D03               	skipz
  5183  0099  289C               	goto	u1405
  5184  009A  0824               	movf	_gLedRunPara+4,w
  5185  009B  0220               	subwf	_gLedRunPara,w
  5186  009C                     u1405:	
  5187  009C  1803               	skipnc
  5188  009D  28B1               	goto	l1966
  5189  009E                     l1960:	
  5190                           
  5191                           ;led.c: 139: {
  5192                           ;led.c: 140: dTime = gLedRunPara.nCurrentTime - gLedRunPara.sunrisetime;
  5193  009E  0922               	comf	_gLedRunPara+2,w
  5194  009F  00DD               	movwf	??_AutoMode
  5195  00A0  0923               	comf	_gLedRunPara+3,w
  5196  00A1  00DE               	movwf	??_AutoMode+1
  5197  00A2  0ADD               	incf	??_AutoMode,f
  5198  00A3  1903               	skipnz
  5199  00A4  0ADE               	incf	??_AutoMode+1,f
  5200  00A5  0820               	movf	_gLedRunPara,w
  5201  00A6  075D               	addwf	??_AutoMode,w
  5202  00A7  00E4               	movwf	AutoMode@dTime
  5203  00A8  0821               	movf	_gLedRunPara+1,w
  5204  00A9  3D5E               	addwfc	??_AutoMode+1,w
  5205  00AA  00E5               	movwf	AutoMode@dTime+1
  5206                           
  5207                           ;led.c: 141: pstartBright = (unsigned char*)gLedPara.nightBright;
  5208  00AB  304D               	movlw	(low ((_gLedPara| 0+9)))& (0+255)
  5209  00AC  00DD               	movwf	??_AutoMode
  5210  00AD  085D               	movf	??_AutoMode,w
  5211  00AE  00E6               	movwf	AutoMode@pstartBright
  5212                           
  5213                           ;led.c: 142: pendBright = (unsigned char*)gLedPara.dayBright;
  5214  00AF  3049               	movlw	(low ((_gLedPara| 0+5)))& (0+255)
  5215  00B0  28C9               	goto	L4
  5216  00B1                     l1966:	
  5217                           ;led.c: 143: }
  5218                           
  5219                           
  5220                           ;led.c: 144: else
  5221                           ;led.c: 145: {
  5222                           ;led.c: 146: dTime = gLedRunPara.nCurrentTime - gLedRunPara.sunsettime;
  5223  00B1  0924               	comf	_gLedRunPara+4,w
  5224  00B2  00DD               	movwf	??_AutoMode
  5225  00B3  0925               	comf	_gLedRunPara+5,w
  5226  00B4  00DE               	movwf	??_AutoMode+1
  5227  00B5  0ADD               	incf	??_AutoMode,f
  5228  00B6  1903               	skipnz
  5229  00B7  0ADE               	incf	??_AutoMode+1,f
  5230  00B8  0820               	movf	_gLedRunPara,w
  5231  00B9  075D               	addwf	??_AutoMode,w
  5232  00BA  00E4               	movwf	AutoMode@dTime
  5233  00BB  0821               	movf	_gLedRunPara+1,w
  5234  00BC  3D5E               	addwfc	??_AutoMode+1,w
  5235  00BD  00E5               	movwf	AutoMode@dTime+1
  5236                           
  5237                           ;led.c: 147: if(dTime < 0)
  5238  00BE  1FE5               	btfss	AutoMode@dTime+1,7
  5239  00BF  28C4               	goto	l431
  5240                           
  5241                           ;led.c: 148: {
  5242                           ;led.c: 149: dTime += 43200;
  5243  00C0  30C0               	movlw	192
  5244  00C1  07E4               	addwf	AutoMode@dTime,f
  5245  00C2  30A8               	movlw	168
  5246  00C3  3DE5               	addwfc	AutoMode@dTime+1,f
  5247  00C4                     l431:	
  5248                           
  5249                           ;led.c: 150: }
  5250                           ;led.c: 151: pstartBright = (unsigned char*)gLedPara.dayBright;
  5251  00C4  3049               	movlw	(low ((_gLedPara| 0+5)))& (0+255)
  5252  00C5  00DD               	movwf	??_AutoMode
  5253  00C6  085D               	movf	??_AutoMode,w
  5254  00C7  00E6               	movwf	AutoMode@pstartBright
  5255                           
  5256                           ;led.c: 152: pendBright = (unsigned char*)gLedPara.nightBright;
  5257  00C8  304D               	movlw	(low ((_gLedPara| 0+9)))& (0+255)
  5258  00C9                     L4:	
  5259  00C9  00DD               	movwf	??_AutoMode
  5260  00CA  085D               	movf	??_AutoMode,w
  5261  00CB  00E7               	movwf	AutoMode@pendBright
  5262                           
  5263                           ;led.c: 153: }
  5264                           ;led.c: 154: for(i = 0;i < 2;i++)
  5265  00CC  01E8               	clrf	AutoMode@i
  5266  00CD  3002               	movlw	2
  5267  00CE  0268               	subwf	AutoMode@i,w
  5268  00CF  1803               	btfsc	3,0
  5269  00D0  29C9               	goto	l1996
  5270  00D1                     l1978:	
  5271                           
  5272                           ;led.c: 155: {
  5273                           ;led.c: 156: if(pstartBright[i] <= pendBright[i])
  5274  00D1  0868               	movf	AutoMode@i,w
  5275  00D2  0767               	addwf	AutoMode@pendBright,w
  5276  00D3  00DD               	movwf	??_AutoMode
  5277  00D4  085D               	movf	??_AutoMode,w
  5278  00D5  0086               	movwf	6
  5279  00D6  0187               	clrf	7
  5280  00D7  0868               	movf	AutoMode@i,w
  5281  00D8  0766               	addwf	AutoMode@pstartBright,w
  5282  00D9  00DE               	movwf	??_AutoMode+1
  5283  00DA  085E               	movf	??_AutoMode+1,w
  5284  00DB  0084               	movwf	4
  5285  00DC  0185               	clrf	5
  5286  00DD  0800               	movf	0,w
  5287  00DE  0201               	subwf	1,w
  5288  00DF  1C03               	skipc
  5289  00E0  294E               	goto	l1986
  5290                           
  5291                           ;led.c: 157: {
  5292                           ;led.c: 158: if(dTime < (unsigned int)(pendBright[i] - pstartBright[i]) * 10)
  5293  00E1  0868               	movf	AutoMode@i,w
  5294  00E2  0766               	addwf	AutoMode@pstartBright,w
  5295  00E3  00DD               	movwf	??_AutoMode
  5296  00E4  085D               	movf	??_AutoMode,w
  5297  00E5  0086               	movwf	6
  5298  00E6  0187               	clrf	7
  5299  00E7  0801               	movf	1,w
  5300  00E8  00DE               	movwf	??_AutoMode+1
  5301  00E9  01DF               	clrf	??_AutoMode+2
  5302  00EA  09DE               	comf	??_AutoMode+1,f
  5303  00EB  09DF               	comf	??_AutoMode+2,f
  5304  00EC  0ADE               	incf	??_AutoMode+1,f
  5305  00ED  1903               	skipnz
  5306  00EE  0ADF               	incf	??_AutoMode+2,f
  5307  00EF  0868               	movf	AutoMode@i,w
  5308  00F0  0767               	addwf	AutoMode@pendBright,w
  5309  00F1  00E0               	movwf	??_AutoMode+3
  5310  00F2  0860               	movf	??_AutoMode+3,w
  5311  00F3  0086               	movwf	6
  5312  00F4  0187               	clrf	7
  5313  00F5  0801               	movf	1,w
  5314  00F6  075E               	addwf	??_AutoMode+1,w
  5315  00F7  00CF               	movwf	___wmul@multiplier
  5316  00F8  085F               	movf	??_AutoMode+2,w
  5317  00F9  1803               	skipnc
  5318  00FA  0A5F               	incf	??_AutoMode+2,w
  5319  00FB  00D0               	movwf	___wmul@multiplier+1
  5320  00FC  300A               	movlw	10
  5321  00FD  00D1               	movwf	___wmul@multiplicand
  5322  00FE  3000               	movlw	0
  5323  00FF  00D2               	movwf	___wmul@multiplicand+1
  5324  0100  3185  25A5  3180   	fcall	___wmul
  5325  0103  0020               	movlb	0	; select bank0
  5326  0104  0850               	movf	?___wmul+1,w
  5327  0105  0265               	subwf	AutoMode@dTime+1,w
  5328  0106  1D03               	skipz
  5329  0107  290A               	goto	u1445
  5330  0108  084F               	movf	?___wmul,w
  5331  0109  0264               	subwf	AutoMode@dTime,w
  5332  010A                     u1445:	
  5333  010A  1803               	skipnc
  5334  010B  2930               	goto	l1984
  5335                           
  5336                           ;led.c: 159: {
  5337                           ;led.c: 160: gLedRunPara.nCurrentLum[i] = ((unsigned int)pstartBright[i] * 10) + dTime;
  5338  010C  0868               	movf	AutoMode@i,w
  5339  010D  0766               	addwf	AutoMode@pstartBright,w
  5340  010E  00DD               	movwf	??_AutoMode
  5341  010F  085D               	movf	??_AutoMode,w
  5342  0110  0086               	movwf	6
  5343  0111  0187               	clrf	7
  5344  0112  0801               	movf	1,w
  5345  0113  00DE               	movwf	??_AutoMode+1
  5346  0114  01DF               	clrf	??_AutoMode+2
  5347  0115  085E               	movf	??_AutoMode+1,w
  5348  0116  00CF               	movwf	___wmul@multiplier
  5349  0117  085F               	movf	??_AutoMode+2,w
  5350  0118  00D0               	movwf	___wmul@multiplier+1
  5351  0119  300A               	movlw	10
  5352  011A  00D1               	movwf	___wmul@multiplicand
  5353  011B  3000               	movlw	0
  5354  011C  00D2               	movwf	___wmul@multiplicand+1
  5355  011D  3185  25A5  3180   	fcall	___wmul
  5356  0120  0020               	movlb	0	; select bank0
  5357  0121  0864               	movf	AutoMode@dTime,w
  5358  0122  074F               	addwf	?___wmul,w
  5359  0123  00E0               	movwf	??_AutoMode+3
  5360  0124  0865               	movf	AutoMode@dTime+1,w
  5361  0125  3D50               	addwfc	?___wmul+1,w
  5362  0126  00E1               	movwf	??_AutoMode+4
  5363  0127  3568               	lslf	AutoMode@i,w
  5364  0128  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  5365  0129  0086               	movwf	6
  5366  012A  0187               	clrf	7
  5367  012B  0860               	movf	??_AutoMode+3,w
  5368  012C  3FC0               	movwi [0]fsr1
  5369  012D  0861               	movf	??_AutoMode+4,w
  5370  012E  3FC1               	movwi [1]fsr1
  5371                           
  5372                           ;led.c: 161: }
  5373  012F  29C1               	goto	l1992
  5374  0130                     l1984:	
  5375                           
  5376                           ;led.c: 162: else
  5377                           ;led.c: 163: {
  5378                           ;led.c: 164: gLedRunPara.nCurrentLum[i] = (unsigned int)pendBright[i] * 10;
  5379  0130  0868               	movf	AutoMode@i,w
  5380  0131  0767               	addwf	AutoMode@pendBright,w
  5381  0132  00DD               	movwf	??_AutoMode
  5382  0133  085D               	movf	??_AutoMode,w
  5383  0134  0086               	movwf	6
  5384  0135  0187               	clrf	7
  5385  0136  0801               	movf	1,w
  5386  0137  00DE               	movwf	??_AutoMode+1
  5387  0138  01DF               	clrf	??_AutoMode+2
  5388  0139  085E               	movf	??_AutoMode+1,w
  5389  013A  00CF               	movwf	___wmul@multiplier
  5390  013B  085F               	movf	??_AutoMode+2,w
  5391  013C  00D0               	movwf	___wmul@multiplier+1
  5392  013D  300A               	movlw	10
  5393  013E  00D1               	movwf	___wmul@multiplicand
  5394  013F  3000               	movlw	0
  5395  0140  00D2               	movwf	___wmul@multiplicand+1
  5396  0141  3185  25A5  3180   	fcall	___wmul
  5397  0144  0020               	movlb	0	; select bank0
  5398  0145  3568               	lslf	AutoMode@i,w
  5399  0146  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  5400  0147  0086               	movwf	6
  5401  0148  0187               	clrf	7
  5402  0149  084F               	movf	?___wmul,w
  5403  014A  3FC0               	movwi [0]fsr1
  5404  014B  0850               	movf	?___wmul+1,w
  5405  014C  3FC1               	movwi [1]fsr1
  5406                           
  5407                           ;led.c: 165: }
  5408                           ;led.c: 166: }
  5409  014D  29C1               	goto	l1992
  5410  014E                     l1986:	
  5411                           
  5412                           ;led.c: 167: else
  5413                           ;led.c: 168: {
  5414                           ;led.c: 169: if(dTime < (unsigned int)(pstartBright[i] - pendBright[i]) * 10)
  5415  014E  0868               	movf	AutoMode@i,w
  5416  014F  0767               	addwf	AutoMode@pendBright,w
  5417  0150  00DD               	movwf	??_AutoMode
  5418  0151  085D               	movf	??_AutoMode,w
  5419  0152  0086               	movwf	6
  5420  0153  0187               	clrf	7
  5421  0154  0801               	movf	1,w
  5422  0155  00DE               	movwf	??_AutoMode+1
  5423  0156  01DF               	clrf	??_AutoMode+2
  5424  0157  09DE               	comf	??_AutoMode+1,f
  5425  0158  09DF               	comf	??_AutoMode+2,f
  5426  0159  0ADE               	incf	??_AutoMode+1,f
  5427  015A  1903               	skipnz
  5428  015B  0ADF               	incf	??_AutoMode+2,f
  5429  015C  0868               	movf	AutoMode@i,w
  5430  015D  0766               	addwf	AutoMode@pstartBright,w
  5431  015E  00E0               	movwf	??_AutoMode+3
  5432  015F  0860               	movf	??_AutoMode+3,w
  5433  0160  0086               	movwf	6
  5434  0161  0187               	clrf	7
  5435  0162  0801               	movf	1,w
  5436  0163  075E               	addwf	??_AutoMode+1,w
  5437  0164  00CF               	movwf	___wmul@multiplier
  5438  0165  085F               	movf	??_AutoMode+2,w
  5439  0166  1803               	skipnc
  5440  0167  0A5F               	incf	??_AutoMode+2,w
  5441  0168  00D0               	movwf	___wmul@multiplier+1
  5442  0169  300A               	movlw	10
  5443  016A  00D1               	movwf	___wmul@multiplicand
  5444  016B  3000               	movlw	0
  5445  016C  00D2               	movwf	___wmul@multiplicand+1
  5446  016D  3185  25A5  3180   	fcall	___wmul
  5447  0170  0020               	movlb	0	; select bank0
  5448  0171  0850               	movf	?___wmul+1,w
  5449  0172  0265               	subwf	AutoMode@dTime+1,w
  5450  0173  1D03               	skipz
  5451  0174  2977               	goto	u1455
  5452  0175  084F               	movf	?___wmul,w
  5453  0176  0264               	subwf	AutoMode@dTime,w
  5454  0177                     u1455:	
  5455  0177  1803               	skipnc
  5456  0178  29A4               	goto	l1990
  5457                           
  5458                           ;led.c: 170: {
  5459                           ;led.c: 171: gLedRunPara.nCurrentLum[i] = ((unsigned int)pstartBright[i] * 10) - dTime;
  5460  0179  0964               	comf	AutoMode@dTime,w
  5461  017A  00DD               	movwf	??_AutoMode
  5462  017B  0965               	comf	AutoMode@dTime+1,w
  5463  017C  00DE               	movwf	??_AutoMode+1
  5464  017D  0ADD               	incf	??_AutoMode,f
  5465  017E  1903               	skipnz
  5466  017F  0ADE               	incf	??_AutoMode+1,f
  5467  0180  0868               	movf	AutoMode@i,w
  5468  0181  0766               	addwf	AutoMode@pstartBright,w
  5469  0182  00DF               	movwf	??_AutoMode+2
  5470  0183  085F               	movf	??_AutoMode+2,w
  5471  0184  0086               	movwf	6
  5472  0185  0187               	clrf	7
  5473  0186  0801               	movf	1,w
  5474  0187  00E0               	movwf	??_AutoMode+3
  5475  0188  01E1               	clrf	??_AutoMode+4
  5476  0189  0860               	movf	??_AutoMode+3,w
  5477  018A  00CF               	movwf	___wmul@multiplier
  5478  018B  0861               	movf	??_AutoMode+4,w
  5479  018C  00D0               	movwf	___wmul@multiplier+1
  5480  018D  300A               	movlw	10
  5481  018E  00D1               	movwf	___wmul@multiplicand
  5482  018F  3000               	movlw	0
  5483  0190  00D2               	movwf	___wmul@multiplicand+1
  5484  0191  3185  25A5  3180   	fcall	___wmul
  5485  0194  0020               	movlb	0	; select bank0
  5486  0195  085D               	movf	??_AutoMode,w
  5487  0196  074F               	addwf	?___wmul,w
  5488  0197  00E2               	movwf	??_AutoMode+5
  5489  0198  085E               	movf	??_AutoMode+1,w
  5490  0199  3D50               	addwfc	?___wmul+1,w
  5491  019A  00E3               	movwf	??_AutoMode+6
  5492  019B  3568               	lslf	AutoMode@i,w
  5493  019C  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  5494  019D  0086               	movwf	6
  5495  019E  0187               	clrf	7
  5496  019F  0862               	movf	??_AutoMode+5,w
  5497  01A0  3FC0               	movwi [0]fsr1
  5498  01A1  0863               	movf	??_AutoMode+6,w
  5499  01A2  3FC1               	movwi [1]fsr1
  5500                           
  5501                           ;led.c: 172: }
  5502  01A3  29C1               	goto	l1992
  5503  01A4                     l1990:	
  5504                           
  5505                           ;led.c: 173: else
  5506                           ;led.c: 174: {
  5507                           ;led.c: 175: gLedRunPara.nCurrentLum[i] = (unsigned int)pendBright[i] * 10;
  5508  01A4  0868               	movf	AutoMode@i,w
  5509  01A5  0767               	addwf	AutoMode@pendBright,w
  5510  01A6  00DD               	movwf	??_AutoMode
  5511  01A7  085D               	movf	??_AutoMode,w
  5512  01A8  0086               	movwf	6
  5513  01A9  0187               	clrf	7
  5514  01AA  0801               	movf	1,w
  5515  01AB  00DE               	movwf	??_AutoMode+1
  5516  01AC  01DF               	clrf	??_AutoMode+2
  5517  01AD  085E               	movf	??_AutoMode+1,w
  5518  01AE  00CF               	movwf	___wmul@multiplier
  5519  01AF  085F               	movf	??_AutoMode+2,w
  5520  01B0  00D0               	movwf	___wmul@multiplier+1
  5521  01B1  300A               	movlw	10
  5522  01B2  00D1               	movwf	___wmul@multiplicand
  5523  01B3  3000               	movlw	0
  5524  01B4  00D2               	movwf	___wmul@multiplicand+1
  5525  01B5  3185  25A5  3180   	fcall	___wmul
  5526  01B8  0020               	movlb	0	; select bank0
  5527  01B9  3568               	lslf	AutoMode@i,w
  5528  01BA  3E2A               	addlw	(low ((_gLedRunPara| 0+10)))& (0+255)
  5529  01BB  0086               	movwf	6
  5530  01BC  0187               	clrf	7
  5531  01BD  084F               	movf	?___wmul,w
  5532  01BE  3FC0               	movwi [0]fsr1
  5533  01BF  0850               	movf	?___wmul+1,w
  5534  01C0  3FC1               	movwi [1]fsr1
  5535  01C1                     l1992:	
  5536  01C1  3001               	movlw	1
  5537  01C2  00DD               	movwf	??_AutoMode
  5538  01C3  085D               	movf	??_AutoMode,w
  5539  01C4  07E8               	addwf	AutoMode@i,f
  5540  01C5  3002               	movlw	2
  5541  01C6  0268               	subwf	AutoMode@i,w
  5542  01C7  1C03               	skipc
  5543  01C8  28D1               	goto	l1978
  5544  01C9                     l1996:	
  5545                           
  5546                           ;led.c: 176: }
  5547                           ;led.c: 177: }
  5548                           ;led.c: 178: }
  5549                           ;led.c: 179: UpdatePWM();
  5550  01C9  3186  2623         	fcall	_UpdatePWM
  5551  01CB  0008               	return
  5552  01CC                     __end_of_AutoMode:	
  5553                           
  5554                           	psect	text27
  5555  0623                     __ptext27:	
  5556 ;; *************** function _UpdatePWM *****************
  5557 ;; Defined at:
  5558 ;;		line 18 in file "led.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;		None
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;		None
  5563 ;; Return value:  Size  Location     Type
  5564 ;;                  1    wreg      void 
  5565 ;; Registers used:
  5566 ;;		wreg, status,2, status,0, pclath, cstack
  5567 ;; Tracked objects:
  5568 ;;		On entry : 0/0
  5569 ;;		On exit  : 0/0
  5570 ;;		Unchanged: 0/0
  5571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5572 ;;      Params:         0       0       0       0
  5573 ;;      Locals:         0       0       0       0
  5574 ;;      Temps:          0       0       0       0
  5575 ;;      Totals:         0       0       0       0
  5576 ;;Total ram usage:        0 bytes
  5577 ;; Hardware stack levels used:    1
  5578 ;; Hardware stack levels required when called:    4
  5579 ;; This function calls:
  5580 ;;		_PWM1_LoadDutyValue
  5581 ;;		_PWM2_LoadDutyValue
  5582 ;; This function is called by:
  5583 ;;		_LedUpdatePara
  5584 ;;		_AutoMode
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           
  5589                           ;psect for function _UpdatePWM
  5590  0623                     _UpdatePWM:	
  5591                           
  5592                           ;led.c: 20: PWM1_LoadDutyValue(gLedRunPara.nCurrentLum[0]);
  5593                           
  5594                           ;incstack = 0
  5595                           ; Regs used in _UpdatePWM: [wreg+status,2+status,0+pclath+cstack]
  5596  0623  0020               	movlb	0	; select bank0
  5597  0624  082B               	movf	_gLedRunPara+11,w
  5598  0625  00D0               	movwf	PWM1_LoadDutyValue@dutyValue+1
  5599  0626  082A               	movf	_gLedRunPara+10,w
  5600  0627  00CF               	movwf	PWM1_LoadDutyValue@dutyValue
  5601  0628  3185  25DA  3186   	fcall	_PWM1_LoadDutyValue
  5602                           
  5603                           ;led.c: 21: PWM2_LoadDutyValue(gLedRunPara.nCurrentLum[1]);
  5604  062B  0020               	movlb	0	; select bank0
  5605  062C  082D               	movf	_gLedRunPara+13,w
  5606  062D  00D0               	movwf	PWM2_LoadDutyValue@dutyValue+1
  5607  062E  082C               	movf	_gLedRunPara+12,w
  5608  062F  00CF               	movwf	PWM2_LoadDutyValue@dutyValue
  5609  0630  3185  25C1         	fcall	_PWM2_LoadDutyValue
  5610  0632  0008               	return
  5611  0633                     __end_of_UpdatePWM:	
  5612                           
  5613                           	psect	text28
  5614  05C1                     __ptext28:	
  5615 ;; *************** function _PWM2_LoadDutyValue *****************
  5616 ;; Defined at:
  5617 ;;		line 42 in file "pwm.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  dutyValue       2    0[BANK0 ] unsigned int 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      void 
  5624 ;; Registers used:
  5625 ;;		wreg, status,2, status,0
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5631 ;;      Params:         0       2       0       0
  5632 ;;      Locals:         0       0       0       0
  5633 ;;      Temps:          0       2       0       0
  5634 ;;      Totals:         0       4       0       0
  5635 ;;Total ram usage:        4 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    3
  5638 ;; This function calls:
  5639 ;;		Nothing
  5640 ;; This function is called by:
  5641 ;;		_UpdatePWM
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           
  5646                           ;psect for function _PWM2_LoadDutyValue
  5647  05C1                     _PWM2_LoadDutyValue:	
  5648                           
  5649                           ;pwm.c: 44: PWM2DCL = (dutyValue & 0x03) << 6;
  5650                           
  5651                           ;incstack = 0
  5652                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2+status,0]
  5653  05C1  0020               	movlb	0	; select bank0
  5654  05C2  084F               	movf	PWM2_LoadDutyValue@dutyValue,w
  5655  05C3  3903               	andlw	3
  5656  05C4  00D1               	movwf	??_PWM2_LoadDutyValue
  5657  05C5  3005               	movlw	5
  5658  05C6                     u905:	
  5659  05C6  35D1               	lslf	??_PWM2_LoadDutyValue,f
  5660  05C7  3EFF               	addlw	-1
  5661  05C8  1D03               	skipz
  5662  05C9  2DC6               	goto	u905
  5663  05CA  3551               	lslf	??_PWM2_LoadDutyValue,w
  5664  05CB  002C               	movlb	12	; select bank12
  5665  05CC  0094               	movwf	20	;volatile
  5666                           
  5667                           ;pwm.c: 45: PWM2DCH = dutyValue >> 2;
  5668  05CD  0020               	movlb	0	; select bank0
  5669  05CE  0850               	movf	PWM2_LoadDutyValue@dutyValue+1,w
  5670  05CF  00D2               	movwf	??_PWM2_LoadDutyValue+1
  5671  05D0  084F               	movf	PWM2_LoadDutyValue@dutyValue,w
  5672  05D1  00D1               	movwf	??_PWM2_LoadDutyValue
  5673  05D2  36D2               	lsrf	??_PWM2_LoadDutyValue+1,f
  5674  05D3  0CD1               	rrf	??_PWM2_LoadDutyValue,f
  5675  05D4  36D2               	lsrf	??_PWM2_LoadDutyValue+1,f
  5676  05D5  0CD1               	rrf	??_PWM2_LoadDutyValue,f
  5677  05D6  0851               	movf	??_PWM2_LoadDutyValue,w
  5678  05D7  002C               	movlb	12	; select bank12
  5679  05D8  0095               	movwf	21	;volatile
  5680  05D9  0008               	return
  5681  05DA                     __end_of_PWM2_LoadDutyValue:	
  5682                           
  5683                           	psect	text29
  5684  05DA                     __ptext29:	
  5685 ;; *************** function _PWM1_LoadDutyValue *****************
  5686 ;; Defined at:
  5687 ;;		line 20 in file "pwm.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;  dutyValue       2    0[BANK0 ] unsigned int 
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;		None
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  1    wreg      void 
  5694 ;; Registers used:
  5695 ;;		wreg, status,2, status,0
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5701 ;;      Params:         0       2       0       0
  5702 ;;      Locals:         0       0       0       0
  5703 ;;      Temps:          0       2       0       0
  5704 ;;      Totals:         0       4       0       0
  5705 ;;Total ram usage:        4 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; Hardware stack levels required when called:    3
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_UpdatePWM
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           
  5716                           ;psect for function _PWM1_LoadDutyValue
  5717  05DA                     _PWM1_LoadDutyValue:	
  5718                           
  5719                           ;pwm.c: 22: PWM1DCL = (dutyValue & 0x03)<<6;
  5720                           
  5721                           ;incstack = 0
  5722                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2+status,0]
  5723  05DA  0020               	movlb	0	; select bank0
  5724  05DB  084F               	movf	PWM1_LoadDutyValue@dutyValue,w
  5725  05DC  3903               	andlw	3
  5726  05DD  00D1               	movwf	??_PWM1_LoadDutyValue
  5727  05DE  3005               	movlw	5
  5728  05DF                     u895:	
  5729  05DF  35D1               	lslf	??_PWM1_LoadDutyValue,f
  5730  05E0  3EFF               	addlw	-1
  5731  05E1  1D03               	skipz
  5732  05E2  2DDF               	goto	u895
  5733  05E3  3551               	lslf	??_PWM1_LoadDutyValue,w
  5734  05E4  002C               	movlb	12	; select bank12
  5735  05E5  0091               	movwf	17	;volatile
  5736                           
  5737                           ;pwm.c: 23: PWM1DCH = dutyValue >> 2;
  5738  05E6  0020               	movlb	0	; select bank0
  5739  05E7  0850               	movf	PWM1_LoadDutyValue@dutyValue+1,w
  5740  05E8  00D2               	movwf	??_PWM1_LoadDutyValue+1
  5741  05E9  084F               	movf	PWM1_LoadDutyValue@dutyValue,w
  5742  05EA  00D1               	movwf	??_PWM1_LoadDutyValue
  5743  05EB  36D2               	lsrf	??_PWM1_LoadDutyValue+1,f
  5744  05EC  0CD1               	rrf	??_PWM1_LoadDutyValue,f
  5745  05ED  36D2               	lsrf	??_PWM1_LoadDutyValue+1,f
  5746  05EE  0CD1               	rrf	??_PWM1_LoadDutyValue,f
  5747  05EF  0851               	movf	??_PWM1_LoadDutyValue,w
  5748  05F0  002C               	movlb	12	; select bank12
  5749  05F1  0092               	movwf	18	;volatile
  5750  05F2  0008               	return
  5751  05F3                     __end_of_PWM1_LoadDutyValue:	
  5752                           
  5753                           	psect	text30
  5754  0254                     __ptext30:	
  5755 ;; *************** function _TimeChangeSec *****************
  5756 ;; Defined at:
  5757 ;;		line 110 in file "led.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;		None
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;		None
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  1    wreg      void 
  5764 ;; Registers used:
  5765 ;;		wreg, status,2, status,0, pclath, cstack
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5771 ;;      Params:         0       0       0       0
  5772 ;;      Locals:         0       2       0       0
  5773 ;;      Temps:          0       6       0       0
  5774 ;;      Totals:         0       8       0       0
  5775 ;;Total ram usage:        8 bytes
  5776 ;; Hardware stack levels used:    1
  5777 ;; Hardware stack levels required when called:    4
  5778 ;; This function calls:
  5779 ;;		___wmul
  5780 ;; This function is called by:
  5781 ;;		_AutoMode
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           
  5786                           ;psect for function _TimeChangeSec
  5787  0254                     _TimeChangeSec:	
  5788                           
  5789                           ;led.c: 112: gLedRunPara.nCurrentTime = (gCurrentTime.datatime.hour * 60 + gCurrentTime.
      +                          datatime.minute) * 30 + gCurrentTime.datatime.second;
  5790                           
  5791                           ;incstack = 0
  5792                           ; Regs used in _TimeChangeSec: [wreg+status,2+status,0+pclath+cstack]
  5793  0254  0020               	movlb	0	; select bank0
  5794  0255  0830               	movf	_gCurrentTime+2,w	;volatile
  5795  0256  00D5               	movwf	??_TimeChangeSec
  5796  0257  01D6               	clrf	??_TimeChangeSec+1
  5797  0258  0831               	movf	_gCurrentTime+3,w	;volatile
  5798  0259  00D7               	movwf	??_TimeChangeSec+2
  5799  025A  01D8               	clrf	??_TimeChangeSec+3
  5800  025B  0857               	movf	??_TimeChangeSec+2,w
  5801  025C  00CF               	movwf	___wmul@multiplier
  5802  025D  0858               	movf	??_TimeChangeSec+3,w
  5803  025E  00D0               	movwf	___wmul@multiplier+1
  5804  025F  303C               	movlw	60
  5805  0260  00D1               	movwf	___wmul@multiplicand
  5806  0261  3000               	movlw	0
  5807  0262  00D2               	movwf	___wmul@multiplicand+1
  5808  0263  3185  25A5  3182   	fcall	___wmul
  5809  0266  0020               	movlb	0	; select bank0
  5810  0267  0855               	movf	??_TimeChangeSec,w
  5811  0268  074F               	addwf	?___wmul,w
  5812  0269  00D9               	movwf	??_TimeChangeSec+4
  5813  026A  0856               	movf	??_TimeChangeSec+1,w
  5814  026B  3D50               	addwfc	?___wmul+1,w
  5815  026C  00DA               	movwf	??_TimeChangeSec+5
  5816  026D  0859               	movf	??_TimeChangeSec+4,w
  5817  026E  00DB               	movwf	_TimeChangeSec$1560
  5818  026F  085A               	movf	??_TimeChangeSec+5,w
  5819  0270  00DC               	movwf	_TimeChangeSec$1560+1
  5820                           
  5821                           ;led.c: 112: gLedRunPara.nCurrentTime = (gCurrentTime.datatime.hour * 60 + gCurrentTime.
      +                          datatime.minute) * 30 + gCurrentTime.datatime.second;
  5822  0271  082F               	movf	_gCurrentTime+1,w	;volatile
  5823  0272  00D5               	movwf	??_TimeChangeSec
  5824  0273  01D6               	clrf	??_TimeChangeSec+1
  5825  0274  085C               	movf	_TimeChangeSec$1560+1,w
  5826  0275  00D0               	movwf	___wmul@multiplier+1
  5827  0276  085B               	movf	_TimeChangeSec$1560,w
  5828  0277  00CF               	movwf	___wmul@multiplier
  5829  0278  301E               	movlw	30
  5830  0279  00D1               	movwf	___wmul@multiplicand
  5831  027A  3000               	movlw	0
  5832  027B  00D2               	movwf	___wmul@multiplicand+1
  5833  027C  3185  25A5  3182   	fcall	___wmul
  5834  027F  0020               	movlb	0	; select bank0
  5835  0280  0855               	movf	??_TimeChangeSec,w
  5836  0281  074F               	addwf	?___wmul,w
  5837  0282  00D7               	movwf	??_TimeChangeSec+2
  5838  0283  0856               	movf	??_TimeChangeSec+1,w
  5839  0284  3D50               	addwfc	?___wmul+1,w
  5840  0285  00D8               	movwf	??_TimeChangeSec+3
  5841  0286  0857               	movf	??_TimeChangeSec+2,w
  5842  0287  00A0               	movwf	_gLedRunPara
  5843  0288  0858               	movf	??_TimeChangeSec+3,w
  5844  0289  00A1               	movwf	_gLedRunPara+1
  5845                           
  5846                           ;led.c: 113: gLedRunPara.sunrisetime = (gLedPara.sunriseHour * 60 + gLedPara.sunriseMin)
      +                           * 30;
  5847  028A  0848               	movf	_gLedPara+4,w
  5848  028B  00D5               	movwf	??_TimeChangeSec
  5849  028C  01D6               	clrf	??_TimeChangeSec+1
  5850  028D  0847               	movf	_gLedPara+3,w
  5851  028E  00D7               	movwf	??_TimeChangeSec+2
  5852  028F  01D8               	clrf	??_TimeChangeSec+3
  5853  0290  0857               	movf	??_TimeChangeSec+2,w
  5854  0291  00CF               	movwf	___wmul@multiplier
  5855  0292  0858               	movf	??_TimeChangeSec+3,w
  5856  0293  00D0               	movwf	___wmul@multiplier+1
  5857  0294  303C               	movlw	60
  5858  0295  00D1               	movwf	___wmul@multiplicand
  5859  0296  3000               	movlw	0
  5860  0297  00D2               	movwf	___wmul@multiplicand+1
  5861  0298  3185  25A5  3182   	fcall	___wmul
  5862  029B  0020               	movlb	0	; select bank0
  5863  029C  0855               	movf	??_TimeChangeSec,w
  5864  029D  074F               	addwf	?___wmul,w
  5865  029E  00DB               	movwf	_TimeChangeSec$1560
  5866  029F  0856               	movf	??_TimeChangeSec+1,w
  5867  02A0  3D50               	addwfc	?___wmul+1,w
  5868  02A1  00DC               	movwf	_TimeChangeSec$1560+1
  5869                           
  5870                           ;led.c: 113: gLedRunPara.sunrisetime = (gLedPara.sunriseHour * 60 + gLedPara.sunriseMin)
      +                           * 30;
  5871  02A2  085C               	movf	_TimeChangeSec$1560+1,w
  5872  02A3  00D0               	movwf	___wmul@multiplier+1
  5873  02A4  085B               	movf	_TimeChangeSec$1560,w
  5874  02A5  00CF               	movwf	___wmul@multiplier
  5875  02A6  301E               	movlw	30
  5876  02A7  00D1               	movwf	___wmul@multiplicand
  5877  02A8  3000               	movlw	0
  5878  02A9  00D2               	movwf	___wmul@multiplicand+1
  5879  02AA  3185  25A5  3182   	fcall	___wmul
  5880  02AD  0020               	movlb	0	; select bank0
  5881  02AE  0850               	movf	?___wmul+1,w
  5882  02AF  00A3               	movwf	_gLedRunPara+3
  5883  02B0  084F               	movf	?___wmul,w
  5884  02B1  00A2               	movwf	_gLedRunPara+2
  5885                           
  5886                           ;led.c: 114: gLedRunPara.sunsettime = (gLedPara.sunsetHour * 60 + gLedPara.sunsetMin) * 
      +                          30;
  5887  02B2  084C               	movf	_gLedPara+8,w
  5888  02B3  00D5               	movwf	??_TimeChangeSec
  5889  02B4  01D6               	clrf	??_TimeChangeSec+1
  5890  02B5  084B               	movf	_gLedPara+7,w
  5891  02B6  00D7               	movwf	??_TimeChangeSec+2
  5892  02B7  01D8               	clrf	??_TimeChangeSec+3
  5893  02B8  0857               	movf	??_TimeChangeSec+2,w
  5894  02B9  00CF               	movwf	___wmul@multiplier
  5895  02BA  0858               	movf	??_TimeChangeSec+3,w
  5896  02BB  00D0               	movwf	___wmul@multiplier+1
  5897  02BC  303C               	movlw	60
  5898  02BD  00D1               	movwf	___wmul@multiplicand
  5899  02BE  3000               	movlw	0
  5900  02BF  00D2               	movwf	___wmul@multiplicand+1
  5901  02C0  3185  25A5  3182   	fcall	___wmul
  5902  02C3  0020               	movlb	0	; select bank0
  5903  02C4  0855               	movf	??_TimeChangeSec,w
  5904  02C5  074F               	addwf	?___wmul,w
  5905  02C6  00DB               	movwf	_TimeChangeSec$1560
  5906  02C7  0856               	movf	??_TimeChangeSec+1,w
  5907  02C8  3D50               	addwfc	?___wmul+1,w
  5908  02C9  00DC               	movwf	_TimeChangeSec$1560+1
  5909                           
  5910                           ;led.c: 114: gLedRunPara.sunsettime = (gLedPara.sunsetHour * 60 + gLedPara.sunsetMin) * 
      +                          30;
  5911  02CA  085C               	movf	_TimeChangeSec$1560+1,w
  5912  02CB  00D0               	movwf	___wmul@multiplier+1
  5913  02CC  085B               	movf	_TimeChangeSec$1560,w
  5914  02CD  00CF               	movwf	___wmul@multiplier
  5915  02CE  301E               	movlw	30
  5916  02CF  00D1               	movwf	___wmul@multiplicand
  5917  02D0  3000               	movlw	0
  5918  02D1  00D2               	movwf	___wmul@multiplicand+1
  5919  02D2  3185  25A5         	fcall	___wmul
  5920  02D4  0020               	movlb	0	; select bank0
  5921  02D5  0850               	movf	?___wmul+1,w
  5922  02D6  00A5               	movwf	_gLedRunPara+5
  5923  02D7  084F               	movf	?___wmul,w
  5924  02D8  00A4               	movwf	_gLedRunPara+4
  5925  02D9  0008               	return
  5926  02DA                     __end_of_TimeChangeSec:	
  5927                           
  5928                           	psect	text31
  5929  05A5                     __ptext31:	
  5930 ;; *************** function ___wmul *****************
  5931 ;; Defined at:
  5932 ;;		line 15 in file "F:\MPLAB XC8\MPLAB XC8\sources\common\Umul16.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5935 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;  product         2    4[BANK0 ] unsigned int 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  2    0[BANK0 ] unsigned int 
  5940 ;; Registers used:
  5941 ;;		wreg, status,2, status,0
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5947 ;;      Params:         0       4       0       0
  5948 ;;      Locals:         0       2       0       0
  5949 ;;      Temps:          0       0       0       0
  5950 ;;      Totals:         0       6       0       0
  5951 ;;Total ram usage:        6 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; Hardware stack levels required when called:    3
  5954 ;; This function calls:
  5955 ;;		Nothing
  5956 ;; This function is called by:
  5957 ;;		_manualMode
  5958 ;;		_TimeChangeSec
  5959 ;;		_AutoMode
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           
  5964                           ;psect for function ___wmul
  5965  05A5                     ___wmul:	
  5966                           
  5967                           ;incstack = 0
  5968                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5969  05A5  0020               	movlb	0	; select bank0
  5970  05A6  01D3               	clrf	___wmul@product
  5971  05A7  01D4               	clrf	___wmul@product+1
  5972  05A8                     l1598:	
  5973  05A8  1C4F               	btfss	___wmul@multiplier,0
  5974  05A9  2DAE               	goto	l456
  5975  05AA  0851               	movf	___wmul@multiplicand,w
  5976  05AB  07D3               	addwf	___wmul@product,f
  5977  05AC  0852               	movf	___wmul@multiplicand+1,w
  5978  05AD  3DD4               	addwfc	___wmul@product+1,f
  5979  05AE                     l456:	
  5980  05AE  3001               	movlw	1
  5981  05AF                     u985:	
  5982  05AF  35D1               	lslf	___wmul@multiplicand,f
  5983  05B0  0DD2               	rlf	___wmul@multiplicand+1,f
  5984  05B1  0B89               	decfsz	9,f
  5985  05B2  2DAF               	goto	u985
  5986  05B3  3001               	movlw	1
  5987  05B4                     u995:	
  5988  05B4  36D0               	lsrf	___wmul@multiplier+1,f
  5989  05B5  0CCF               	rrf	___wmul@multiplier,f
  5990  05B6  0B89               	decfsz	9,f
  5991  05B7  2DB4               	goto	u995
  5992  05B8  084F               	movf	___wmul@multiplier,w
  5993  05B9  0450               	iorwf	___wmul@multiplier+1,w
  5994  05BA  1D03               	btfss	3,2
  5995  05BB  2DA8               	goto	l1598
  5996  05BC  0854               	movf	___wmul@product+1,w
  5997  05BD  00D0               	movwf	?___wmul+1
  5998  05BE  0853               	movf	___wmul@product,w
  5999  05BF  00CF               	movwf	?___wmul
  6000  05C0  0008               	return
  6001  05C1                     __end_of___wmul:	
  6002                           
  6003                           	psect	text32
  6004  06A9                     __ptext32:	
  6005 ;; *************** function _PWM2_Enable *****************
  6006 ;; Defined at:
  6007 ;;		line 34 in file "pwm.c"
  6008 ;; Parameters:    Size  Location     Type
  6009 ;;		None
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;		None
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  1    wreg      void 
  6014 ;; Registers used:
  6015 ;;		None
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6021 ;;      Params:         0       0       0       0
  6022 ;;      Locals:         0       0       0       0
  6023 ;;      Temps:          0       0       0       0
  6024 ;;      Totals:         0       0       0       0
  6025 ;;Total ram usage:        0 bytes
  6026 ;; Hardware stack levels used:    1
  6027 ;; Hardware stack levels required when called:    3
  6028 ;; This function calls:
  6029 ;;		Nothing
  6030 ;; This function is called by:
  6031 ;;		_manualMode
  6032 ;;		_AutoMode
  6033 ;; This function uses a non-reentrant model
  6034 ;;
  6035                           
  6036                           
  6037                           ;psect for function _PWM2_Enable
  6038  06A9                     _PWM2_Enable:	
  6039                           
  6040                           ;pwm.c: 36: PWM2CONbits.PWM2EN = 1;
  6041                           
  6042                           ;incstack = 0
  6043                           ; Regs used in _PWM2_Enable: []
  6044  06A9  002C               	movlb	12	; select bank12
  6045  06AA  1796               	bsf	22,7	;volatile
  6046  06AB  0008               	return
  6047  06AC                     __end_of_PWM2_Enable:	
  6048                           
  6049                           	psect	text33
  6050  06AC                     __ptext33:	
  6051 ;; *************** function _PWM1_Enable *****************
  6052 ;; Defined at:
  6053 ;;		line 12 in file "pwm.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;		None
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;		None
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  1    wreg      void 
  6060 ;; Registers used:
  6061 ;;		None
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6067 ;;      Params:         0       0       0       0
  6068 ;;      Locals:         0       0       0       0
  6069 ;;      Temps:          0       0       0       0
  6070 ;;      Totals:         0       0       0       0
  6071 ;;Total ram usage:        0 bytes
  6072 ;; Hardware stack levels used:    1
  6073 ;; Hardware stack levels required when called:    3
  6074 ;; This function calls:
  6075 ;;		Nothing
  6076 ;; This function is called by:
  6077 ;;		_manualMode
  6078 ;;		_AutoMode
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           
  6083                           ;psect for function _PWM1_Enable
  6084  06AC                     _PWM1_Enable:	
  6085                           
  6086                           ;pwm.c: 14: PWM1CONbits.PWM1EN = 1;
  6087                           
  6088                           ;incstack = 0
  6089                           ; Regs used in _PWM1_Enable: []
  6090  06AC  002C               	movlb	12	; select bank12
  6091  06AD  1793               	bsf	19,7	;volatile
  6092  06AE  0008               	return
  6093  06AF                     __end_of_PWM1_Enable:	
  6094                           
  6095                           	psect	intentry
  6096  0004                     __pintentry:	
  6097 ;; *************** function _INTERRUPT_interruptManager *****************
  6098 ;; Defined at:
  6099 ;;		line 25 in file "command.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;		None
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;		None
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  1    wreg      void 
  6106 ;; Registers used:
  6107 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6113 ;;      Params:         0       0       0       0
  6114 ;;      Locals:         0       0       0       0
  6115 ;;      Temps:          1       0       0       0
  6116 ;;      Totals:         1       0       0       0
  6117 ;;Total ram usage:        1 bytes
  6118 ;; Hardware stack levels used:    1
  6119 ;; Hardware stack levels required when called:    2
  6120 ;; This function calls:
  6121 ;;		_Decode
  6122 ;;		_RunRTC
  6123 ;; This function is called by:
  6124 ;;		Interrupt level 1
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128  0004                     _INTERRUPT_interruptManager:	
  6129                           
  6130                           ;incstack = 0
  6131  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  6132                           
  6133                           ; Regs used in _INTERRUPT_interruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6134  0005  3180               	pagesel	$
  6135  0006  0020               	movlb	0	; select bank0
  6136  0007  087F               	movf	127,w
  6137  0008  00F8               	movwf	??_INTERRUPT_interruptManager
  6138                           
  6139                           ;command.c: 27: if(IOCBFbits.IOCBF7)
  6140  0009  0027               	movlb	7	; select bank7
  6141  000A  1F96               	btfss	22,7	;volatile
  6142  000B  2811               	goto	i1l291
  6143                           
  6144                           ;command.c: 28: {
  6145                           ;command.c: 29: IOCBFbits.IOCBF7 = 0;
  6146  000C  1396               	bcf	22,7	;volatile
  6147                           
  6148                           ;command.c: 30: Decode();
  6149  000D  3182  22DA  3180   	fcall	_Decode
  6150                           
  6151                           ;command.c: 31: }
  6152  0010  2818               	goto	i1l294
  6153  0011                     i1l291:	
  6154                           
  6155                           ;command.c: 32: else if(PIR1bits.TMR1IF)
  6156  0011  0020               	movlb	0	; select bank0
  6157  0012  1C11               	btfss	17,0	;volatile
  6158  0013  2818               	goto	i1l294
  6159                           
  6160                           ;command.c: 33: {
  6161                           ;command.c: 34: PIR1bits.TMR1IF = 0;
  6162  0014  1011               	bcf	17,0	;volatile
  6163                           
  6164                           ;command.c: 35: gCurrentTime.datatime.fSec = 1;
  6165  0015  142E               	bsf	_gCurrentTime,0	;volatile
  6166                           
  6167                           ;command.c: 36: RunRTC();
  6168  0016  3185  2588         	fcall	_RunRTC
  6169  0018                     i1l294:	
  6170  0018  0878               	movf	??_INTERRUPT_interruptManager,w
  6171  0019  0020               	movlb	0	; select bank0
  6172  001A  00FF               	movwf	127
  6173  001B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  6174  001C  0009               	retfie
  6175  001D                     __end_of_INTERRUPT_interruptManager:	
  6176                           
  6177                           	psect	text35
  6178  0588                     __ptext35:	
  6179 ;; *************** function _RunRTC *****************
  6180 ;; Defined at:
  6181 ;;		line 11 in file "rtc.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;		None
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;		None
  6186 ;; Return value:  Size  Location     Type
  6187 ;;                  1    wreg      void 
  6188 ;; Registers used:
  6189 ;;		wreg, status,2, status,0
  6190 ;; Tracked objects:
  6191 ;;		On entry : 0/0
  6192 ;;		On exit  : 0/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6195 ;;      Params:         0       0       0       0
  6196 ;;      Locals:         0       0       0       0
  6197 ;;      Temps:          1       0       0       0
  6198 ;;      Totals:         1       0       0       0
  6199 ;;Total ram usage:        1 bytes
  6200 ;; Hardware stack levels used:    1
  6201 ;; This function calls:
  6202 ;;		Nothing
  6203 ;; This function is called by:
  6204 ;;		_INTERRUPT_interruptManager
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           
  6209                           ;psect for function _RunRTC
  6210  0588                     _RunRTC:	
  6211                           
  6212                           ;rtc.c: 13: gCurrentTime.datatime.second ++;
  6213                           
  6214                           ;incstack = 0
  6215                           ; Regs used in _RunRTC: [wreg+status,2+status,0]
  6216  0588  3001               	movlw	1
  6217  0589  00F0               	movwf	??_RunRTC
  6218  058A  0870               	movf	??_RunRTC,w
  6219  058B  0020               	movlb	0	; select bank0
  6220  058C  07AF               	addwf	_gCurrentTime+1,f	;volatile
  6221                           
  6222                           ;rtc.c: 14: if(gCurrentTime.datatime.second > 29)
  6223  058D  301E               	movlw	30
  6224  058E  022F               	subwf	_gCurrentTime+1,w	;volatile
  6225  058F  1C03               	skipc
  6226  0590  0008               	return
  6227                           
  6228                           ;rtc.c: 15: {
  6229                           ;rtc.c: 16: gCurrentTime.datatime.second = 0;
  6230  0591  01AF               	clrf	_gCurrentTime+1	;volatile
  6231                           
  6232                           ;rtc.c: 17: gCurrentTime.datatime.minute ++;
  6233  0592  3001               	movlw	1
  6234  0593  00F0               	movwf	??_RunRTC
  6235  0594  0870               	movf	??_RunRTC,w
  6236  0595  07B0               	addwf	_gCurrentTime+2,f	;volatile
  6237                           
  6238                           ;rtc.c: 18: if(gCurrentTime.datatime.minute > 59)
  6239  0596  303C               	movlw	60
  6240  0597  0230               	subwf	_gCurrentTime+2,w	;volatile
  6241  0598  1C03               	skipc
  6242  0599  0008               	return
  6243                           
  6244                           ;rtc.c: 19: {
  6245                           ;rtc.c: 20: gCurrentTime.datatime.minute = 0;
  6246  059A  01B0               	clrf	_gCurrentTime+2	;volatile
  6247                           
  6248                           ;rtc.c: 21: gCurrentTime.datatime.hour ++;
  6249  059B  3001               	movlw	1
  6250  059C  00F0               	movwf	??_RunRTC
  6251  059D  0870               	movf	??_RunRTC,w
  6252  059E  07B1               	addwf	_gCurrentTime+3,f	;volatile
  6253                           
  6254                           ;rtc.c: 22: if(gCurrentTime.datatime.hour > 23)
  6255  059F  3018               	movlw	24
  6256  05A0  0231               	subwf	_gCurrentTime+3,w	;volatile
  6257  05A1  1C03               	skipc
  6258  05A2  0008               	return
  6259                           
  6260                           ;rtc.c: 23: {
  6261                           ;rtc.c: 24: gCurrentTime.datatime.hour = 0;
  6262  05A3  01B1               	clrf	_gCurrentTime+3	;volatile
  6263  05A4  0008               	return
  6264  05A5                     __end_of_RunRTC:	
  6265                           
  6266                           	psect	text36
  6267  02DA                     __ptext36:	
  6268 ;; *************** function _Decode *****************
  6269 ;; Defined at:
  6270 ;;		line 27 in file "IR_Decode.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;		None
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;		None
  6275 ;; Return value:  Size  Location     Type
  6276 ;;                  1    wreg      void 
  6277 ;; Registers used:
  6278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/0
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6284 ;;      Params:         0       0       0       0
  6285 ;;      Locals:         0       0       0       0
  6286 ;;      Temps:          2       0       0       0
  6287 ;;      Totals:         2       0       0       0
  6288 ;;Total ram usage:        2 bytes
  6289 ;; Hardware stack levels used:    1
  6290 ;; Hardware stack levels required when called:    1
  6291 ;; This function calls:
  6292 ;;		_CheckSum
  6293 ;; This function is called by:
  6294 ;;		_INTERRUPT_interruptManager
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           
  6299                           ;psect for function _Decode
  6300  02DA                     _Decode:	
  6301                           
  6302                           ;IR_Decode.c: 29: static unsigned char state = 0;
  6303                           ;IR_Decode.c: 30: static unsigned char rcv = 0;
  6304                           ;IR_Decode.c: 31: static unsigned char index = 0;
  6305                           ;IR_Decode.c: 32: if(RB7)
  6306                           
  6307                           ;incstack = 0
  6308                           ; Regs used in _Decode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6309  02DA  0020               	movlb	0	; select bank0
  6310  02DB  1F8D               	btfss	13,7	;volatile
  6311  02DC  2ADF               	goto	i1l2002
  6312                           
  6313                           ;IR_Decode.c: 33: {
  6314                           ;IR_Decode.c: 34: TMR0 = 0;
  6315  02DD  0195               	clrf	21	;volatile
  6316                           
  6317                           ;IR_Decode.c: 35: }
  6318  02DE  0008               	return
  6319  02DF                     i1l2002:	
  6320                           
  6321                           ;IR_Decode.c: 36: else
  6322                           ;IR_Decode.c: 37: {
  6323                           ;IR_Decode.c: 38: gRunPara.HighCount = TMR0;
  6324  02DF  0815               	movf	21,w	;volatile
  6325  02E0  00F6               	movwf	??_Decode
  6326  02E1  0876               	movf	??_Decode,w
  6327  02E2  00B2               	movwf	_gRunPara
  6328                           
  6329                           ;IR_Decode.c: 39: switch(state)
  6330  02E3  2B45               	goto	i1l2058
  6331  02E4                     i1l322:	
  6332                           ;IR_Decode.c: 40: {
  6333                           ;IR_Decode.c: 41: case 0:
  6334                           
  6335                           
  6336                           ;IR_Decode.c: 42: state = 1;
  6337  02E4  01FB               	clrf	Decode@state
  6338  02E5  0AFB               	incf	Decode@state,f
  6339                           
  6340                           ;IR_Decode.c: 43: break;
  6341  02E6  0008               	return
  6342  02E7                     i1l2004:	
  6343                           ;IR_Decode.c: 44: case 1:
  6344                           
  6345                           
  6346                           ;IR_Decode.c: 45: if((gRunPara.HighCount >= 140) && (gRunPara.HighCount <= 175))
  6347  02E7  308C               	movlw	140
  6348  02E8  0232               	subwf	_gRunPara,w
  6349  02E9  1C03               	skipc
  6350  02EA  2AF5               	goto	i1l2012
  6351  02EB  30B0               	movlw	176
  6352  02EC  0232               	subwf	_gRunPara,w
  6353  02ED  1803               	skipnc
  6354  02EE  2AF5               	goto	i1l2012
  6355                           
  6356                           ;IR_Decode.c: 46: {
  6357                           ;IR_Decode.c: 47: gRunPara.HighCount = 0;
  6358  02EF  01B2               	clrf	_gRunPara
  6359                           
  6360                           ;IR_Decode.c: 48: state = 2;
  6361  02F0  3002               	movlw	2
  6362  02F1  00F6               	movwf	??_Decode
  6363  02F2  0876               	movf	??_Decode,w
  6364  02F3  00FB               	movwf	Decode@state
  6365                           
  6366                           ;IR_Decode.c: 49: }
  6367  02F4  0008               	return
  6368  02F5                     i1l2012:	
  6369                           
  6370                           ;IR_Decode.c: 50: else
  6371                           ;IR_Decode.c: 51: {
  6372                           ;IR_Decode.c: 52: state = 0;
  6373  02F5  01FB               	clrf	Decode@state
  6374                           
  6375                           ;IR_Decode.c: 53: }
  6376                           ;IR_Decode.c: 54: break;
  6377  02F6  0008               	return
  6378  02F7                     i1l2014:	
  6379                           ;IR_Decode.c: 55: case 2:
  6380                           
  6381                           
  6382                           ;IR_Decode.c: 56: if((gRunPara.HighCount > 38) && (gRunPara.HighCount < 54))
  6383  02F7  3027               	movlw	39
  6384  02F8  0232               	subwf	_gRunPara,w
  6385  02F9  1C03               	skipc
  6386  02FA  2B01               	goto	i1l2022
  6387  02FB  3036               	movlw	54
  6388  02FC  0232               	subwf	_gRunPara,w
  6389  02FD  1803               	skipnc
  6390  02FE  2B01               	goto	i1l2022
  6391                           
  6392                           ;IR_Decode.c: 57: {
  6393                           ;IR_Decode.c: 58: gRunPara.HighCount = 0;
  6394  02FF  01B2               	clrf	_gRunPara
  6395  0300  2B15               	goto	i1l2030
  6396  0301                     i1l2022:	
  6397                           ;IR_Decode.c: 60: }
  6398                           
  6399                           ;IR_Decode.c: 59: gRunPara.nBit ++;
  6400                           
  6401                           
  6402                           ;IR_Decode.c: 61: else if((gRunPara.HighCount > 15) && (gRunPara.HighCount < 31))
  6403  0301  3010               	movlw	16
  6404  0302  0232               	subwf	_gRunPara,w
  6405  0303  1C03               	skipc
  6406  0304  2B1A               	goto	i1l2032
  6407  0305  301F               	movlw	31
  6408  0306  0232               	subwf	_gRunPara,w
  6409  0307  1803               	skipnc
  6410  0308  2B1A               	goto	i1l2032
  6411                           
  6412                           ;IR_Decode.c: 62: {
  6413                           ;IR_Decode.c: 63: gRunPara.HighCount = 0;
  6414  0309  01B2               	clrf	_gRunPara
  6415                           
  6416                           ;IR_Decode.c: 64: rcv |= 1 << gRunPara.nBit;
  6417  030A  3001               	movlw	1
  6418  030B  00F6               	movwf	??_Decode
  6419  030C  0A34               	incf	_gRunPara+2,w
  6420  030D  2B0F               	goto	u154_24
  6421  030E                     u154_25:	
  6422  030E  35F6               	lslf	??_Decode,f
  6423  030F                     u154_24:	
  6424  030F  0B89               	decfsz	9,f
  6425  0310  2B0E               	goto	u154_25
  6426  0311  0876               	movf	??_Decode,w
  6427  0312  00F7               	movwf	??_Decode+1
  6428  0313  0877               	movf	??_Decode+1,w
  6429  0314  04FA               	iorwf	Decode@rcv,f
  6430  0315                     i1l2030:	
  6431                           
  6432                           ;IR_Decode.c: 65: gRunPara.nBit ++;
  6433  0315  3001               	movlw	1
  6434  0316  00F6               	movwf	??_Decode
  6435  0317  0876               	movf	??_Decode,w
  6436  0318  07B4               	addwf	_gRunPara+2,f
  6437                           
  6438                           ;IR_Decode.c: 66: }
  6439  0319  2B1B               	goto	i1l2034
  6440  031A                     i1l2032:	
  6441                           
  6442                           ;IR_Decode.c: 67: else
  6443                           ;IR_Decode.c: 68: {
  6444                           ;IR_Decode.c: 69: state = 0;
  6445  031A  01FB               	clrf	Decode@state
  6446  031B                     i1l2034:	
  6447                           
  6448                           ;IR_Decode.c: 70: }
  6449                           ;IR_Decode.c: 71: if(gRunPara.nBit >= 8)
  6450  031B  3008               	movlw	8
  6451  031C  0234               	subwf	_gRunPara+2,w
  6452  031D  1C03               	skipc
  6453  031E  0008               	return
  6454                           
  6455                           ;IR_Decode.c: 72: {
  6456                           ;IR_Decode.c: 73: gRunPara.nBit = 0;
  6457  031F  01B4               	clrf	_gRunPara+2
  6458                           
  6459                           ;IR_Decode.c: 74: IR_ReveiveDataStructure.array[index] = rcv;
  6460  0320  087A               	movf	Decode@rcv,w
  6461  0321  00F6               	movwf	??_Decode
  6462  0322  0879               	movf	Decode@index,w
  6463  0323  3E36               	addlw	(low (_IR_ReveiveDataStructure| 0))& (0+255)
  6464  0324  0086               	movwf	6
  6465  0325  0187               	clrf	7
  6466  0326  0876               	movf	??_Decode,w
  6467  0327  0081               	movwf	1
  6468                           
  6469                           ;IR_Decode.c: 75: rcv = 0;
  6470  0328  01FA               	clrf	Decode@rcv
  6471                           
  6472                           ;IR_Decode.c: 76: index ++;
  6473  0329  3001               	movlw	1
  6474  032A  00F6               	movwf	??_Decode
  6475  032B  0876               	movf	??_Decode,w
  6476  032C  07F9               	addwf	Decode@index,f
  6477                           
  6478                           ;IR_Decode.c: 77: if(index >= 14)
  6479  032D  300E               	movlw	14
  6480  032E  0279               	subwf	Decode@index,w
  6481  032F  1C03               	skipc
  6482  0330  0008               	return
  6483                           
  6484                           ;IR_Decode.c: 78: {
  6485                           ;IR_Decode.c: 79: rcv = 0;
  6486  0331  01FA               	clrf	Decode@rcv
  6487                           
  6488                           ;IR_Decode.c: 80: index = 0;
  6489  0332  01F9               	clrf	Decode@index
  6490                           
  6491                           ;IR_Decode.c: 81: if(IR_ReveiveDataStructure.UserCode == 0x0A)
  6492  0333  0836               	movf	_IR_ReveiveDataStructure,w
  6493  0334  390F               	andlw	15
  6494  0335  3A0A               	xorlw	10
  6495  0336  1D03               	skipz
  6496  0337  2B43               	goto	i1l2054
  6497                           
  6498                           ;IR_Decode.c: 82: {
  6499                           ;IR_Decode.c: 83: if(CheckSum((unsigned char*)IR_ReveiveDataStructure.array,sizeof(IR_Re
      +                          veiveDataStructure.array) - 1) == IR_ReveiveDataStructure.array[13])
  6500  0338  300D               	movlw	13
  6501  0339  00F6               	movwf	??_Decode
  6502  033A  0876               	movf	??_Decode,w
  6503  033B  00F0               	movwf	CheckSum@len
  6504  033C  3036               	movlw	(low (_IR_ReveiveDataStructure| 0))& (0+255)
  6505  033D  3186  260B         	fcall	_CheckSum
  6506  033F  0020               	movlb	0	; select bank0
  6507  0340  0643               	xorwf	_IR_ReveiveDataStructure+13,w
  6508  0341  1903               	btfsc	3,2
  6509                           
  6510                           ;IR_Decode.c: 84: {
  6511                           ;IR_Decode.c: 85: gRunState.fRecKey = 1;
  6512  0342  1435               	bsf	_gRunState,0
  6513  0343                     i1l2054:	
  6514                           
  6515                           ;IR_Decode.c: 86: }
  6516                           ;IR_Decode.c: 87: }
  6517                           ;IR_Decode.c: 88: state = 0;
  6518  0343  01FB               	clrf	Decode@state
  6519                           
  6520                           ;IR_Decode.c: 94: }
  6521                           
  6522                           ;IR_Decode.c: 93: break;
  6523                           
  6524                           ;IR_Decode.c: 92: default:
  6525                           
  6526                           ;IR_Decode.c: 89: }
  6527                           ;IR_Decode.c: 90: }
  6528                           ;IR_Decode.c: 91: break;
  6529  0344  0008               	return
  6530  0345                     i1l2058:	
  6531  0345  087B               	movf	Decode@state,w
  6532                           
  6533                           ; Switch size 1, requested type "space"
  6534                           ; Number of cases is 3, Range of values is 0 to 2
  6535                           ; switch strategies available:
  6536                           ; Name         Instructions Cycles
  6537                           ; simple_byte           10     6 (average)
  6538                           ; direct_byte           12     6 (fixed)
  6539                           ; jumptable            260     6 (fixed)
  6540                           ;	Chosen strategy is simple_byte
  6541  0346  3A00               	xorlw	0	; case 0
  6542  0347  1903               	skipnz
  6543  0348  2AE4               	goto	i1l322
  6544  0349  3A01               	xorlw	1	; case 1
  6545  034A  1903               	skipnz
  6546  034B  2AE7               	goto	i1l2004
  6547  034C  3A03               	xorlw	3	; case 2
  6548  034D  1903               	skipnz
  6549  034E  2AF7               	goto	i1l2014
  6550  034F  2B51               	goto	i1l337
  6551  0350  0008               	return
  6552  0351                     i1l337:	
  6553  0351  0008               	return
  6554  0352                     __end_of_Decode:	
  6555                           
  6556                           	psect	text37
  6557  060B                     __ptext37:	
  6558 ;; *************** function _CheckSum *****************
  6559 ;; Defined at:
  6560 ;;		line 17 in file "IR_Decode.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  pbuf            1    wreg     PTR unsigned char 
  6563 ;;		 -> IR_ReveiveDataStructure(14), 
  6564 ;;  len             1    0[COMMON] unsigned char 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  pbuf            1    3[COMMON] PTR unsigned char 
  6567 ;;		 -> IR_ReveiveDataStructure(14), 
  6568 ;;  i               1    5[COMMON] unsigned char 
  6569 ;;  result          1    4[COMMON] unsigned char 
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  1    wreg      unsigned char 
  6572 ;; Registers used:
  6573 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6579 ;;      Params:         1       0       0       0
  6580 ;;      Locals:         3       0       0       0
  6581 ;;      Temps:          2       0       0       0
  6582 ;;      Totals:         6       0       0       0
  6583 ;;Total ram usage:        6 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; This function calls:
  6586 ;;		Nothing
  6587 ;; This function is called by:
  6588 ;;		_Decode
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           
  6592                           
  6593                           ;psect for function _CheckSum
  6594  060B                     _CheckSum:	
  6595                           
  6596                           ;incstack = 0
  6597                           ; Regs used in _CheckSum: [wreg+fsr1l+fsr1h+status,2+status,0]
  6598                           ;CheckSum@pbuf stored from wreg
  6599  060B  00F3               	movwf	CheckSum@pbuf
  6600                           
  6601                           ;IR_Decode.c: 19: unsigned char result = 0x00;
  6602  060C  01F4               	clrf	CheckSum@result
  6603                           
  6604                           ;IR_Decode.c: 20: unsigned char i;
  6605                           ;IR_Decode.c: 21: for(i = 0;i < len;i ++)
  6606  060D  01F5               	clrf	CheckSum@i
  6607  060E                     i1l1772:	
  6608  060E  0870               	movf	CheckSum@len,w
  6609  060F  0275               	subwf	CheckSum@i,w
  6610  0610  1803               	btfsc	3,0
  6611  0611  2E21               	goto	i1l1774
  6612                           
  6613                           ;IR_Decode.c: 22: {
  6614                           ;IR_Decode.c: 23: result += *(pbuf + i);
  6615  0612  0875               	movf	CheckSum@i,w
  6616  0613  0773               	addwf	CheckSum@pbuf,w
  6617  0614  00F1               	movwf	??_CheckSum
  6618  0615  0871               	movf	??_CheckSum,w
  6619  0616  0086               	movwf	6
  6620  0617  0187               	clrf	7
  6621  0618  0801               	movf	1,w
  6622  0619  00F2               	movwf	??_CheckSum+1
  6623  061A  0872               	movf	??_CheckSum+1,w
  6624  061B  07F4               	addwf	CheckSum@result,f
  6625  061C  3001               	movlw	1
  6626  061D  00F1               	movwf	??_CheckSum
  6627  061E  0871               	movf	??_CheckSum,w
  6628  061F  07F5               	addwf	CheckSum@i,f
  6629  0620  2E0E               	goto	i1l1772
  6630  0621                     i1l1774:	
  6631                           
  6632                           ;IR_Decode.c: 24: }
  6633                           ;IR_Decode.c: 25: return result;
  6634  0621  0874               	movf	CheckSum@result,w
  6635  0622  0008               	return
  6636  0623                     __end_of_CheckSum:	
  6637  007E                     btemp	set	126	;btemp
  6638  007E                     int$flags	set	126
  6639  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     26      73
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    AutoMode@pendBright	PTR unsigned char  size(1) Largest target is 11
		 -> gLedPara.nightBright(BANK0[2]), gLedPara.dayBright(BANK0[2]), gLedPara(BANK0[11]), 

    AutoMode@pstartBright	PTR unsigned char  size(1) Largest target is 11
		 -> gLedPara.nightBright(BANK0[2]), gLedPara.dayBright(BANK0[2]), gLedPara(BANK0[11]), 

    SaveLedPara@pbuf	PTR unsigned char  size(1) Largest target is 11
		 -> gLedPara(BANK0[11]), 

    CheckSum@pbuf	PTR unsigned char  size(1) Largest target is 14
		 -> IR_ReveiveDataStructure(BANK0[14]), 

    I2C_ReadBuffer@pbuf	PTR unsigned char  size(1) Largest target is 11
		 -> gLedPara(BANK0[11]), 

    I2C_WriteBuffer@pbuf	PTR unsigned char  size(1) Largest target is 11
		 -> gLedPara(BANK0[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_interruptManager in COMMON

    _INTERRUPT_interruptManager->_Decode
    _Decode->_CheckSum

Critical Paths under _main in BANK0

    _main->_AutoMode
    _manualMode->_LedUpdatePara
    _LedUpdate->_SaveLedPara
    _SaveLedPara->_I2C_WriteBuffer
    _LedParaInit->_I2C_ReadBuffer
    _AutoMode->_TimeChangeSec
    _UpdatePWM->_PWM1_LoadDutyValue
    _UpdatePWM->_PWM2_LoadDutyValue
    _TimeChangeSec->___wmul

Critical Paths under _INTERRUPT_interruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_interruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_interruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8836
                           _AutoMode
                        _LedParaInit
                          _LedUpdate
                  _SYSTEM_Initialize
                    _TMR1_StartTimer
                    _TMR2_StartTimer
                          _UpdateRTC
                         _manualMode
 ---------------------------------------------------------------------------------
 (1) _manualMode                                           3     3      0    2450
                                             11 BANK0      2     2      0
                      _LedUpdatePara
                       _PWM1_Disable
                        _PWM1_Enable
                       _PWM2_Disable
                        _PWM2_Enable
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _PWM2_Disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Disable                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LedUpdatePara                                        7     7      0     438
                                              4 BANK0      7     7      0
                          _UpdatePWM
 ---------------------------------------------------------------------------------
 (1) _UpdateRTC                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _I2C_Initialize
       _InterruptOnChange_Initialize
                  _OSCCON_Initialize
                     _PIN_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCCON_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InterruptOnChange_Initialize                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LedUpdate                                            2     2      0     671
                                             14 BANK0      2     2      0
                        _SaveLedPara
 ---------------------------------------------------------------------------------
 (2) _SaveLedPara                                          8     8      0     493
                                              6 BANK0      8     8      0
                    _I2C_WriteBuffer
 ---------------------------------------------------------------------------------
 (3) _I2C_WriteBuffer                                      6     4      2     265
                                              0 BANK0      6     4      2
                         _CheckSSPIF
 ---------------------------------------------------------------------------------
 (1) _LedParaInit                                          3     3      0     487
                                              7 BANK0      3     3      0
                     _I2C_ReadBuffer
 ---------------------------------------------------------------------------------
 (2) _I2C_ReadBuffer                                       7     5      2     309
                                              0 BANK0      7     5      2
                         _CheckSSPIF
 ---------------------------------------------------------------------------------
 (4) _CheckSSPIF                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AutoMode                                            12    12      0    5228
                                             14 BANK0     12    12      0
                        _PWM1_Enable
                        _PWM2_Enable
                      _TimeChangeSec
                          _UpdatePWM
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _UpdatePWM                                            0     0      0     216
                 _PWM1_LoadDutyValue
                 _PWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM2_LoadDutyValue                                   4     2      2     108
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _PWM1_LoadDutyValue                                   4     2      2     108
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _TimeChangeSec                                       12    12      0    2219
                                              6 BANK0      8     8      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2012
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _PWM2_Enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Enable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_interruptManager                           1     1      0     208
                                              8 COMMON     1     1      0
                             _Decode
                             _RunRTC
 ---------------------------------------------------------------------------------
 (6) _RunRTC                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Decode                                               2     2      0     208
                                              6 COMMON     2     2      0
                           _CheckSum
 ---------------------------------------------------------------------------------
 (7) _CheckSum                                             6     5      1     208
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AutoMode
     _PWM1_Enable
     _PWM2_Enable
     _TimeChangeSec
       ___wmul
     _UpdatePWM
       _PWM1_LoadDutyValue
       _PWM2_LoadDutyValue
     ___wmul
   _LedParaInit
     _I2C_ReadBuffer
       _CheckSSPIF
   _LedUpdate
     _SaveLedPara
       _I2C_WriteBuffer
         _CheckSSPIF
   _SYSTEM_Initialize
     _I2C_Initialize
     _InterruptOnChange_Initialize
     _OSCCON_Initialize
     _PIN_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR0_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
   _TMR1_StartTimer
   _TMR2_StartTimer
   _UpdateRTC
   _manualMode
     _LedUpdatePara
       _UpdatePWM
         _PWM1_LoadDutyValue
         _PWM2_LoadDutyValue
     _PWM1_Disable
     _PWM1_Enable
     _PWM2_Disable
     _PWM2_Enable
     ___wmul

 _INTERRUPT_interruptManager (ROOT)
   _Decode
     _CheckSum
   _RunRTC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      56       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1A      49       6       91.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      56      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Oct 24 15:26:04 2017

                          __CFG_CP$OFF 0000                                     l27 054D  
                  ___wmul@multiplicand 0051           ??_INTERRUPT_interruptManager 0078  
                                  l230 0237                                    l209 04BB  
                                  l250 0668                                    l431 00C4  
                                  l185 0694                                    l445 03E3  
                                  l446 03F3                                    l456 05AE  
                                  l388 053D                                    _RB7 006F  
                                  _PR2 001B                                    u905 05C6  
                                  u895 05DF                                    u985 05AF  
                                  u995 05B4                        _TMR2_Initialize 0659  
                      _PWM4_Initialize 066B                           __CFG_BORV$LO 0000  
                         AutoMode@flag 007C                                    wreg 0009  
                           _CheckSSPIF 0694                           __CFG_LVP$OFF 0000  
                                 l2104 055F                                   l1710 01F1  
                                 l1570 0496                                   l1810 0380  
                                 l2098 0558                                   l1820 03BD  
                                 l1742 020A                                   l1590 04A2  
                                 l1902 046E                                   l1814 03A9  
                                 l1806 0358                                   l1816 03B5  
                                 l1914 04DD                                   l1924 04FD  
                                 l1598 05A8                                   l1942 004B  
                                 l1862 0403                                   l1854 03D3  
                                 l1790 051F                                   l1918 04E3  
                                 l1960 009E                                   l1928 0503  
                                 l1954 0086                                   l1866 040B  
                                 l1948 006E                                   l1990 01A4  
                                 l1966 00B1                                   l1798 0511  
                                 l1992 01C1                                   l1984 0130  
                                 l1896 043F                                   l1986 014E  
                                 l1978 00D1                                   l1996 01C9  
              __end_of_PWM1_Initialize 0687                                   u1115 0374  
                                 u1125 039C                                   u1055 0218  
                  __end_of_LedParaInit 041D                                   u1405 009C  
                                 u1325 0044                                   u1355 0074  
                                 u1445 010A                                   u1365 007C  
                                 u1455 0177                                   u1375 0084  
                                 u1385 008C                                   u1395 0094  
                                 u1757 0490                                   u1767 01EB  
                                 _TMR0 0015                                   _TMR2 001A  
                         __CFG_WRT$OFF 0000                                   _main 053F  
                __end_of_TimeChangeSec 02DA                                   fsr0h 0005  
                                 fsr1h 0007                                   indf0 0000  
                                 fsr0l 0004                                   indf1 0001  
                                 fsr1l 0006                                   btemp 007E  
                        AutoMode@dTime 0064                                   start 001D  
                        __CFG_IESO$OFF 0000    __size_of_INTERRUPT_interruptManager 0019  
                        __CFG_MCLRE$ON 0000                __end_of_PWM2_Initialize 0680  
              __end_of_TMR0_Initialize 069D                        _I2C_WriteBuffer 0471  
                                ?_main 0070                          __CFG_WDTE$OFF 0000  
                      _TMR1_StartTimer 06A6                                  _IOCAF 0393  
                                _IOCBF 0396                                  i1l322 02E4  
                                i1l337 0351                                  i1l291 0011  
                                i1l294 0018                __size_of_PIN_Initialize 0018  
                       __CFG_FCMEN$OFF 0000                __end_of_PWM3_Initialize 0679  
              __end_of_TMR1_Initialize 0642                         __CFG_BOREN$OFF 0000  
                                status 0003                                  wtemp0 007E  
                     __end_of_CheckSum 0623                        _TMR2_StartTimer 06A3  
                      __initialization 001F                          ??_SaveLedPara 0055  
                         __end_of_main 0567                       __end_of_AutoMode 01CC  
                 AutoMode@pstartBright 0066                __end_of_PWM4_Initialize 0672  
              __end_of_TMR2_Initialize 0663                         __CFG_LPBOR$OFF 0000  
              _IR_ReveiveDataStructure 0036                                 ??_main 0069  
                          _LedParaInit 03C0                     __size_of_LedUpdate 0054  
                          ?_CheckSSPIF 0070                                 _ANSELA 018C  
                               _ANSELB 018D                                 _ANSELC 018E  
                               i1l2002 02DF                                 i1l2012 02F5  
                               i1l2004 02E7                                 i1l2030 0315  
                               i1l2022 0301                                 i1l2014 02F7  
                     ?_PWM1_Initialize 0070                                 i1l2032 031A  
                               i1l2034 031B                                 i1l2054 0343  
                               i1l2058 0345                                 i1l1772 060E  
                               i1l1774 0621                                 u154_24 030F  
                               u154_25 030E                                 _SSP1IF 008B  
                               _Decode 02DA                           ?_PWM1_Enable 0070  
                       __CFG_PWRTE$OFF 0000                           ?_PWM2_Enable 0070  
              __end_of_I2C_WriteBuffer 04C0                                 _RunRTC 0588  
              __end_of_TMR1_StartTimer 06A9                __size_of_I2C_ReadBuffer 0088  
                               ___wmul 05A5                         __CFG_STVREN$ON 0000  
   __end_of_INTERRUPT_interruptManager 001D             _INTERRUPT_interruptManager 0004  
                     ?_TMR0_Initialize 0070                       ?_PWM2_Initialize 0070  
              __size_of_I2C_Initialize 000D                    __end_of_SaveLedPara 053F  
                         __pdataCOMMON 007C                     __size_of_UpdateRTC 000A  
                   __size_of_UpdatePWM 0010                __end_of_TMR2_StartTimer 06A6  
                     ?_TMR1_Initialize 0070                       ?_PWM3_Initialize 0070  
                    _SYSTEM_Initialize 0567                __end_of__initialization 002D  
                   ?_SYSTEM_Initialize 0070             __end_of_PWM2_LoadDutyValue 05DA  
          PWM1_LoadDutyValue@dutyValue 004F                      __end_of_LedUpdate 0471  
                       __pcstackCOMMON 0070                    __size_of_CheckSSPIF 0005  
                __end_of_LedUpdatePara 03C0                    ??_SYSTEM_Initialize 004F  
                   _PWM1_LoadDutyValue 05DA                       ?_TMR2_Initialize 0070  
                     ?_PWM4_Initialize 0070                         _PIN_Initialize 05F3  
                            ?_CheckSum 0070                    ?_PWM1_LoadDutyValue 004F  
            __end_of_SYSTEM_Initialize 0588                              ?_AutoMode 0070  
                           __pbssBANK0 0020                                ?_Decode 0070  
                 ??_PWM1_LoadDutyValue 0051                      __end_of_UpdateRTC 0659  
                    __end_of_UpdatePWM 0633                             __pmaintext 053F  
                              ?_RunRTC 0070                       ?_I2C_WriteBuffer 004F  
                              ?___wmul 004F                            _SaveLedPara 0506  
                     ?_TMR1_StartTimer 0070                             __pintentry 0004  
               __end_of_PIN_Initialize 060B                             ??_CheckSum 0071  
                              _PWM1DCH 0612                                _PWM1DCL 0611  
                              _PWM2DCH 0615                                _PWM2DCL 0614  
                              _PWM3DCH 0618                                _PWM3DCL 0617  
                              _PWM4DCH 061B                                _PWM4DCL 061A  
                              _SSP1ADD 0212                                _SSP1BUF 0211  
                     ?_TMR2_StartTimer 0070                             ??_AutoMode 005D  
                        ?_PWM1_Disable 0070                        __size_of_Decode 0078  
                        ?_PWM2_Disable 0070                             _manualMode 04C0  
                      __size_of_RunRTC 001D                         _I2C_ReadBuffer 01CC  
                 __size_of_PWM1_Enable 0003                   __size_of_PWM2_Enable 0003  
                      __size_of___wmul 001C                         _I2C_Initialize 0642  
                              __ptext1 04C0                                __ptext2 069D  
                              __ptext3 06A0                                __ptext4 0352  
                              __ptext5 064F                                __ptext6 06A3  
                              __ptext7 06A6                                __ptext8 0567  
                              __ptext9 0659                        ?_PIN_Initialize 0070  
                            _T1CONbits 0018                 __size_of_TimeChangeSec 0086  
                            _T2CONbits 001C                           ?_LedParaInit 0070  
                            _IOCBFbits 0396                              Decode@rcv 007A  
                            CheckSum@i 0075                           ??_CheckSSPIF 004F  
                            _IOCBNbits 0395                              _IOCBPbits 0394  
           __size_of_SYSTEM_Initialize 0021                                clrloop0 068F  
                 end_of_initialization 002D                            _gLedRunPara 0020  
                       ??_PWM1_Disable 004F                         ??_PWM2_Disable 004F  
                         CheckSum@pbuf 0073                 __end_of_I2C_ReadBuffer 0254  
               __end_of_I2C_Initialize 064F                     __end_of_CheckSSPIF 0699  
          ?_INTERRUPT_interruptManager 0070                       I2C_WriteBuffer@i 0054  
                     I2C_WriteBuffer@n 0053                       __CFG_FOSC$INTOSC 0000  
                            _TRISAbits 008C                              _TRISBbits 008D  
                            _TRISCbits 008E                              AutoMode@i 0068  
                       LedUpdatePara@i 0059                          _TimeChangeSec 0254  
                      ?_I2C_ReadBuffer 004F                         __end_of_Decode 0352  
                   I2C_ReadBuffer@pbuf 004F               __size_of_PWM1_Initialize 0007  
                   I2C_ReadBuffer@suba 0053                            ?_manualMode 0070  
                       __end_of_RunRTC 05A5                        ?_I2C_Initialize 0070  
                       __end_of___wmul 05C1                              _LedUpdate 041D  
                        __pidataCOMMON 06AF                     _PWM2_LoadDutyValue 05C1  
                  start_initialization 001F               __size_of_PWM2_Initialize 0007  
             __size_of_TMR0_Initialize 0004                    ?_PWM2_LoadDutyValue 004F  
                    __size_of_CheckSum 0018                         ?_TimeChangeSec 0070  
                    __size_of_AutoMode 019B                               ??_Decode 0076  
                 ??_PWM2_LoadDutyValue 0051                               ??_RunRTC 0070  
             __size_of_PWM3_Initialize 0007               __size_of_TMR1_Initialize 000F  
          PWM2_LoadDutyValue@dutyValue 004F                           ?_SaveLedPara 0070  
                             ??___wmul 0053                              _UpdateRTC 064F  
                            _UpdatePWM 0623                             ?_LedUpdate 0070  
                 __end_of_PWM1_Disable 06A3                   __end_of_PWM2_Disable 06A0  
                          __pbssCOMMON 0079                              ___latbits 0001  
                        __pcstackBANK0 004F               __size_of_PWM4_Initialize 0007  
             __size_of_TMR2_Initialize 000A                   __size_of_LedParaInit 005D  
                  __size_of_manualMode 0046                 __size_of_LedUpdatePara 006E  
                            _gRunState 0035            __size_of_PWM1_LoadDutyValue 0019  
                     ??_PIN_Initialize 004F                             ?_UpdateRTC 0070  
                           ?_UpdatePWM 0070                      ??_PWM1_Initialize 004F  
             __size_of_I2C_WriteBuffer 004F                        I2C_ReadBuffer@i 0055  
                      I2C_ReadBuffer@n 0054               __size_of_TMR1_StartTimer 0003  
 __end_of_InterruptOnChange_Initialize 068E  __size_of_InterruptOnChange_Initialize 0007  
         _InterruptOnChange_Initialize 0687                        ??_TimeChangeSec 0055  
                    ??_TMR0_Initialize 004F                      ??_PWM2_Initialize 004F  
                       ___wmul@product 0053                               _LATAbits 010C  
                             _LATCbits 010E                              clear_ram0 068E  
                             _PIE1bits 0091                          ??_PWM1_Enable 004F  
             __size_of_TMR2_StartTimer 0003                            Decode@index 0079  
                        ??_PWM2_Enable 004F                            CheckSum@len 0070  
                          Decode@state 007B                               _PIR1bits 0011  
                    _OSCCON_Initialize 0663                          _LedUpdatePara 0352  
                          ??_LedUpdate 005D                     ?_OSCCON_Initialize 0070  
                    ??_TMR1_Initialize 004F                      ??_PWM3_Initialize 004F  
                    ___wmul@multiplier 004F                     _TimeChangeSec$1560 005B  
                    SaveLedPara@offset 005A                               _CheckSum 060B  
                             _WPUBbits 020D                    ??_OSCCON_Initialize 004F  
                    I2C_ReadBuffer@len 0050                               _AutoMode 0031  
        ?_InterruptOnChange_Initialize 0070                       ??_I2C_ReadBuffer 0051  
                         LedParaInit@i 0058                      ??_TMR2_Initialize 004F  
                    ??_PWM4_Initialize 004F                       ??_I2C_Initialize 004F  
            __end_of_OSCCON_Initialize 066B                           ??_manualMode 005A  
                             _gLedPara 0044                         ?_LedUpdatePara 0070  
                __size_of_PWM1_Disable 0003                    __end_of_PWM1_Enable 06AF  
                          ??_UpdateRTC 004F                            ??_UpdatePWM 0053  
                __size_of_PWM2_Disable 0003                    __end_of_PWM2_Enable 06AC  
                 __size_of_SaveLedPara 0039                               _gRunPara 0032  
                             __ptext10 0633                               __ptext11 0699  
                             __ptext20 041D                               __ptext12 066B  
                             __ptext21 0506                               __ptext13 0672  
                           _T1GCONbits 0019                               __ptext30 0254  
                             __ptext22 0471                               __ptext14 0679  
                             __ptext31 05A5                               __ptext23 03C0  
                             __ptext15 0680                               __ptext32 06A9  
                             __ptext24 01CC                               __ptext16 05F3  
                             __ptext33 06AC                               __ptext25 0694  
                             __ptext17 0663                               __ptext26 0031  
                             __ptext18 0687                               __ptext35 0588  
                             __ptext27 0623                               __ptext19 0642  
                             __ptext36 02DA                               __ptext28 05C1  
                             __ptext37 060B                               __ptext29 05DA  
                     _SaveLedPara$1168 0057                      ??_I2C_WriteBuffer 0051  
                         _SSP1CON1bits 0215                           _SSP1CON2bits 0216  
                         _SSP1CON3bits 0217                     __end_of_manualMode 0506  
                    ??_TMR1_StartTimer 004F                         CheckSum@result 0074  
                        __size_of_main 0028                           _PWM1_Disable 06A0  
                         _PWM2_Disable 069D                               int$flags 007E  
                    ??_TMR2_StartTimer 004F                           _SSP1STATbits 0214  
                          _OSCSTATbits 009A                             _INTCONbits 000B  
                          _PWM1CONbits 0613                            _PWM2CONbits 0616  
                          _PWM3CONbits 0619                            _PWM4CONbits 061C  
                  I2C_WriteBuffer@pbuf 004F                               intlevel1 0000  
                  I2C_WriteBuffer@suba 0052                      __CFG_CLKOUTEN$OFF 0000  
       ??_InterruptOnChange_Initialize 004F                        _PWM1_Initialize 0680  
                          _PWM1_Enable 06AC                             _OSCCONbits 0099  
                          _PWM2_Enable 06A9                        ??_LedUpdatePara 0053  
           __size_of_OSCCON_Initialize 0008            __size_of_PWM2_LoadDutyValue 0019  
                      SaveLedPara@pbuf 0059                     AutoMode@pendBright 0067  
                   I2C_WriteBuffer@len 0050                             _OPTION_REG 0095  
                        ??_LedParaInit 0056                        _TMR0_Initialize 0699  
                      _PWM2_Initialize 0679                             LedUpdate@i 005E  
                       SaveLedPara@cnt 005B                         SaveLedPara@len 005C  
           __end_of_PWM1_LoadDutyValue 05F3                           _gCurrentTime 002E  
                      _TMR1_Initialize 0633                        _PWM3_Initialize 0672  
